diff -urN socat-1.7.3.4/CHANGES /tmp/socat-vsock/CHANGES
--- socat-1.7.3.4/CHANGES	2020-01-05 16:07:44.000000000 +0100
+++ /tmp/socat-vsock/CHANGES	2020-11-08 15:51:16.460082575 +0100
@@ -1,4 +1,9 @@
 
+New features:
+	Added AF_VSOCK support with VSOCK-CONNECT (VSOCK) and VSOCK-LISTEN
+	(VSOCK-L) addresses.
+	Developed by Stefano Garzarella.
+
 ####################### V 1.7.3.4:
 
 Corrections:
diff -urN socat-1.7.3.4/config.h.in /tmp/socat-vsock/config.h.in
--- socat-1.7.3.4/config.h.in	2020-01-01 14:03:27.000000000 +0100
+++ /tmp/socat-vsock/config.h.in	2020-11-08 15:51:16.463416032 +0100
@@ -264,6 +264,9 @@
 /* Define if you have the <linux/if_tun.h> header file.  */
 #undef HAVE_LINUX_IF_TUN_H
 
+/* Define if you have the <linux/vm_sockets.h> header file.  */
+#undef HAVE_LINUX_VM_SOCKETS_H
+
 /* Define if you have the <netpacket/packet.h> header file.  */
 #undef HAVE_NETPACKET_PACKET_H
 
@@ -624,6 +627,7 @@
 #undef WITH_LISTEN
 #undef WITH_SOCKS4
 #undef WITH_SOCKS4A
+#undef WITH_VSOCK
 #undef WITH_PROXY
 #undef WITH_EXEC
 #undef WITH_SYSTEM
diff -urN socat-1.7.3.4/configure.ac /tmp/socat-vsock/configure.ac
--- socat-1.7.3.4/configure.ac	2020-01-01 14:03:27.000000000 +0100
+++ /tmp/socat-vsock/configure.ac	2020-11-08 15:51:16.466749489 +0100
@@ -349,6 +349,29 @@
 fi
 fi
 
+AC_MSG_CHECKING(whether to include vsock support)
+AC_ARG_ENABLE(vsock, [  --disable-vsock         disable vsock support],
+	      [case "$enableval" in
+	       no) AC_MSG_RESULT(no); WITH_VSOCK= ;;
+	       *) AC_MSG_RESULT(yes); WITH_VSOCK=1 ;;
+	       esac],
+	       [AC_MSG_RESULT(yes);  WITH_VSOCK=1 ])
+if test "$WITH_VSOCK"; then
+  AC_CHECK_HEADER(linux/vm_sockets.h,
+    AC_DEFINE(HAVE_LINUX_VM_SOCKETS_H),
+    [WITH_VSOCK=;
+     AC_MSG_WARN([include file linux/vm_sockets.h not found, disabling vsock])],
+    [AC_INCLUDES_DEFAULT
+    #if HAVE_SYS_SOCKET_H
+    #include <sys/socket.h>
+    #endif
+    ]
+ )
+fi
+if test "$WITH_VSOCK"; then
+   AC_DEFINE(WITH_VSOCK)
+fi
+
 AC_MSG_CHECKING(whether to include listen support)
 AC_ARG_ENABLE(listen, [  --disable-listen        disable listen support],
 	      [case "$enableval" in
--- socat-1.7.3.4/configure	2020-01-05 20:13:23.000000000 +0100
+++ /tmp/socat-vsock/configure	2020-11-08 17:10:19.861830148 +0100
@@ -702,6 +702,7 @@
 enable_tcp
 enable_udp
 enable_sctp
+enable_vsock
 enable_listen
 enable_socks4
 enable_socks4a
@@ -1367,6 +1368,7 @@
   --disable-tcp           disable TCP support
   --disable-udp           disable UDP support
   --disable-sctp           disable SCTP support
+  --disable-vsock         disable vsock support
   --disable-listen        disable listen support
   --disable-socks4        disable socks4 support
   --disable-socks4a       disable socks4a support
@@ -4821,6 +4823,45 @@
 fi
 fi
 
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether to include vsock support" >&5
+$as_echo_n "checking whether to include vsock support... " >&6; }
+# Check whether --enable-vsock was given.
+if test "${enable_vsock+set}" = set; then :
+  enableval=$enable_vsock; case "$enableval" in
+	       no) { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }; WITH_VSOCK= ;;
+	       *) { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }; WITH_VSOCK=1 ;;
+	       esac
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; };  WITH_VSOCK=1
+fi
+
+if test "$WITH_VSOCK"; then
+  ac_fn_c_check_header_compile "$LINENO" "linux/vm_sockets.h" "ac_cv_header_linux_vm_sockets_h" "$ac_includes_default
+    #if HAVE_SYS_SOCKET_H
+    #include <sys/socket.h>
+    #endif
+
+
+"
+if test "x$ac_cv_header_linux_vm_sockets_h" = xyes; then :
+  $as_echo "#define HAVE_LINUX_VM_SOCKETS_H 1" >>confdefs.h
+
+else
+  WITH_VSOCK=;
+     { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: include file linux/vm_sockets.h not found, disabling vsock" >&5
+$as_echo "$as_me: WARNING: include file linux/vm_sockets.h not found, disabling vsock" >&2;}
+fi
+
+
+fi
+if test "$WITH_VSOCK"; then
+   $as_echo "#define WITH_VSOCK 1" >>confdefs.h
+
+fi
+
 { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether to include listen support" >&5
 $as_echo_n "checking whether to include listen support... " >&6; }
 # Check whether --enable-listen was given.
diff -urN socat-1.7.3.4/doc/socat.yo /tmp/socat-vsock/doc/socat.yo
--- socat-1.7.3.4/doc/socat.yo	2019-04-05 22:07:33.000000000 +0200
+++ /tmp/socat-vsock/doc/socat.yo	2020-11-08 15:51:16.466749489 +0100
@@ -1276,6 +1276,37 @@
    link(UNIX-SENDTO)(ADDRESS_UNIX_SENDTO),
    link(GOPEN)(ADDRESS_GOPEN)
 
+label(ADDRESS_VSOCK_CONNECT)dit(bf(tt(VSOCK-CONNECT:<cid>:<port>)))
+   Establishes a VSOCK stream connection to the specified <cid> [link(VSOCK
+   cid)(TYPE_VSOCK_ADDRESS)] and <port> [link(VSOCK port)(TYPE_VSOCK_PORT)].nl()
+   Option groups: link(FD)(GROUP_FD),link(SOCKET)(GROUP_SOCKET),link(CHILD)(GROUP_CHILD),link(RETRY)(GROUP_RETRY) nl()
+   Useful options:
+   link(bind)(OPTION_BIND),
+   link(pf)(OPTION_PROTOCOL_FAMILY),
+   link(connect-timeout)(OPTION_CONNECT_TIMEOUT),
+   link(retry)(OPTION_RETRY),
+   link(readbytes)(OPTION_READBYTES)nl()
+   See also:
+   link(VSOCK-LISTEN)(ADDRESS_VSOCK_LISTEN),
+
+label(ADDRESS_VSOCK_LISTEN)dit(bf(tt(VSOCK-LISTEN:<port>)))
+   Listens on <port> [link(VSOCK port)(TYPE_VSOCK_PORT)] and accepts a
+   VSOCK connection.
+   Note that opening this address usually blocks until a client connects.nl()
+   Option groups: link(FD)(GROUP_FD),link(SOCKET)(GROUP_SOCKET),link(LISTEN)(GROUP_LISTEN),link(CHILD)(GROUP_CHILD),link(RETRY)(GROUP_RETRY) nl()
+   Useful options:
+   link(fork)(OPTION_FORK),
+   link(bind)(OPTION_BIND),
+   link(pf)(OPTION_PROTOCOL_FAMILY),
+   link(max-children)(OPTION_MAX_CHILDREN),
+   link(backlog)(OPTION_BACKLOG),
+   link(su)(OPTION_SUBSTUSER),
+   link(reuseaddr)(OPTION_REUSEADDR),
+   link(retry)(OPTION_RETRY),
+   link(cool-write)(OPTION_COOL_WRITE)nl()
+   See also:
+   link(VSOCK-CONNECT)(ADDRESS_VSOCK_CONNECT)
+
 dit(bf(tt(ABSTRACT-CONNECT:<string>)))
 dit(bf(tt(ABSTRACT-LISTEN:<string>)))
 dit(bf(tt(ABSTRACT-SENDTO:<string>)))
@@ -1808,7 +1839,8 @@
    Binds the socket to the given socket address using the code(bind()) system
    call. The form of <sockname> is socket domain dependent:
    IP4 and IP6 allow the form [hostname|hostaddress][:(service|port)] (link(example)(EXAMPLE_OPTION_BIND_TCP4)),
-   unixdomain() sockets require link(<filename>)(TYPE_FILENAME).
+   unixdomain() sockets require link(<filename>)(TYPE_FILENAME),
+   VSOCK allow the form [cid][:(port)].
 label(OPTION_CONNECT_TIMEOUT)dit(bf(tt(connect-timeout=<seconds>)))
    Abort the connection attempt after <seconds> [link(timeval)(TYPE_TIMEVAL)]
    with error status.
@@ -2890,6 +2922,14 @@
    If the first character is a decimal digit, the value is read with
    code(strtoul()) as unsigned integer specifying a user id. Otherwise, it must
    be an existing user name.
+label(TYPE_VSOCK_ADDRESS)dit(VSOCK cid)
+   A uint32_t (32 bit unsigned number) specifying a VSOCK Context Identifier
+   (CID), read with code(strtoul()).
+   There are several special addresses: VMADDR_CID_ANY (-1U) means any address
+   for binding; VMADDR_CID_HOST (2) is the well-known address of the host.
+label(TYPE_VSOCK_PORT)dit(VSOCK port)
+   A uint32_t (32 bit unsigned number) specifying a VSOCK port, read
+   with code(strtoul()).
 enddit()
 
 
@@ -3293,6 +3333,45 @@
 may thus cause packet loss.
 
 
+label(EXAMPLE_ADDRESS_VSOCK)
+dit(bf(tt(socat - VSOCK-CONNECT:2:1234)))
+
+establishes a VSOCK connection with the host (host is always reachable with
+the well-know CID=2) on 1234 port.
+
+
+dit(bf(tt(socat - VSOCK-LISTEN:1234)))
+
+listens for a VSOCK connection on 1234 port.
+
+
+dit(bf(tt(socat - VSOCK-CONNECT:31:4321,bind:5555)))
+
+establishes a VSOCK connection with the guest that have CID=31 on 1234 port,
+binding the local socket to the 5555 port.
+
+
+dit(bf(tt(socat VSOCK-LISTEN:3333,reuseaddr,fork VSOCK-CONNECT:42,3333)))
+
+starts a forwarder that accepts VSOCK connections on port 3333, and directs
+them to the guest with CID=42 on the same port.
+
+
+dit(bf(tt(socat VSOCK-LISTEN:22,reuseaddr,fork TCP:localhost:22)))
+
+forwards VSOCK connections from 22 port to the local SSH server.
+Running this in a VM allows you to connect via SSH from the host using VSOCK,
+as in the example below.
+
+
+dit(bf(tt(socat TCP4-LISTEN:22222,reuseaddr,fork VSOCK-CONNECT:33:22)))
+
+forwards TCP connections from 22222 port to the guest with CID=33 listening on
+VSOCK port 22.
+Running this in the host, allows you to connect via SSH running
+"ssh -p 22222 user@localhost", if the guest runs the example above.
+
+
 label(EXAMPLE_INTERFACE)
 dit(bf(tt(socat PTY,link=/var/run/ppp,rawer INTERFACE:hdlc0)))
 
diff -urN socat-1.7.3.4/EXAMPLES /tmp/socat-vsock/EXAMPLES
--- socat-1.7.3.4/EXAMPLES	2016-07-21 23:28:19.000000000 +0200
+++ /tmp/socat-vsock/EXAMPLES	2020-11-08 15:51:16.463416032 +0100
@@ -232,6 +232,25 @@
 
 # socat readline TCP6:[::1]:21	# if your inetd/ftp is listening on ip6
 
+//////////////////////////////////////////////////////////////////////////////
+// VSOCK
+# start a linux VM with cid=21
+#    qemu-system-x86_64 -m 1G -smp 2 -cpu host -M accel=kvm \
+#     -drive if=virtio,file=/path/to/fedora.img,format=qcow2  \
+#     -device vhost-vsock-pci,guest-cid=21
+
+# guest listens on port 1234 and host connects to it
+guest$ socat - VSOCK-LISTEN:1234
+host$ socat - VSOCK-CONNECT:21:1234
+
+# host (well know CID_HOST = 2) listens on port 4321 and guest connects to it
+host$ socat - VSOCK-LISTEN:4321
+guest$ socat - VSOCK-CONNECT:2:4321
+
+# ssh over vsock (guest-cid = 21)
+guest$ socat VSOCK-LISTEN:22,reuseaddr,fork TCP:localhost:22
+host$ socat TCP4-LISTEN:22222,reuseaddr,fork VSOCK-CONNECT:21:22
+host$ ssh -p 22222 user@localhost
 
 ///////////////////////////////////////////////////////////////////////////////
 // application server solutions
diff -urN socat-1.7.3.4/Makefile.in /tmp/socat-vsock/Makefile.in
--- socat-1.7.3.4/Makefile.in	2020-01-04 11:33:07.000000000 +0100
+++ /tmp/socat-vsock/Makefile.in	2020-11-08 15:51:16.463416032 +0100
@@ -45,7 +45,7 @@
 	xiolayer.c xioshutdown.c xioclose.c xioexit.c \
 	xio-process.c xio-fd.c xio-fdnum.c xio-stdio.c xio-pipe.c \
 	xio-gopen.c xio-creat.c xio-file.c xio-named.c \
-	xio-socket.c xio-interface.c xio-listen.c xio-unix.c \
+	xio-socket.c xio-interface.c xio-listen.c xio-unix.c xio-vsock.c \
 	xio-ip.c xio-ip4.c xio-ip6.c xio-ipapp.c xio-tcp.c \
 	xio-sctp.c xio-rawip.c \
 	xio-socks.c xio-proxy.c xio-udp.c \
@@ -63,7 +63,7 @@
 	xioconfig.h mytypes.h xioopts.h xiodiag.h xiohelp.h xiosysincludes.h \
 	xiomodes.h xiolayer.h xio-process.h xio-fd.h xio-fdnum.h xio-stdio.h \
 	xio-named.h xio-file.h xio-creat.h xio-gopen.h xio-pipe.h \
-	xio-socket.h xio-interface.h xio-listen.h xio-unix.h \
+	xio-socket.h xio-interface.h xio-listen.h xio-unix.h xio-vsock.h \
 	xio-ip.h xio-ip4.h xio-ip6.h xio-rawip.h \
 	xio-ipapp.h xio-tcp.h xio-udp.h xio-sctp.h \
 	xio-socks.h xio-proxy.h xio-progcall.h xio-exec.h \
diff -urN socat-1.7.3.4/socat.c /tmp/socat-vsock/socat.c
--- socat-1.7.3.4/socat.c	2020-01-04 10:26:26.000000000 +0100
+++ /tmp/socat-vsock/socat.c	2020-11-08 15:51:16.470082946 +0100
@@ -498,6 +498,11 @@
 #else
    fputs("  #undef WITH_SOCKS4A\n", fd);
 #endif
+#ifdef WITH_VSOCK
+   fprintf(fd, "  #define WITH_VSOCK %d\n", WITH_VSOCK);
+#else
+   fputs("  #undef WITH_VSOCK\n", fd);
+#endif
 #ifdef WITH_PROXY
    fprintf(fd, "  #define WITH_PROXY %d\n", WITH_PROXY);
 #else
diff -urN socat-1.7.3.4/sysincludes.h /tmp/socat-vsock/sysincludes.h
--- socat-1.7.3.4/sysincludes.h	2017-01-06 22:51:24.000000000 +0100
+++ /tmp/socat-vsock/sysincludes.h	2020-11-08 15:51:16.470082946 +0100
@@ -185,5 +185,8 @@
 #include <openssl/err.h>
 #include <openssl/rand.h>
 #endif
+#if HAVE_LINUX_VM_SOCKETS_H
+#include <linux/vm_sockets.h>
+#endif
 
 #endif /* !defined(__sysincludes_h_included) */
diff -urN socat-1.7.3.4/sysutils.c /tmp/socat-vsock/sysutils.c
--- socat-1.7.3.4/sysutils.c	2020-01-01 14:02:06.000000000 +0100
+++ /tmp/socat-vsock/sysutils.c	2020-11-08 15:51:16.470082946 +0100
@@ -205,6 +205,10 @@
    case AF_INET6: sockaddr_inet6_info(&sau->ip6, cp, blen);
       break;
 #endif
+#if WITH_VSOCK
+   case AF_VSOCK: sockaddr_vm_info(&sau->vm, cp, blen);
+      break;
+#endif
    default:
       n = xio_snprintf(cp, blen, "AF=%d ", sa->sa_family);
       if (n < 0 || n >= blen) {
@@ -297,6 +301,43 @@
 }
 #endif /* WITH_IP4 */
 
+#if WITH_VSOCK
+char *sockaddr_vm_info(const struct sockaddr_vm *sa, char *buff, size_t blen) {
+   if (xio_snprintf(buff, blen, "cid:%u port:%u", sa->svm_cid, sa->svm_port) >= blen) {
+      Warn("sockaddr_vm_info(): buffer too short");
+      buff[blen-1] = '\0';
+   }
+   return buff;
+}
+
+int sockaddr_vm_parse(struct sockaddr_vm *sa, const char *cid_str,
+                      const char *port_str)
+{
+   char *garbage = NULL;
+   if (!cid_str) {
+      sa->svm_cid = VMADDR_CID_ANY;
+   } else {
+      sa->svm_cid = strtoul(cid_str, &garbage, 0);
+      if (*garbage != '\0') {
+         Error1("sockaddr_vm - garbage in cid: \"%s\"", garbage);
+         return -EINVAL;
+      }
+   }
+
+   if (!port_str) {
+      sa->svm_port = VMADDR_PORT_ANY;
+   } else {
+      sa->svm_port = strtoul(port_str, &garbage, 0);
+      if (*garbage != '\0') {
+         Error1("sockaddr_vm - garbage in port: \"%s\"", garbage);
+         return -EINVAL;
+      }
+   }
+
+   return 0;
+}
+#endif /* WITH_VSOCK */
+
 #if !HAVE_INET_NTOP
 /* http://www.opengroup.org/onlinepubs/000095399/functions/inet_ntop.html */
 const char *inet_ntop(int pf, const void *binaddr,
diff -urN socat-1.7.3.4/sysutils.h /tmp/socat-vsock/sysutils.h
--- socat-1.7.3.4/sysutils.h	2017-01-06 21:58:40.000000000 +0100
+++ /tmp/socat-vsock/sysutils.h	2020-11-08 15:51:16.470082946 +0100
@@ -27,6 +27,9 @@
 #if WITH_IP6
    struct sockaddr_in6 ip6;
 #endif /* WITH_IP6 */
+#if WITH_VSOCK
+   struct sockaddr_vm vm;
+#endif /* WITH_VSOCK */
 #if WITH_INTERFACE
    struct sockaddr_ll ll;
 #endif
@@ -68,6 +71,11 @@
 #if WITH_IP6
 extern char *sockaddr_inet6_info(const struct sockaddr_in6 *sa, char *buff, size_t blen);
 #endif /* WITH_IP6 */
+#if WITH_VSOCK
+extern char *sockaddr_vm_info(const struct sockaddr_vm *sa, char *buff, size_t blen);
+extern int sockaddr_vm_parse(struct sockaddr_vm *sa, const char *cid_str,
+                             const char *port_str);
+#endif /* WITH_VSOCK */
 #if !HAVE_INET_NTOP
 extern const char *inet_ntop(int pf, const void *binaddr,
 			     char *addrtext, socklen_t textlen);
diff -urN socat-1.7.3.4/xio-ip.c /tmp/socat-vsock/xio-ip.c
--- socat-1.7.3.4/xio-ip.c	2020-01-01 14:29:49.000000000 +0100
+++ /tmp/socat-vsock/xio-ip.c	2020-11-08 15:51:16.476749860 +0100
@@ -160,6 +160,17 @@
    if (service && service[0]=='\0') {
       Error("empty port/service");
    }
+
+#ifdef WITH_VSOCK
+   if (family == AF_VSOCK) {
+      error_num = sockaddr_vm_parse(&sau->vm, node, service);
+      if (error_num < 0)
+         return STAT_NORETRY;
+
+      return STAT_OK;
+   }
+#endif /* WITH_VSOCK */
+
    /* if service is numeric we don't want to have a lookup (might take long
       with NIS), so we handle this specially */
    if (service && isdigit(service[0]&0xff)) {
diff -urN socat-1.7.3.4/xiomodes.h /tmp/socat-vsock/xiomodes.h
--- socat-1.7.3.4/xiomodes.h	2017-01-06 21:58:40.000000000 +0100
+++ /tmp/socat-vsock/xiomodes.h	2020-11-08 15:51:16.480083317 +0100
@@ -32,6 +32,7 @@
 #include "xio-sctp.h"
 #include "xio-socks.h"
 #include "xio-proxy.h"
+#include "xio-vsock.h"
 #endif /* _WITH_SOCKET */
 #include "xio-progcall.h"
 #include "xio-exec.h"
diff -urN socat-1.7.3.4/xioopen.c /tmp/socat-vsock/xioopen.c
--- socat-1.7.3.4/xioopen.c	2017-01-06 21:58:40.000000000 +0100
+++ /tmp/socat-vsock/xioopen.c	2020-11-08 15:51:16.480083317 +0100
@@ -292,6 +292,14 @@
    { "unix-send",	&xioaddr_unix_sendto },
    { "unix-sendto",	&xioaddr_unix_sendto },
 #endif
+#if WITH_VSOCK
+   { "vsock", 		&addr_vsock_connect },
+   { "vsock-connect",	&addr_vsock_connect },
+#endif
+#if WITH_VSOCK && WITH_LISTEN
+   { "vsock-l",		&addr_vsock_listen },
+   { "vsock-listen",	&addr_vsock_listen },
+#endif
 #else /* !0 */
 #  if WITH_INTEGRATE
 #    include "xiointegrate.c"
diff -urN socat-1.7.3.4/xioopts.c /tmp/socat-vsock/xioopts.c
--- socat-1.7.3.4/xioopts.c	2019-12-30 10:09:23.000000000 +0100
+++ /tmp/socat-vsock/xioopts.c	2020-11-08 15:51:16.480083317 +0100
@@ -2904,7 +2904,10 @@
       }
       break;
 
-#if WITH_IP4 || WITH_IP6
+#if WITH_IP4 || WITH_IP6 || WITH_VSOCK
+#if WITH_VSOCK
+   case AF_VSOCK:
+#endif
 #if WITH_IP4
    case AF_INET:
 #endif
diff -urN socat-1.7.3.4/xio-vsock.c /tmp/socat-vsock/xio-vsock.c
--- socat-1.7.3.4/xio-vsock.c	1970-01-01 01:00:00.000000000 +0100
+++ /tmp/socat-vsock/xio-vsock.c	2020-11-08 15:51:16.480083317 +0100
@@ -0,0 +1,157 @@
+/* source: xio-vsock.c */
+/* Copyright Gerhard Rieger and contributors (see file CHANGES) */
+/* Author: Stefano Garzarella <sgarzare@redhat.com> */
+/* Published under the GNU General Public License V.2, see file COPYING */
+
+/* this file contains the source for opening addresses of VSOCK socket type */
+
+#include "xiosysincludes.h"
+
+#ifdef WITH_VSOCK
+#include "xioopen.h"
+#include "xio-listen.h"
+#include "xio-socket.h"
+#include "xio-vsock.h"
+
+static int xioopen_vsock_connect(int argc, const char *argv[], struct opt *opts,
+        int xioflags, xiofile_t *xxfd, unsigned groups, int abstract,
+        int dummy2, int dummy3);
+static int xioopen_vsock_listen(int argc, const char *argv[], struct opt *opts,
+        int xioflags, xiofile_t *xxfd, unsigned groups, int abstract,
+        int dummy2, int dummy3);
+
+const struct addrdesc addr_vsock_connect = { "vsock-connect", 1 + XIO_RDWR,
+    xioopen_vsock_connect,
+    GROUP_FD|GROUP_SOCKET|GROUP_CHILD|GROUP_RETRY,
+    0, 0, 0 HELP(":<cid>:<port>") };
+#if WITH_LISTEN
+const struct addrdesc addr_vsock_listen  = { "vsock-listen", 1 + XIO_RDWR,
+    xioopen_vsock_listen,
+    GROUP_FD|GROUP_SOCKET|GROUP_LISTEN|GROUP_CHILD|GROUP_RETRY,
+    0, 0, 0 HELP(":<port>") };
+#endif /* WITH_LISTEN */
+
+static int vsock_addr_init(struct sockaddr_vm *sa, const char *cid_str,
+        const char *port_str) {
+   int ret;
+
+   memset(sa, 0, sizeof(*sa));
+
+   sa->svm_family = AF_VSOCK;
+   ret = sockaddr_vm_parse(sa, cid_str, port_str);
+   if (ret < 0)
+      return STAT_NORETRY;
+
+   return STAT_OK;
+}
+
+static int vsock_init(struct opt *opts, struct single *xfd) {
+
+   xfd->howtoend = END_SHUTDOWN;
+
+   if (applyopts_single(xfd, opts, PH_INIT) < 0)
+      return STAT_NORETRY;
+
+   applyopts(-1, opts, PH_INIT);
+   applyopts(-1, opts, PH_EARLY);
+
+   xfd->dtype = XIODATA_STREAM;
+
+   return STAT_OK;
+}
+
+static int xioopen_vsock_connect(int argc, const char *argv[], struct opt *opts,
+        int xioflags, xiofile_t *xxfd, unsigned groups,
+        int abstract, int dummy2, int dummy3) {
+   /* we expect the form :cid:port */
+   struct single *xfd = &xxfd->stream;
+   struct sockaddr_vm sa, sa_local;
+   socklen_t sa_len = sizeof(sa);
+   bool needbind = false;
+   int socktype = SOCK_STREAM;
+   int pf = PF_VSOCK;
+   int protocol = 0;
+   int ret;
+
+   if (argc != 3) {
+      Error2("%s: wrong number of parameters (%d instead of 2)",
+	     argv[0], argc-1);
+      return STAT_NORETRY;
+   }
+
+   ret = vsock_addr_init(&sa, argv[1], argv[2]);
+   if (ret) {
+      return ret;
+   }
+
+   ret = vsock_init(opts, xfd);
+   if (ret) {
+      return ret;
+   }
+
+   ret = retropt_bind(opts, pf, socktype, protocol,
+                      (struct sockaddr *)&sa_local, &sa_len, 3, 0, 0);
+   if (ret == STAT_NORETRY)
+      return ret;
+   if (ret == STAT_OK)
+      needbind = true;
+
+   ret = xioopen_connect(xfd, needbind ? (struct sockaddr *)&sa_local : NULL,
+                         sa_len, (struct sockaddr *)&sa, sizeof(sa),
+                         opts, pf, socktype, protocol, false);
+   if (ret)
+      return ret;
+
+   ret = _xio_openlate(xfd, opts);
+   if (ret < 0)
+       return ret;
+
+   return STAT_OK;
+}
+
+#if WITH_LISTEN
+static int xioopen_vsock_listen(int argc, const char *argv[], struct opt *opts,
+        int xioflags, xiofile_t *xxfd, unsigned groups, int abstract,
+        int dummy2, int dummy3) {
+   /* we expect the form :port */
+   struct single *xfd = &xxfd->stream;
+   struct sockaddr_vm sa, sa_bind;
+   socklen_t sa_len = sizeof(sa_bind);
+   struct opt *opts0;
+   int socktype = SOCK_STREAM;
+   int pf = PF_VSOCK;
+   int protocol = 0;
+   int ret;
+
+   if (argc != 2) {
+      Error2("%s: wrong number of parameters (%d instead of 1)",
+	     argv[0], argc-1);
+      return STAT_NORETRY;
+   }
+
+   ret = vsock_addr_init(&sa, NULL, argv[1]);
+   if (ret) {
+      return ret;
+   }
+
+   ret = vsock_init(opts, xfd);
+   if (ret) {
+      return ret;
+   }
+
+   opts0 = copyopts(opts, GROUP_ALL);
+
+   ret = retropt_bind(opts, pf, socktype, protocol, (struct sockaddr *)&sa_bind,
+                      &sa_len, 1, 0, 0);
+   if (ret == STAT_NORETRY)
+       return ret;
+   if (ret == STAT_OK)
+       sa.svm_cid = sa_bind.svm_cid;
+
+   /* this may fork() */
+   return xioopen_listen(xfd, xioflags, (struct sockaddr *)&sa, sizeof(sa),
+                         opts, opts0, pf, socktype, protocol);
+}
+
+#endif /* WITH_LISTEN */
+#endif /* WITH_VSOCK */
diff -urN socat-1.7.3.4/xio-vsock.h /tmp/socat-vsock/xio-vsock.h
--- socat-1.7.3.4/xio-vsock.h	1970-01-01 01:00:00.000000000 +0100
+++ /tmp/socat-vsock/xio-vsock.h	2020-11-08 15:51:16.480083317 +0100
@@ -0,0 +1,11 @@
+/* source: xio-vsock.h */
+/* Copyright Gerhard Rieger and contributors (see file CHANGES) */
+/* Author: Stefano Garzarella <sgarzare@redhat.com> */
+/* Published under the GNU General Public License V.2, see file COPYING */
+#ifndef __xio_vsock_h_included
+#define __xio_vsock_h_included 1
+
+extern const struct addrdesc addr_vsock_connect;
+extern const struct addrdesc addr_vsock_listen;
+
+#endif /* !defined(__xio_vsock_h_included) */
diff -ur socat-1.7.3.4/doc/socat.1 /tmp/socat-vsock/doc/socat.1
--- socat-1.7.3.4/doc/socat.1	2019-04-05 22:11:12.000000000 +0200
+++ /tmp/socat-vsock/doc/socat.1	2020-11-08 16:21:36.733388488 +0100
@@ -5,15 +5,15 @@
 socat \- Multipurpose relay (SOcket CAT)
 .PP 
 .SH "SYNOPSIS"
-\f(CWsocat [options] <address> <address>\fP
+socat [options] <address> <address>
 .br 
-\f(CWsocat \-V\fP
+socat \-V
 .br 
-\f(CWsocat \-h[h[h]] | \-?[?[?]]\fP
+socat \-h[h[h]] | \-?[?[?]]
 .br 
-\f(CWfilan\fP
+filan
 .br 
-\f(CWprocan\fP
+procan
 .PP 
 .SH "DESCRIPTION"
 
@@ -66,113 +66,114 @@
 program\&. They have nothing to do with so called
 address options that are used as parts of address specifications\&.
 .PP 
-.IP "\fB\f(CW\-V\fP\fP"
+startdit()
+.IP "\fB\-V\fP"
 Print version and available feature information to stdout, and exit\&.
-.IP "\fB\f(CW\-h | \-?\fP\fP"
+.IP "\fB\-h | \-?\fP"
 Print a help text to stdout describing command line options and available address
 types, and exit\&.
-.IP "\fB\f(CW\-hh | \-??\fP\fP"
+.IP "\fB\-hh | \-??\fP"
 Like \-h, plus a list of the short names of all available address options\&. Some options are
 platform dependend, so this output is helpful for checking the particular
 implementation\&. 
-.IP "\fB\f(CW\-hhh | \-???\fP\fP"
+.IP "\fB\-hhh | \-???\fP"
 Like \-hh, plus a list of all available address option names\&.
-.IP "\fB\f(CW\-d\fP\fP"
+.IP "\fB\-d\fP"
 Without this option, only fatal and error messages are generated; applying
 this option also prints warning messages\&. See DIAGNOSTICS
 for more information\&. 
-.IP "\fB\f(CW\-d \-d\fP\fP"
+.IP "\fB\-d \-d\fP"
 Prints fatal, error, warning, and notice messages\&.
-.IP "\fB\f(CW\-d \-d \-d\fP\fP"
+.IP "\fB\-d \-d \-d\fP"
 Prints fatal, error, warning, notice, and info messages\&.
-.IP "\fB\f(CW\-d \-d \-d \-d\fP\fP"
+.IP "\fB\-d \-d \-d \-d\fP"
 Prints fatal, error, warning, notice, info, and debug
 messages\&. 
-.IP "\fB\f(CW\-D\fP\fP"
+.IP "\fB\-D\fP"
 Logs information about file descriptors before starting the transfer phase\&.
-.IP "\fB\f(CW\-ly[<facility>]\fP\fP"
+.IP "\fB\-ly[<facility>]\fP"
 Writes messages to syslog instead of stderr; severity as defined with \-d
 option\&. With optional <facility>, the syslog type can
 be selected, default is \(dq\&daemon\(dq\&\&. Third party libraries might not obey this
 option\&.
-.IP "\fB\f(CW\-lf\fP\fP\f(CW <logfile>\fP"
+.IP "\fB\-lf\fP <logfile>"
 Writes messages to <logfile> [filename] instead of
 stderr\&. Some third party libraries, in particular libwrap, might not obey
 this option\&.
-.IP "\fB\f(CW\-ls\fP\fP"
+.IP "\fB\-ls\fP"
 Writes messages to stderr (this is the default)\&. Some third party libraries 
 might not obey this option, in particular libwrap appears to only log to
 syslog\&. 
-.IP "\fB\f(CW\-lp\fP\fP\f(CW<progname>\fP"
+.IP "\fB\-lp\fP<progname>"
 Overrides the program name printed in error messages and used for
 constructing environment variable names\&.
-.IP "\fB\f(CW\-lu\fP\fP"
+.IP "\fB\-lu\fP"
 Extends the timestamp of error messages to microsecond resolution\&. Does not
 work when logging to syslog\&.
-.IP "\fB\f(CW\-lm[<facility>]\fP\fP"
+.IP "\fB\-lm[<facility>]\fP"
 Mixed log mode\&. During startup messages are printed to stderr; when \fBsocat\fP 
 starts the transfer phase loop or daemon mode (i\&.e\&. after opening all
 streams and before starting data transfer, or, with listening sockets with
 fork option, before the first accept call), it switches logging to syslog\&. 
 With optional <facility>, the syslog type can be
 selected, default is \(dq\&daemon\(dq\&\&. 
-.IP "\fB\f(CW\-lh\fP\fP"
+.IP "\fB\-lh\fP"
 Adds hostname to log messages\&. Uses the value from environment variable
-HOSTNAME or the value retrieved with \f(CWuname()\fP if HOSTNAME is not set\&.
-.IP "\fB\f(CW\-v\fP\fP"
+HOSTNAME or the value retrieved with uname() if HOSTNAME is not set\&.
+.IP "\fB\-v\fP"
 Writes the transferred data not only to their target streams, but also to
 stderr\&. The output format is text with some conversions for readability, and
 prefixed with \(dq\&> \(dq\& or \(dq\&< \(dq\& indicating flow directions\&.
-.IP "\fB\f(CW\-x\fP\fP"
+.IP "\fB\-x\fP"
 Writes the transferred data not only to their target streams, but also to
 stderr\&. The output format is hexadecimal, prefixed with \(dq\&> \(dq\& or \(dq\&< \(dq\&
 indicating flow directions\&. Can be combined with 
 \f(CW\-v\fP
 \&.
-.IP "\fB\f(CW\-b\fP\fP\f(CW<size>\fP"
+.IP "\fB\-b\fP<size>"
 Sets the data transfer block <size> [size_t]\&.
 At most <size> bytes are transferred per step\&. Default is 8192 bytes\&. 
-.IP "\fB\f(CW\-s\fP\fP"
+.IP "\fB\-s\fP"
 By default, \fBsocat\fP terminates when an error occurred to prevent the process
 from running when some option could not be applied\&. With this
 option, \fBsocat\fP is sloppy with errors and tries to continue\&. Even with this
 option, socat will exit on fatals, and will abort connection attempts when
 security checks failed\&.
-.IP "\fB\f(CW\-t\fP\fP\f(CW<timeout>\fP"
+.IP "\fB\-t\fP<timeout>"
 When one channel has reached EOF, the write part of the other channel is shut
 down\&. Then, \fBsocat\fP waits <timeout> [timeval] seconds
 before terminating\&. Default is 0\&.5 seconds\&. This timeout only applies to
 addresses where write and read part can be closed independently\&. When during
 the timeout interval the read part gives EOF, socat terminates without
 awaiting the timeout\&.
-.IP "\fB\f(CW\-T\fP\fP\f(CW<timeout>\fP"
+.IP "\fB\-T\fP<timeout>"
 Total inactivity timeout: when socat is already in the transfer loop and
 nothing has happened for <timeout> [timeval] seconds
 (no data arrived, no interrupt occurred\&.\&.\&.) then it terminates\&.
 Useful with protocols like UDP that cannot transfer EOF\&.
-.IP "\fB\f(CW\-u\fP\fP"
+.IP "\fB\-u\fP"
 Uses unidirectional mode\&. The first address is only used for reading, and the
 second address is only used for writing (example)\&. 
-.IP "\fB\f(CW\-U\fP\fP"
+.IP "\fB\-U\fP"
 Uses unidirectional mode in reverse direction\&. The first address is only
 used for writing, and the second address is only used for reading\&. 
-.IP "\fB\f(CW\-g\fP\fP"
+.IP "\fB\-g\fP"
 During address option parsing, don\(cq\&t check if the option is considered
 useful in the given address environment\&. Use it if you want to force, e\&.g\&.,
 appliance of a socket option to a serial device\&.
-.IP "\fB\f(CW\-L\fP\fP\f(CW<lockfile>\fP"
+.IP "\fB\-L\fP<lockfile>"
 If lockfile exists, exits with error\&. If lockfile does not exist, creates it
 and continues, unlinks lockfile on exit\&.
-.IP "\fB\f(CW\-W\fP\fP\f(CW<lockfile>\fP"
+.IP "\fB\-W\fP<lockfile>"
 If lockfile exists, waits until it disappears\&. When lockfile does not exist,
 creates it and continues, unlinks lockfile on exit\&.
-.IP "\fB\f(CW\-4\fP\fP"
+.IP "\fB\-4\fP"
 Use IP version 4 in case that the addresses do not implicitly or explicitly
 specify a version; this is the default\&.
-.IP "\fB\f(CW\-6\fP\fP"
+.IP "\fB\-6\fP"
 Use IP version 6 in case that the addresses do not implicitly or explicitly
 specify a version\&.
-
+enddit()
 .PP 
 .SH "ADDRESS SPECIFICATIONS"
 
@@ -234,7 +235,8 @@
 This section describes the available address types with their keywords,
 parameters, and semantics\&.
 .PP 
-.IP "\fB\f(CWCREATE:<filename>\fP\fP"
+startdit()
+.IP "\fBCREATE:<filename>\fP"
 Opens <filename> with 
 \f(CWcreat()\fP
 and uses the file
@@ -264,7 +266,7 @@
 append
 .br 
 See also: OPEN, GOPEN
-.IP "\fB\f(CWEXEC:<command\-line>\fP\fP"
+.IP "\fBEXEC:<command\-line>\fP"
 Forks a sub process that establishes communication with its parent process
 and invokes the specified program with 
 \f(CWexecvp()\fP
@@ -302,7 +304,7 @@
 sigquit
 .br 
 See also: SYSTEM
-.IP "\fB\f(CWFD:<fdnum>\fP\fP"
+.IP "\fBFD:<fdnum>\fP"
 Uses the file descriptor <fdnum>\&. It must already exist as
 valid UN*X file descriptor\&.
 .br 
@@ -313,7 +315,7 @@
 STDIN,
 STDOUT,
 STDERR 
-.IP "\fB\f(CWGOPEN:<filename>\fP\fP"
+.IP "\fBGOPEN:<filename>\fP"
 (Generic open) This address type tries to handle any file system entry
 except directories usefully\&. <filename> may be a
 relative or absolute path\&. If it already exists, its type is checked\&. 
@@ -334,8 +336,8 @@
 OPEN,
 CREATE,
 UNIX\-CONNECT
-.IP 
-.IP "\fB\f(CWIP\-SENDTO:<host>:<protocol>\fP\fP"
+.PP 
+.IP "\fBIP\-SENDTO:<host>:<protocol>\fP"
 Opens a raw IP socket\&. Depending on host specification or option pf, IP protocol version
 4 or 6 is used\&. It uses <protocol> to send packets
 to <host> [IP address] and receives packets from
@@ -356,7 +358,7 @@
 IP\-RECV,
 UDP\-SENDTO,
 UNIX\-SENDTO
-.IP "\fB\f(CWINTERFACE:<interface>\fP\fP"
+.IP "\fBINTERFACE:<interface>\fP"
 Communicates with a network connected on an interface using raw packets
 including link level data\&. <interface> is the name of
 the network interface\&. Currently only available on Linux\&.
@@ -367,19 +369,19 @@
 type
 .br 
 See also: ip\-recv
-.IP "\fB\f(CWIP4\-SENDTO:<host>:<protocol>\fP\fP"
+.IP "\fBIP4\-SENDTO:<host>:<protocol>\fP"
 Like IP\-SENDTO, but always uses IPv4\&.
 .br 
 Option groups: FD,SOCKET,IP4 
 .br 
-.IP "\fB\f(CWIP6\-SENDTO:<host>:<protocol>\fP\fP"
+.IP "\fBIP6\-SENDTO:<host>:<protocol>\fP"
 Like IP\-SENDTO, but always uses IPv6\&.
 .br 
 Option groups: FD,SOCKET,IP6 
 .br 
 
-.IP 
-.IP "\fB\f(CWIP\-DATAGRAM:<address>:<protocol>\fP\fP"
+.PP 
+.IP "\fBIP\-DATAGRAM:<address>:<protocol>\fP"
 Sends outgoing data to the specified address which may in particular be a
 broadcast or multicast address\&. Packets arriving on the local socket are
 checked if their source addresses match
@@ -410,21 +412,21 @@
 IP\-RECVFROM,
 IP\-RECV,
 UDP\-DATAGRAM
-.IP "\fB\f(CWIP4\-DATAGRAM:<host>:<protocol>\fP\fP"
+.IP "\fBIP4\-DATAGRAM:<host>:<protocol>\fP"
 Like IP\-DATAGRAM, but always uses IPv4\&.
 (example)
 .br 
 Option groups: FD,SOCKET,IP4,RANGE 
 .br 
-.IP "\fB\f(CWIP6\-DATAGRAM:<host>:<protocol>\fP\fP"
+.IP "\fBIP6\-DATAGRAM:<host>:<protocol>\fP"
 Like IP\-DATAGRAM, but always uses IPv6\&. Please
 note that IPv6 does not know broadcasts\&.
 .br 
 Option groups: FD,SOCKET,IP6,RANGE 
 .br 
 
-.IP 
-.IP "\fB\f(CWIP\-RECVFROM:<protocol>\fP\fP"
+.PP 
+.IP "\fBIP\-RECVFROM:<protocol>\fP"
 Opens a raw IP socket of <protocol>\&. Depending on option pf, IP protocol version
 4 or 6 is used\&. It receives one packet from an unspecified peer and may send one or more answer packets to that peer\&.
 This mode is particularly useful with fork option where each arriving packet \- from arbitrary peers \- is handled by its own sub process\&.
@@ -455,19 +457,19 @@
 IP\-RECV,
 UDP\-RECVFROM,
 UNIX\-RECVFROM 
-.IP "\fB\f(CWIP4\-RECVFROM:<protocol>\fP\fP"
+.IP "\fBIP4\-RECVFROM:<protocol>\fP"
 Like IP\-RECVFROM, but always uses IPv4\&.
 .br 
 Option groups: FD,SOCKET,IP4,CHILD,RANGE 
 .br 
-.IP "\fB\f(CWIP6\-RECVFROM:<protocol>\fP\fP"
+.IP "\fBIP6\-RECVFROM:<protocol>\fP"
 Like IP\-RECVFROM, but always uses IPv6\&.
 .br 
 Option groups: FD,SOCKET,IP6,CHILD,RANGE 
 .br 
 
-.IP 
-.IP "\fB\f(CWIP\-RECV:<protocol>\fP\fP"
+.PP 
+.IP "\fBIP\-RECV:<protocol>\fP"
 Opens a raw IP socket of <protocol>\&. Depending on option pf, IP protocol version
 4 or 6 is used\&. It receives packets from multiple unspecified peers and merges the data\&.
 No replies are possible\&.
@@ -488,19 +490,19 @@
 IP\-RECVFROM,
 UDP\-RECV,
 UNIX\-RECV 
-.IP "\fB\f(CWIP4\-RECV:<protocol>\fP\fP"
+.IP "\fBIP4\-RECV:<protocol>\fP"
 Like IP\-RECV, but always uses IPv4\&.
 .br 
 Option groups: FD,SOCKET,IP4,RANGE 
 .br 
-.IP "\fB\f(CWIP6\-RECV:<protocol>\fP\fP"
+.IP "\fBIP6\-RECV:<protocol>\fP"
 Like IP\-RECV, but always uses IPv6\&.
 .br 
 Option groups: FD,SOCKET,IP6,RANGE 
 .br 
 
-.IP 
-.IP "\fB\f(CWOPEN:<filename>\fP\fP"
+.PP 
+.IP "\fBOPEN:<filename>\fP"
 Opens <filename> using the 
 \f(CWopen()\fP
 system call
@@ -527,7 +529,7 @@
 CREATE,
 GOPEN,
 UNIX\-CONNECT
-.IP "\fB\f(CWOPENSSL:<host>:<port>\fP\fP"
+.IP "\fBOPENSSL:<host>:<port>\fP"
 Tries to establish a SSL connection to <port> [TCP
 service] on  
 <host> [IP address] using TCP/IP version 4 or 6
@@ -566,7 +568,7 @@
 See also:
 OPENSSL\-LISTEN,
 TCP
-.IP "\fB\f(CWOPENSSL\-LISTEN:<port>\fP\fP"
+.IP "\fBOPENSSL\-LISTEN:<port>\fP"
 Listens on tcp <port> [TCP service]\&.
 The IP version is 4 or the one specified with
 pf\&. When a
@@ -601,7 +603,7 @@
 See also:
 OPENSSL,
 TCP\-LISTEN
-.IP "\fB\f(CWPIPE:<filename>\fP\fP"
+.IP "\fBPIPE:<filename>\fP"
 If <filename> already exists, it is opened\&.
 If it does not exist, a named pipe is created and opened\&. Beginning with
 socat version 1\&.4\&.3, the named pipe is removed when the address is closed
@@ -626,7 +628,7 @@
 unlink\-early
 .br 
 See also: unnamed pipe
-.IP "\fB\f(CWPIPE\fP\fP"
+.IP "\fBPIPE\fP"
 Creates an unnamed pipe and uses it for reading and writing\&. It works as an
 echo, because everything written 
 to it appeares immediately as read data\&.
@@ -639,7 +641,7 @@
 Option groups: FD 
 .br 
 See also: named pipe
-.IP "\fB\f(CWPROXY:<proxy>:<hostname>:<port>\fP\fP"
+.IP "\fBPROXY:<proxy>:<hostname>:<port>\fP"
 Connects to an HTTP proxy server on port 8080 using TCP/IP  version 4 or 6
 depending on address specification, name resolution, or option
 pf, and sends a CONNECT
@@ -663,7 +665,7 @@
 retry 
 .br 
 See also: SOCKS, TCP
-.IP "\fB\f(CWPTY\fP\fP"
+.IP "\fBPTY\fP"
 Generates a pseudo terminal (pty) and uses its master side\&. Another process
 may open the pty\(cq\&s slave side using it like a serial line or terminal\&.
 (example)\&. If
@@ -684,7 +686,7 @@
 UNIX\-LISTEN,
 PIPE,
 EXEC, SYSTEM
-.IP "\fB\f(CWREADLINE\fP\fP"
+.IP "\fBREADLINE\fP"
 Uses GNU readline and history on stdio to allow editing and reusing input
 lines (example)\&. This requires the GNU readline and 
 history libraries\&. Note that stdio should be a (pseudo) terminal device,
@@ -698,7 +700,7 @@
 .br 
 See also:
 STDIO
-.IP "\fB\f(CWSCTP\-CONNECT:<host>:<port>\fP\fP"
+.IP "\fBSCTP\-CONNECT:<host>:<port>\fP"
 Establishes an SCTP stream connection to the specified <host> [IP
 address] and <port> [TCP service]
 using IP version 4 or 6 depending on address specification, name
@@ -724,17 +726,17 @@
 SCTP6\-CONNECT,
 SCTP\-LISTEN,
 TCP\-CONNECT
-.IP "\fB\f(CWSCTP4\-CONNECT:<host>:<port>\fP\fP"
+.IP "\fBSCTP4\-CONNECT:<host>:<port>\fP"
 Like SCTP\-CONNECT, but only supports IPv4 protocol\&.
 .br 
 Option groups: FD,SOCKET,IP4,SCTP,CHILD,RETRY 
 .br 
-.IP "\fB\f(CWSCTP6\-CONNECT:<host>:<port>\fP\fP"
+.IP "\fBSCTP6\-CONNECT:<host>:<port>\fP"
 Like SCTP\-CONNECT, but only supports IPv6 protocol\&.
 .br 
 Option groups: FD,SOCKET,IP6,SCTP,CHILD,RETRY 
 .br 
-.IP "\fB\f(CWSCTP\-LISTEN:<port>\fP\fP"
+.IP "\fBSCTP\-LISTEN:<port>\fP"
 Listens on <port> [TCP service] and accepts an
 SCTP connection\&. The IP version is 4 or the one specified with
 address option pf, socat option
@@ -765,21 +767,21 @@
 SCTP6\-LISTEN,
 TCP\-LISTEN,
 SCTP\-CONNECT
-.IP "\fB\f(CWSCTP4\-LISTEN:<port>\fP\fP"
+.IP "\fBSCTP4\-LISTEN:<port>\fP"
 Like SCTP\-LISTEN, but only supports IPv4
 protocol\&.
 .br 
 Option groups: FD,SOCKET,LISTEN,CHILD,RANGE,IP4,SCTP,RETRY 
 .br 
-.IP "\fB\f(CWSCTP6\-LISTEN:<port>\fP\fP"
+.IP "\fBSCTP6\-LISTEN:<port>\fP"
 Like SCTP\-LISTEN, but only supports IPv6
 protocol\&.
 .br 
 Option groups: FD,SOCKET,LISTEN,CHILD,RANGE,IP6,SCTP,RETRY 
 .br 
-.IP "\fB\f(CWSOCKET\-CONNECT:<domain>:<protocol>:<remote\-address>\fP\fP"
+.IP "\fBSOCKET\-CONNECT:<domain>:<protocol>:<remote\-address>\fP"
 Creates a stream socket using the first and second given socket parameters
-and \f(CWSOCK_STREAM\fP (see man socket(2)) and connects to the remote\-address\&.
+and SOCK_STREAM (see man socket(2)) and connects to the remote\-address\&.
 The two socket parameters have to be specified by int
 numbers\&. Consult your OS documentation and include files to find the
 appropriate values\&. The remote\-address must be the data
@@ -804,7 +806,7 @@
 UNIX\-CONNECT,
 SOCKET\-LISTEN,
 SOCKET\-SENDTO
-.IP "\fB\f(CWSOCKET\-DATAGRAM:<domain>:<type>:<protocol>:<remote\-address>\fP\fP"
+.IP "\fBSOCKET\-DATAGRAM:<domain>:<type>:<protocol>:<remote\-address>\fP"
 Creates a datagram socket using the first three given socket parameters (see
 man socket(2)) and sends outgoing data to the remote\-address\&. The three
 socket parameters have to be specified by int
@@ -832,9 +834,9 @@
 SOCKET\-SENDTO,
 SOCKET\-RECV,
 SOCKET\-RECVFROM
-.IP "\fB\f(CWSOCKET\-LISTEN:<domain>:<protocol>:<local\-address>\fP\fP"
+.IP "\fBSOCKET\-LISTEN:<domain>:<protocol>:<local\-address>\fP"
 Creates a stream socket using the first and second given socket parameters
-and \f(CWSOCK_STREAM\fP (see man socket(2)) and waits for incoming connections
+and SOCK_STREAM (see man socket(2)) and waits for incoming connections
 on local\-address\&. The two socket parameters have to be specified by
 int numbers\&. Consult your OS documentation and include files
 to find the appropriate values\&. The local\-address must be the
@@ -859,7 +861,7 @@
 SOCKET\-LISTEN,
 SOCKET\-SENDTO,
 SOCKET\-SENDTO
-.IP "\fB\f(CWSOCKET\-RECV:<domain>:<type>:<protocol>:<local\-address>\fP\fP"
+.IP "\fBSOCKET\-RECV:<domain>:<type>:<protocol>:<local\-address>\fP"
 Creates a socket using the three given socket parameters (see man socket(2))
 and binds it to <local\-address>\&. Receives arriving data\&. The three
 parameters have to be specified by int numbers\&. Consult your
@@ -882,7 +884,7 @@
 SOCKET\-DATAGRAM,
 SOCKET\-SENDTO,
 SOCKET\-RECVFROM
-.IP "\fB\f(CWSOCKET\-RECVFROM:<domain>:<type>:<protocol>:<local\-address>\fP\fP"
+.IP "\fBSOCKET\-RECVFROM:<domain>:<type>:<protocol>:<local\-address>\fP"
 Creates a socket using the three given socket parameters (see man socket(2))
 and binds it to <local\-address>\&. Receives arriving data and sends replies
 back to the sender\&. The first three parameters have to be specified as
@@ -907,7 +909,7 @@
 SOCKET\-DATAGRAM,
 SOCKET\-SENDTO,
 SOCKET\-RECV
-.IP "\fB\f(CWSOCKET\-SENDTO:<domain>:<type>:<protocol>:<remote\-address>\fP\fP"
+.IP "\fBSOCKET\-SENDTO:<domain>:<type>:<protocol>:<remote\-address>\fP"
 Creates a socket using the three given socket parameters (see man
 socket(2))\&. Sends outgoing data to the given address and receives replies\&.
 The three parameters have to be specified as int
@@ -931,7 +933,7 @@
 SOCKET\-DATAGRAM,
 SOCKET\-RECV
 SOCKET\-RECVFROM
-.IP "\fB\f(CWSOCKS4:<socks\-server>:<host>:<port>\fP\fP"
+.IP "\fBSOCKS4:<socks\-server>:<host>:<port>\fP"
 Connects via <socks\-server> [IP address]
 to <host> [IPv4 address]
 on <port> [TCP service],
@@ -951,19 +953,19 @@
 SOCKS4A,
 PROXY,
 TCP
-.IP "\fB\f(CWSOCKS4A:<socks\-server>:<host>:<port>\fP\fP"
+.IP "\fBSOCKS4A:<socks\-server>:<host>:<port>\fP"
 like SOCKS4, but uses socks protocol version 4a, thus
 leaving host name resolution to the socks server\&.
 .br 
 Option groups: FD,SOCKET,IP4,IP6,TCP,SOCKS4,RETRY 
 .br 
-.IP "\fB\f(CWSTDERR\fP\fP"
+.IP "\fBSTDERR\fP"
 Uses file descriptor 2\&.
 .br 
 Option groups: FD (TERMIOS,REG,SOCKET) 
 .br 
 See also: FD
-.IP "\fB\f(CWSTDIN\fP\fP"
+.IP "\fBSTDIN\fP"
 Uses file descriptor 0\&.
 .br 
 Option groups: FD (TERMIOS,REG,SOCKET) 
@@ -972,7 +974,7 @@
 readbytes
 .br 
 See also: FD
-.IP "\fB\f(CWSTDIO\fP\fP"
+.IP "\fBSTDIO\fP"
 Uses file descriptor 0 for reading, and 1 for writing\&.
 .br 
 Option groups: FD (TERMIOS,REG,SOCKET) 
@@ -981,13 +983,13 @@
 readbytes
 .br 
 See also: FD
-.IP "\fB\f(CWSTDOUT\fP\fP"
+.IP "\fBSTDOUT\fP"
 Uses file descriptor 1\&.
 .br 
 Option groups: FD (TERMIOS,REG,SOCKET) 
 .br 
 See also: FD
-.IP "\fB\f(CWSYSTEM:<shell\-command>\fP\fP"
+.IP "\fBSYSTEM:<shell\-command>\fP"
 Forks a sub process that establishes communication with its parent process
 and invokes the specified program with 
 \f(CWsystem()\fP
@@ -1017,7 +1019,7 @@
 sigquit
 .br 
 See also: EXEC
-.IP "\fB\f(CWTCP:<host>:<port>\fP\fP"
+.IP "\fBTCP:<host>:<port>\fP"
 Connects to <port> [TCP service] on
 <host> [IP address] using TCP/IP version 4 or 6
 depending on address specification, name resolution, or option
@@ -1046,17 +1048,17 @@
 UDP,
 SCTP\-CONNECT,
 UNIX\-CONNECT
-.IP "\fB\f(CWTCP4:<host>:<port>\fP\fP"
+.IP "\fBTCP4:<host>:<port>\fP"
 Like TCP, but only supports IPv4 protocol (example)\&.
 .br 
 Option groups: FD,SOCKET,IP4,TCP,RETRY 
 .br 
-.IP "\fB\f(CWTCP6:<host>:<port>\fP\fP"
+.IP "\fBTCP6:<host>:<port>\fP"
 Like TCP, but only supports IPv6 protocol\&.
 .br 
 Option groups: FD,SOCKET,IP6,TCP,RETRY 
 .br 
-.IP "\fB\f(CWTCP\-LISTEN:<port>\fP\fP"
+.IP "\fBTCP\-LISTEN:<port>\fP"
 Listens on <port> [TCP service] and accepts a
 TCP/IP connection\&. The IP version is 4 or the one specified with
 address option pf, socat option
@@ -1089,13 +1091,13 @@
 UNIX\-LISTEN,
 OPENSSL\-LISTEN,
 TCP\-CONNECT
-.IP "\fB\f(CWTCP4\-LISTEN:<port>\fP\fP"
+.IP "\fBTCP4\-LISTEN:<port>\fP"
 Like TCP\-LISTEN, but only supports IPv4
 protocol (example)\&.
 .br 
 Option groups: FD,SOCKET,LISTEN,CHILD,RANGE,IP4,TCP,RETRY 
 .br 
-.IP "\fB\f(CWTCP6\-LISTEN:<port>\fP\fP"
+.IP "\fBTCP6\-LISTEN:<port>\fP"
 Like TCP\-LISTEN, but only supports IPv6
 protocol\&.
 .br 
@@ -1104,13 +1106,13 @@
 .br 
 Option groups: FD,SOCKET,LISTEN,CHILD,RANGE,IP6,TCP,RETRY 
 .br 
-.IP "\fB\f(CWTUN[:<if\-addr>/<bits>]\fP\fP"
+.IP "\fBTUN[:<if\-addr>/<bits>]\fP"
 Creates a Linux TUN/TAP device and optionally assignes it the address and
 netmask given by the parameters\&. The resulting network interface is almost
 ready for use by other processes; socat serves its \(dq\&wire side\(dq\&\&. This address
 requires read and write access to the tunnel cloning device, usually
 \f(CW/dev/net/tun\fP
-, as well as permission to set some \f(CWioctl()s\fP\&.
+, as well as permission to set some ioctl()s\&.
 \fBOption iff\-up is required to immediately activate the interface!\fP
 .br 
 Option groups: FD,NAMED,OPEN,TUN 
@@ -1124,7 +1126,7 @@
 .br 
 See also:
 ip\-recv
-.IP "\fB\f(CWUDP:<host>:<port>\fP\fP"
+.IP "\fBUDP:<host>:<port>\fP"
 Connects to <port> [UDP service] on
 <host> [IP address] using UDP/IP version 4 or 6
 depending on address specification, name resolution, or option
@@ -1150,17 +1152,17 @@
 UDP\-LISTEN,
 TCP,
 IP
-.IP "\fB\f(CWUDP4:<host>:<port>\fP\fP"
+.IP "\fBUDP4:<host>:<port>\fP"
 Like UDP, but only supports IPv4 protocol\&.
 .br 
 Option groups: FD,SOCKET,IP4 
 .br 
-.IP "\fB\f(CWUDP6:<host>:<port>\fP\fP"
+.IP "\fBUDP6:<host>:<port>\fP"
 Like UDP, but only supports IPv6 protocol\&.
 .br 
 Option groups: FD,SOCKET,IP6 
 .br 
-.IP "\fB\f(CWUDP\-DATAGRAM:<address>:<port>\fP\fP"
+.IP "\fBUDP\-DATAGRAM:<address>:<port>\fP"
 Sends outgoing data to the specified address which may in particular be a
 broadcast or multicast address\&. Packets arriving on the local socket are
 checked for the correct remote port and if their source addresses match
@@ -1193,18 +1195,18 @@
 UDP\-CONNECT,
 UDP\-LISTEN,
 IP\-DATAGRAM
-.IP "\fB\f(CWUDP4\-DATAGRAM:<address>:<port>\fP\fP"
+.IP "\fBUDP4\-DATAGRAM:<address>:<port>\fP"
 Like UDP\-DATAGRAM, but only supports IPv4
 protocol (example1,
 example2)\&.
 .br 
 Option groups: FD,SOCKET,IP4, RANGE
-.IP "\fB\f(CWUDP6\-DATAGRAM:<address>:<port>\fP\fP"
+.IP "\fBUDP6\-DATAGRAM:<address>:<port>\fP"
 Like UDP\-DATAGRAM, but only supports IPv6
 protocol\&.
 .br 
 Option groups: FD,SOCKET,IP6,RANGE
-.IP "\fB\f(CWUDP\-LISTEN:<port>\fP\fP"
+.IP "\fBUDP\-LISTEN:<port>\fP"
 Waits for a UDP/IP packet arriving on <port>
 [UDP service] and `connects\(cq\& back to sender\&.
 The accepted IP version is 4 or the one specified with option
@@ -1228,19 +1230,19 @@
 UDP4\-LISTEN,
 UDP6\-LISTEN,
 TCP\-LISTEN
-.IP "\fB\f(CWUDP4\-LISTEN:<port>\fP\fP"
+.IP "\fBUDP4\-LISTEN:<port>\fP"
 Like UDP\-LISTEN, but only support IPv4
 protocol\&.
 .br 
 Option groups: FD,SOCKET,LISTEN,CHILD,RANGE,IP4 
 .br 
-.IP "\fB\f(CWUDP6\-LISTEN:<port>\fP\fP"
+.IP "\fBUDP6\-LISTEN:<port>\fP"
 Like UDP\-LISTEN, but only support IPv6
 protocol\&.
 .br 
 Option groups: FD,SOCKET,LISTEN,CHILD,RANGE,IP6 
 .br 
-.IP "\fB\f(CWUDP\-SENDTO:<host>:<port>\fP\fP"
+.IP "\fBUDP\-SENDTO:<host>:<port>\fP"
 Communicates with the specified peer socket, defined by <port> [UDP
 service] on
 <host> [IP address], using UDP/IP version 4 or 6
@@ -1267,18 +1269,18 @@
 UDP\-CONNECT,
 UDP\-LISTEN,
 IP\-SENDTO
-.IP "\fB\f(CWUDP4\-SENDTO:<host>:<port>\fP\fP"
+.IP "\fBUDP4\-SENDTO:<host>:<port>\fP"
 Like UDP\-SENDTO, but only supports IPv4
 protocol\&.
 .br 
 Option groups: FD,SOCKET,IP4
-.IP "\fB\f(CWUDP6\-SENDTO:<host>:<port>\fP\fP"
+.IP "\fBUDP6\-SENDTO:<host>:<port>\fP"
 Like UDP\-SENDTO, but only supports IPv6
 protocol\&.
 .br 
 Option groups: FD,SOCKET,IP6
-.IP 
-.IP "\fB\f(CWUDP\-RECVFROM:<port>\fP\fP"
+.PP 
+.IP "\fBUDP\-RECVFROM:<port>\fP"
 Creates a UDP socket on <port> [UDP service] using
 UDP/IP version 4 or 6 
 depending on option pf\&.
@@ -1308,16 +1310,16 @@
 UDP\-LISTEN,
 IP\-RECVFROM,
 UNIX\-RECVFROM
-.IP "\fB\f(CWUDP4\-RECVFROM:<port>\fP\fP"
+.IP "\fBUDP4\-RECVFROM:<port>\fP"
 Like UDP\-RECVFROM, but only supports IPv4 protocol\&.
 .br 
 Option groups: FD,SOCKET,IP4,CHILD,RANGE
-.IP "\fB\f(CWUDP6\-RECVFROM:<port>\fP\fP"
+.IP "\fBUDP6\-RECVFROM:<port>\fP"
 Like UDP\-RECVFROM, but only supports IPv6 protocol\&.
 .br 
 Option groups: FD,SOCKET,IP6,CHILD,RANGE
-.IP 
-.IP "\fB\f(CWUDP\-RECV:<port>\fP\fP"
+.PP 
+.IP "\fBUDP\-RECV:<port>\fP"
 Creates a UDP socket on <port> [UDP service] using UDP/IP version 4 or 6
 depending on option pf\&.
 It receives packets from multiple unspecified peers and merges the data\&.
@@ -1342,16 +1344,16 @@
 UDP\-LISTEN,
 IP\-RECV,
 UNIX\-RECV
-.IP "\fB\f(CWUDP4\-RECV:<port>\fP\fP"
+.IP "\fBUDP4\-RECV:<port>\fP"
 Like UDP\-RECV, but only supports IPv4 protocol\&.
 .br 
 Option groups: FD,SOCKET,IP4,RANGE
-.IP "\fB\f(CWUDP6\-RECV:<port>\fP\fP"
+.IP "\fBUDP6\-RECV:<port>\fP"
 Like UDP\-RECV, but only supports IPv6 protocol\&.
 .br 
 Option groups: FD,SOCKET,IP6,RANGE
-.IP 
-.IP "\fB\f(CWUNIX\-CONNECT:<filename>\fP\fP"
+.PP 
+.IP "\fBUNIX\-CONNECT:<filename>\fP"
 Connects to <filename> assuming it is a UNIX domain
 socket\&.
 If <filename> does not exist, this is an error;
@@ -1369,8 +1371,8 @@
 UNIX\-LISTEN,
 UNIX\-SENDTO,
 TCP
-.IP 
-.IP "\fB\f(CWUNIX\-LISTEN:<filename>\fP\fP"
+.PP 
+.IP "\fBUNIX\-LISTEN:<filename>\fP"
 Listens on <filename> using a UNIX domain stream
 socket and accepts a connection\&.
 If <filename> exists and is not a socket, this is an error\&.
@@ -1395,12 +1397,12 @@
 UNIX\-RECVFROM,
 UNIX\-RECV,
 TCP\-LISTEN
-.IP 
-.IP "\fB\f(CWUNIX\-SENDTO:<filename>\fP\fP"
+.PP 
+.IP "\fBUNIX\-SENDTO:<filename>\fP"
 Communicates with the specified peer socket, defined by [<filename>] assuming it is a UNIX domain datagram socket\&.
 It sends packets to and receives packets from that peer socket only\&.
 Please note that it might be necessary to bind the
-local socket to an address (e\&.g\&. \f(CW/tmp/sock1\fP, which must not exist
+local socket to an address (e\&.g\&. /tmp/sock1, which must not exist
 before)\&.
 This address type works well with socat UNIX\-RECVFROM and UNIX\-RECV address
 peers\&.
@@ -1416,8 +1418,8 @@
 UNIX\-CONNECT,
 UDP\-SENDTO,
 IP\-SENDTO
-.IP 
-.IP "\fB\f(CWUNIX\-RECVFROM:<filename>\fP\fP"
+.PP 
+.IP "\fBUNIX\-RECVFROM:<filename>\fP"
 Creates a UNIX domain datagram socket [<filename>]\&.
 Receives one packet and may send one or more answer packets to that peer\&.
 This mode is particularly useful with fork option where each arriving packet \- from arbitrary peers \- is handled by its own sub process\&.
@@ -1434,8 +1436,8 @@
 UNIX\-LISTEN,
 UDP\-RECVFROM,
 IP\-RECVFROM
-.IP 
-.IP "\fB\f(CWUNIX\-RECV:<filename>\fP\fP"
+.PP 
+.IP "\fBUNIX\-RECV:<filename>\fP"
 Creates a UNIX domain datagram socket [<filename>]\&.
 Receives packets from multiple unspecified peers and merges the data\&.
 No replies are possible\&. It can be, e\&.g\&., addressed by socat UNIX\-SENDTO address peers\&.
@@ -1448,8 +1450,8 @@
 UNIX\-LISTEN,
 UDP\-RECV,
 IP\-RECV
-.IP 
-.IP "\fB\f(CWUNIX\-CLIENT:<filename>\fP\fP"
+.PP 
+.IP "\fBUNIX\-CLIENT:<filename>\fP"
 Communicates with the specified peer socket, defined by
 [<filename>] assuming it is a UNIX domain socket\&.
 It first tries to connect and, if that fails, assumes it is a datagram
@@ -1464,20 +1466,57 @@
 UNIX\-CONNECT,
 UNIX\-SENDTO,
 GOPEN
-.IP 
-.IP "\fB\f(CWABSTRACT\-CONNECT:<string>\fP\fP"
-.IP "\fB\f(CWABSTRACT\-LISTEN:<string>\fP\fP"
-.IP "\fB\f(CWABSTRACT\-SENDTO:<string>\fP\fP"
-.IP "\fB\f(CWABSTRACT\-RECVFROM:<string>\fP\fP"
-.IP "\fB\f(CWABSTRACT\-RECV:<string>\fP\fP"
-.IP "\fB\f(CWABSTRACT\-CLIENT:<string>\fP\fP"
+.PP 
+.IP "\fBVSOCK\-CONNECT:<cid>:<port>\fP"
+Establishes a VSOCK stream connection to the specified <cid> [VSOCK
+cid] and <port> [VSOCK port]\&.
+.br 
+Option groups: FD,SOCKET,CHILD,RETRY 
+.br 
+Useful options:
+bind,
+pf,
+connect\-timeout,
+retry,
+readbytes
+.br 
+See also:
+VSOCK\-LISTEN,
+.PP 
+.IP "\fBVSOCK\-LISTEN:<port>\fP"
+Listens on <port> [VSOCK port] and accepts a
+VSOCK connection\&.
+Note that opening this address usually blocks until a client connects\&.
+.br 
+Option groups: FD,SOCKET,LISTEN,CHILD,RETRY 
+.br 
+Useful options:
+fork,
+bind,
+pf,
+max\-children,
+backlog,
+su,
+reuseaddr,
+retry,
+cool\-write
+.br 
+See also:
+VSOCK\-CONNECT
+.PP 
+.IP "\fBABSTRACT\-CONNECT:<string>\fP"
+.IP "\fBABSTRACT\-LISTEN:<string>\fP"
+.IP "\fBABSTRACT\-SENDTO:<string>\fP"
+.IP "\fBABSTRACT\-RECVFROM:<string>\fP"
+.IP "\fBABSTRACT\-RECV:<string>\fP"
+.IP "\fBABSTRACT\-CLIENT:<string>\fP"
 The ABSTRACT addresses are almost identical to the related UNIX addresses
 except that they do not address file system based sockets but an alternate
 UNIX domain address space\&. To achieve this the socket address strings are
 prefixed with \(dq\&\e0\(dq\& internally\&. This feature is available (only?) on Linux\&.
 Option groups are the same as with the related UNIX addresses, except that
 the ABSTRACT addresses are not member of the NAMED group\&.
-
+enddit()
 .PP 
 .SH "ADDRESS OPTIONS"
 
@@ -1543,6 +1582,7 @@
 .br 
 
 .PP 
+startdit()enddit()
 .br 
 
 .PP 
@@ -1557,7 +1597,8 @@
 provides another, non\-fd based mechanism\&.
 For these options, it depends on the actual address type and its option groups 
 which mechanism is used\&. The second, non\-fd based mechanism is prioritized\&.
-.IP "\fB\f(CWcloexec=<bool>\fP\fP"
+startdit()
+.IP "\fBcloexec=<bool>\fP"
 Sets the 
 \f(CWFD_CLOEXEC\fP
 flag with the 
@@ -1570,7 +1611,7 @@
 internally handles 
 this flag for the fds it controls, so in most cases there will be no need to
 apply this option\&. 
-.IP "\fB\f(CWsetlk\fP\fP"
+.IP "\fBsetlk\fP"
 Tries to set a discretionary write lock to the whole file using the 
 \f(CWfcntl(fd,
 F_SETLK, \&.\&.\&.)\fP
@@ -1579,14 +1620,14 @@
 On Linux, when the file permissions for group are \(dq\&S\(dq\& (g\-x,g+s), and the
 file system is locally mounted with the \(dq\&mand\(dq\& option, the lock is
 mandatory, i\&.e\&. prevents other processes from opening the file\&.
-.IP "\fB\f(CWsetlkw\fP\fP"
+.IP "\fBsetlkw\fP"
 Tries to set a discretionary waiting write lock to the whole file using the
 \f(CWfcntl(fd, F_SETLKW, \&.\&.\&.)\fP
 system call\&. If the file is already locked,
 this call blocks\&. 
 See option setlk for information about making this
 lock mandatory\&. 
-.IP "\fB\f(CWsetlk\-rd\fP\fP"
+.IP "\fBsetlk\-rd\fP"
 Tries to set a discretionary read lock to the whole file using the 
 \f(CWfcntl(fd,
 F_SETLK, \&.\&.\&.)\fP
@@ -1594,38 +1635,38 @@
 results in an error\&. 
 See option setlk for information about making this
 lock mandatory\&. 
-.IP "\fB\f(CWsetlkw\-rd\fP\fP"
+.IP "\fBsetlkw\-rd\fP"
 Tries to set a discretionary waiting read lock to the whole file using the
 \f(CWfcntl(fd, F_SETLKW, \&.\&.\&.)\fP
 system call\&. If the file is already write
 locked, this call blocks\&. 
 See option setlk for information about making this
 lock mandatory\&. 
-.IP "\fB\f(CWflock\-ex\fP\fP"
+.IP "\fBflock\-ex\fP"
 Tries to set a blocking exclusive advisory lock to the file using the
 \f(CWflock(fd, LOCK_EX)\fP
 system call\&. \fBSocat\fP hangs in this call if the file
 is locked by another process\&.
-.IP "\fB\f(CWflock\-ex\-nb\fP\fP"
+.IP "\fBflock\-ex\-nb\fP"
 Tries to set a nonblocking exclusive advisory lock to the file using the
 \f(CWflock(fd, LOCK_EX|LOCK_NB)\fP
 system call\&. If the file is already locked,
 this option results in an error\&.
-.IP "\fB\f(CWflock\-sh\fP\fP"
+.IP "\fBflock\-sh\fP"
 Tries to set a blocking shared advisory lock to the file using the
 \f(CWflock(fd, LOCK_SH)\fP
 system call\&. \fBSocat\fP hangs in this call if the file
 is locked by another process\&.
-.IP "\fB\f(CWflock\-sh\-nb\fP\fP"
+.IP "\fBflock\-sh\-nb\fP"
 Tries to set a nonblocking shared advisory lock to the file using the
 \f(CWflock(fd, LOCK_SH|LOCK_NB)\fP
 system call\&. If the file is already locked,
 this option results in an error\&.
-.IP "\fB\f(CWlock\fP\fP"
+.IP "\fBlock\fP"
 Sets a blocking lock on the file\&. Uses the setlk or flock mechanism
 depending on availability on the particular platform\&. If both are available,
 the POSIX variant (setlkw) is used\&.
-.IP "\fB\f(CWuser=<user>\fP\fP"
+.IP "\fBuser=<user>\fP"
 Sets the <user> (owner) of the stream\&.
 If the address is member of the NAMED option group,
 \fBsocat\fP uses the 
@@ -1637,13 +1678,13 @@
 \f(CWfchown()\fP
 system call\&.
 These calls might require root privilege\&. 
-.IP "\fB\f(CWuser\-late=<user>\fP\fP"
+.IP "\fBuser\-late=<user>\fP"
 Sets the owner of the fd to <user> with the 
 \f(CWfchown()\fP
 system call after opening 
 or connecting the channel\&.
 This is useful only on file system entries\&.
-.IP "\fB\f(CWgroup=<group>\fP\fP"
+.IP "\fBgroup=<group>\fP"
 Sets the <group> of the stream\&.
 If the address is member of the NAMED option group,
 \fBsocat\fP uses the 
@@ -1655,13 +1696,13 @@
 \f(CWfchown()\fP
 system call\&. 
 These calls might require group membership or root privilege\&. 
-.IP "\fB\f(CWgroup\-late=<group>\fP\fP"
+.IP "\fBgroup\-late=<group>\fP"
 Sets the group of the fd to <group> with the
 \f(CWfchown()\fP
 system call after opening 
 or connecting the channel\&.
 This is useful only on file system entries\&. 
-.IP "\fB\f(CWmode=<mode>\fP\fP"
+.IP "\fBmode=<mode>\fP"
 Sets the <mode> [mode_t] (permissions) of the stream\&.
 If the address is member of the NAMED option group and
 uses the 
@@ -1679,14 +1720,14 @@
 \f(CWfchmod()\fP
 \&. 
 These calls might require ownership or root privilege\&.
-.IP "\fB\f(CWperm\-late=<mode>\fP\fP"
+.IP "\fBperm\-late=<mode>\fP"
 Sets the permissions of the fd to value <mode>
 [mode_t] using the 
 \f(CWfchmod()\fP
 system call after
 opening or connecting the channel\&.
 This is useful only on file system entries\&. 
-.IP "\fB\f(CWappend=<bool>\fP\fP"
+.IP "\fBappend=<bool>\fP"
 Always writes data to the actual end of file\&.
 If the address is member of the OPEN option group, 
 \fBsocat\fP uses the 
@@ -1698,7 +1739,7 @@
 Otherwise, \fBsocat\fP applies the 
 \f(CWfcntl(fd, F_SETFL, O_APPEND)\fP
 call\&.
-.IP "\fB\f(CWnonblock=<bool>\fP\fP"
+.IP "\fBnonblock=<bool>\fP"
 Tries to open or use file in nonblocking mode\&. Its only effects are that the
 \f(CWconnect()\fP
 call of TCP addresses does not block, and that opening a
@@ -1712,15 +1753,15 @@
 Otherwise, \fBsocat\fP applies the 
 \f(CWfcntl(fd, F_SETFL, O_NONBLOCK)\fP
 call\&.
-.IP "\fB\f(CWbinary\fP\fP"
+.IP "\fBbinary\fP"
 Opens the file in binary mode to avoid implicit line terminator
 conversions (Cygwin)\&.
-.IP "\fB\f(CWtext\fP\fP"
+.IP "\fBtext\fP"
 Opens the file in text mode to force implicit line terminator conversions
 (Cygwin)\&.
-.IP "\fB\f(CWnoinherit\fP\fP"
+.IP "\fBnoinherit\fP"
 Does not keep this file open in a spawned process (Cygwin)\&.
-.IP "\fB\f(CWcool\-write\fP\fP"
+.IP "\fBcool\-write\fP"
 Takes it easy when write fails with EPIPE or ECONNRESET and logs the message
 with \fInotice\fP level instead of \fIerror\fP\&.
 This prevents the log file from being filled with useless error messages
@@ -1728,58 +1769,59 @@
 abort the connection\&.
 .br 
 This option is experimental\&.
-.IP "\fB\f(CWend\-close\fP\fP"
+.IP "\fBend\-close\fP"
 Changes the (address dependent) method of ending a connection to just close
 the file descriptors\&. This is useful when the connection is to be reused by
 or shared with other processes (example)\&.
 .br 
-Normally, socket connections will be ended with \f(CWshutdown(2)\fP which
+Normally, socket connections will be ended with shutdown(2) which
 terminates the socket even if it is shared by multiple processes\&. 
-\f(CWclose(2)\fP \(dq\&unlinks\(dq\& the socket from the process but keeps it active as
+close(2) \(dq\&unlinks\(dq\& the socket from the process but keeps it active as
 long as there are still links from other processes\&.
 .br 
 Similarly, when an address of type EXEC or SYSTEM is ended, socat usually
 will explicitly kill the sub process\&. With this option, it will just close
 the file descriptors\&.
-.IP "\fB\f(CWshut\-none\fP\fP"
+.IP "\fBshut\-none\fP"
 Changes the (address dependent) method of shutting down the write part of a
 connection to not do anything\&.
-.IP "\fB\f(CWshut\-down\fP\fP"
+.IP "\fBshut\-down\fP"
 Changes the (address dependent) method of shutting down the write part of a
 connection to shutdown(fd, SHUT_WR)\&. Is only useful with sockets\&.
-.IP "\fB\f(CWshut\-close\fP\fP"
+.IP "\fBshut\-close\fP"
 Changes the (address dependent) method of shutting down the write part of a
 connection to close(fd)\&.
-.IP "\fB\f(CWshut\-null\fP\fP"
+.IP "\fBshut\-null\fP"
 When one address indicates EOF, \fBsocat\fP will send a zero sized packet to the
 write channel of the other address to transfer the EOF condition\&. This is
 useful with UDP and other datagram protocols\&. Has been tested against
 netcat and socat with option null\-eof\&.
-.IP "\fB\f(CWnull\-eof\fP\fP"
+.IP "\fBnull\-eof\fP"
 Normally \fBsocat\fP will ignore empty (zero size payload) packets arriving on
 datagram sockets, so it survives port scans\&. With this option \fBsocat\fP
 interprets empty datagram packets as EOF indicator (see
 shut\-null)\&.
-.IP "\fB\f(CWioctl\-void=<request>\fP\fP"
-Calls \f(CWioctl()\fP with the request value as second argument and NULL as
+.IP "\fBioctl\-void=<request>\fP"
+Calls ioctl() with the request value as second argument and NULL as
 third argument\&. This option allows utilizing ioctls that are not
 explicitly implemented in socat\&.
-.IP "\fB\f(CWioctl\-int=<request>:<value>\fP\fP"
-Calls \f(CWioctl()\fP with the request value as second argument and the integer
+.IP "\fBioctl\-int=<request>:<value>\fP"
+Calls ioctl() with the request value as second argument and the integer
 value as third argument\&.
-.IP "\fB\f(CWioctl\-intp=<request>:<value>\fP\fP"
-Calls \f(CWioctl()\fP with the request value as second argument and a pointer to
+.IP "\fBioctl\-intp=<request>:<value>\fP"
+Calls ioctl() with the request value as second argument and a pointer to
 the integer value as third argument\&.
-.IP "\fB\f(CWioctl\-bin=<request>:<value>\fP\fP"
-Calls \f(CWioctl()\fP with the request value as second argument and a pointer to
+.IP "\fBioctl\-bin=<request>:<value>\fP"
+Calls ioctl() with the request value as second argument and a pointer to
 the given data value as third argument\&. This data must be specified in
 <dalan> form\&.
-.IP "\fB\f(CWioctl\-string=<request>:<value>\fP\fP"
-Calls \f(CWioctl()\fP with the request value as second argument and a pointer to
+.IP "\fBioctl\-string=<request>:<value>\fP"
+Calls ioctl() with the request value as second argument and a pointer to
 the given string as third argument\&.
 <dalan> form\&.
-
+enddit()
 .PP 
+startdit()enddit()
 .br 
 
 .PP 
@@ -1790,37 +1832,38 @@
 See also options user, group, and
 mode\&.
 .PP 
-.IP "\fB\f(CWuser\-early=<user>\fP\fP"
+startdit()
+.IP "\fBuser\-early=<user>\fP"
 Changes the <user> (owner) of the file system entry before
 accessing it, using the 
 \f(CWchown()\fP
 system call\&. This call might require root privilege\&.
-.IP "\fB\f(CWgroup\-early=<group>\fP\fP"
+.IP "\fBgroup\-early=<group>\fP"
 Changes the <group> of the file system entry before
 accessing it, using the 
 \f(CWchown()\fP
 system call\&. This call might require group membership or root
 privilege\&. 
-.IP "\fB\f(CWperm\-early=<mode>\fP\fP"
+.IP "\fBperm\-early=<mode>\fP"
 Changes the <mode> [mode_t] of the file system entry
 before accessing it, using the 
 \f(CWchmod()\fP
 system call\&. This call might require ownership or root
 privilege\&. 
-.IP "\fB\f(CWumask=<mode>\fP\fP"
+.IP "\fBumask=<mode>\fP"
 Sets the umask of the process to <mode> [mode_t] before
 accessing the file system entry (useful 
 with UNIX domain sockets!)\&. This call might affect all further operations
 of the \fBsocat\fP process!  
-.IP "\fB\f(CWunlink\-early\fP\fP"
+.IP "\fBunlink\-early\fP"
 Unlinks (removes) the file before opening it and even before applying
 user\-early etc\&. 
-.IP "\fB\f(CWunlink\fP\fP"
+.IP "\fBunlink\fP"
 Unlinks (removes) the file before accessing it, but after user\-early etc\&.
-.IP "\fB\f(CWunlink\-late\fP\fP"
+.IP "\fBunlink\-late\fP"
 Unlinks (removes) the file after opening it to make it inaccessible for
 other processes after a short race condition\&. 
-.IP "\fB\f(CWunlink\-close\fP\fP"
+.IP "\fBunlink\-close\fP"
 Removes the addresses file system entry when closing the address\&.
 For named pipes,
 listening unix domain sockets,
@@ -1829,8 +1872,9 @@
 opened files,
 generic opened files, and
 client unix domain sockets the default is 0\&.
-
+enddit()
 .PP 
+startdit()enddit()
 .br 
 
 .PP 
@@ -1845,42 +1889,44 @@
 .br 
 See also options append and
 nonblock\&.
-.IP "\fB\f(CWcreat=<bool>\fP\fP"
+startdit()
+.IP "\fBcreat=<bool>\fP"
 Creates the file if it does not exist (example)\&.
-.IP "\fB\f(CWdsync=<bool>\fP\fP"
+.IP "\fBdsync=<bool>\fP"
 Blocks 
 \f(CWwrite()\fP
 calls until metainfo is physically written to media\&.
-.IP "\fB\f(CWexcl=<bool>\fP\fP"
+.IP "\fBexcl=<bool>\fP"
 With option creat, if file exists this is an error\&.
-.IP "\fB\f(CWlargefile=<bool>\fP\fP"
+.IP "\fBlargefile=<bool>\fP"
 On 32 bit systems, allows a file larger than 2^31 bytes\&.
-.IP "\fB\f(CWnoatime\fP\fP"
+.IP "\fBnoatime\fP"
 Sets the O_NOATIME options, so reads do not change the access timestamp\&.
-.IP "\fB\f(CWnoctty=<bool>\fP\fP"
+.IP "\fBnoctty=<bool>\fP"
 Does not make this file the controlling terminal\&.
-.IP "\fB\f(CWnofollow=<bool>\fP\fP"
+.IP "\fBnofollow=<bool>\fP"
 Does not follow symbolic links\&.
-.IP "\fB\f(CWnshare=<bool>\fP\fP"
+.IP "\fBnshare=<bool>\fP"
 Does not allow sharing this file with other processes\&.
-.IP "\fB\f(CWrshare=<bool>\fP\fP"
+.IP "\fBrshare=<bool>\fP"
 Does not allow other processes to open this file for writing\&.
-.IP "\fB\f(CWrsync=<bool>\fP\fP"
+.IP "\fBrsync=<bool>\fP"
 Blocks 
 \f(CWwrite()\fP
 until metainfo is physically written to media\&.
-.IP "\fB\f(CWsync=<bool>\fP\fP"
+.IP "\fBsync=<bool>\fP"
 Blocks 
 \f(CWwrite()\fP
 until data is physically written to media\&.
-.IP "\fB\f(CWrdonly=<bool>\fP\fP"
+.IP "\fBrdonly=<bool>\fP"
 Opens the file for reading only\&.
-.IP "\fB\f(CWwronly=<bool>\fP\fP"
+.IP "\fBwronly=<bool>\fP"
 Opens the file for writing only\&.
-.IP "\fB\f(CWtrunc\fP\fP"
+.IP "\fBtrunc\fP"
 Truncates the file to size 0 during opening it\&.
-
+enddit()
 .PP 
+startdit()enddit()
 .br 
 
 .PP 
@@ -1888,7 +1934,8 @@
 .PP 
 These options are usually applied to a UN*X file descriptor, but their
 semantics make sense only on a file supporting random access\&.
-.IP "\fB\f(CWseek=<offset>\fP\fP"
+startdit()
+.IP "\fBseek=<offset>\fP"
 Applies the 
 \f(CWlseek(fd, <offset>, SEEK_SET)\fP
 (or 
@@ -1897,7 +1944,7 @@
 call, thus positioning the file pointer absolutely to <offset>
 [off_t or off64_t]\&. Please note that a
 missing value defaults to 1, not 0\&.
-.IP "\fB\f(CWseek\-cur=<offset>\fP\fP"
+.IP "\fBseek\-cur=<offset>\fP"
 Applies the 
 \f(CWlseek(fd, <offset>, SEEK_CUR)\fP
 (or 
@@ -1906,7 +1953,7 @@
 call, thus positioning the file pointer <offset> [off_t or
 off64_t] bytes relatively to its current position (which
 is usually 0)\&. Please note that a missing value defaults to 1, not 0\&.
-.IP "\fB\f(CWseek\-end=<offset>\fP\fP"
+.IP "\fBseek\-end=<offset>\fP"
 Applies the 
 \f(CWlseek(fd, <offset>, SEEK_END)\fP
 (or 
@@ -1915,7 +1962,7 @@
 call, thus positioning the file pointer <offset> [off_t or
 off64_t] bytes relatively to the files current end\&. Please
 note that a missing value defaults to 1, not 0\&.  
-.IP "\fB\f(CWftruncate=<offset>\fP\fP"
+.IP "\fBftruncate=<offset>\fP"
 Applies the 
 \f(CWftruncate(fd, <offset>)\fP
 (or 
@@ -1924,25 +1971,26 @@
 truncating the file at the position <offset> [off_t or 
 off64_t]\&. Please note that a missing value defaults to 1,
 not 0\&.
-.IP 
-.IP "\fB\f(CWsecrm=<bool>\fP\fP"
-.IP "\fB\f(CWunrm=<bool>\fP\fP"
-.IP "\fB\f(CWcompr=<bool>\fP\fP"
-.IP "\fB\f(CWext2\-sync=<bool>\fP\fP"
-.IP "\fB\f(CWimmutable=<bool>\fP\fP"
-.IP "\fB\f(CWext2\-append=<bool>\fP\fP"
-.IP "\fB\f(CWnodump=<bool>\fP\fP"
-.IP "\fB\f(CWext2\-noatime=<bool>\fP\fP"
-.IP "\fB\f(CWjournal\-data=<bool>\fP\fP"
-.IP "\fB\f(CWnotail=<bool>\fP\fP"
-.IP "\fB\f(CWdirsync=<bool>\fP\fP"
+.PP 
+.IP "\fBsecrm=<bool>\fP"
+.IP "\fBunrm=<bool>\fP"
+.IP "\fBcompr=<bool>\fP"
+.IP "\fBext2\-sync=<bool>\fP"
+.IP "\fBimmutable=<bool>\fP"
+.IP "\fBext2\-append=<bool>\fP"
+.IP "\fBnodump=<bool>\fP"
+.IP "\fBext2\-noatime=<bool>\fP"
+.IP "\fBjournal\-data=<bool>\fP"
+.IP "\fBnotail=<bool>\fP"
+.IP "\fBdirsync=<bool>\fP"
 These options change non standard file attributes on operating systems and
 file systems that support these features, like Linux with ext2fs,
 ext3fs, or reiserfs\&. See man 1 chattr for information on these options\&.
 Please note that there might be a race condition between creating the file
 and applying these options\&.
-
+enddit()
 .PP 
+startdit()enddit()
 .br 
 
 .PP 
@@ -1953,64 +2001,67 @@
 For EXEC and SYSTEM addresses and for LISTEN and CONNECT type addresses with
 option FORK, 
 these options apply to the child processes instead of the main socat process\&.
-.IP "\fB\f(CWchroot=<directory>\fP\fP"
+startdit()
+.IP "\fBchroot=<directory>\fP"
 Performs a 
 \f(CWchroot()\fP
 operation to <directory>
 after processing the address (example)\&. This call might require root privilege\&.
-.IP "\fB\f(CWchroot\-early=<directory>\fP\fP"
+.IP "\fBchroot\-early=<directory>\fP"
 Performs a 
 \f(CWchroot()\fP
 operation to <directory>
 before opening the address\&. This call might require root privilege\&.
-.IP "\fB\f(CWsetgid=<group>\fP\fP"
+.IP "\fBsetgid=<group>\fP"
 Changes the primary <group> of the process after
 processing the address\&. This call might require root privilege\&. Please note
 that this option does not drop other group related privileges\&.
-.IP "\fB\f(CWsetgid\-early=<group>\fP\fP"
+.IP "\fBsetgid\-early=<group>\fP"
 Like setgit but is performed before opening the address\&.
-.IP "\fB\f(CWsetuid=<user>\fP\fP"
+.IP "\fBsetuid=<user>\fP"
 Changes the <user> (owner) of the process after processing
 the address\&. This call might require root privilege\&. Please note that this
 option does not drop group related privileges\&. Check if option
 su better fits your needs\&.
-.IP "\fB\f(CWsetuid\-early=<user>\fP\fP"
+.IP "\fBsetuid\-early=<user>\fP"
 Like setuid but is performed before opening the
 address\&.
-.IP "\fB\f(CWsu=<user>\fP\fP"
+.IP "\fBsu=<user>\fP"
 Changes the <user> (owner) and groups of the process after
 processing the address (example)\&. This call might require root privilege\&. 
-.IP "\fB\f(CWsu\-d=<user>\fP\fP"
-Short name for \f(CWsubstuser\-delayed\fP\&.
+.IP "\fBsu\-d=<user>\fP"
+Short name for substuser\-delayed\&.
 Changes the <user>
 (owner) and groups of the process after processing the address (example)\&.
 The user and his groups are retrieved \fIbefore\fP a possible
 \f(CWchroot()\fP
 \&. This call might require root privilege\&. 
-.IP "\fB\f(CWsetpgid=<pid_t>\fP\fP"
+.IP "\fBsetpgid=<pid_t>\fP"
 Makes the process a member of the specified process group
 <pid_t>\&. If no value 
 is given, or if the value is 0 or 1, the process becomes leader of a new
 process group\&. 
-.IP "\fB\f(CWsetsid\fP\fP"
+.IP "\fBsetsid\fP"
 Makes the process the leader of a new session (example)\&.
-
+enddit()
 .PP 
+startdit()enddit()
 .br 
 
 .PP 
 \fI\fBREADLINE option group\fP\fP
 .PP 
 These options apply to the readline address type\&.
-.IP "\fB\f(CWhistory=<filename>\fP\fP"
+startdit()
+.IP "\fBhistory=<filename>\fP"
 Reads and writes history from/to <filename> (example)\&.
-.IP "\fB\f(CWnoprompt\fP\fP"
+.IP "\fBnoprompt\fP"
 Since version 1\&.4\&.0, socat per default tries to determine a prompt \- 
 that is then passed to the readline call \- by remembering the last
 incomplete line of the output\&. With this option, socat does not pass a
 prompt to readline, so it begins line editing in the first column
 of the terminal\&. 
-.IP "\fB\f(CWnoecho=<pattern>\fP\fP"
+.IP "\fBnoecho=<pattern>\fP"
 Specifies a regular pattern for a prompt that prevents the following input
 line from being displayed on the screen and from being added to the history\&.
 The prompt is defined as the text that was output to the readline address 
@@ -2018,13 +2069,14 @@
 typed\&. The pattern is a regular expression, e\&.g\&.
 \(dq\&^[Pp]assword:\&.*$\(dq\& or \(dq\&([Uu]ser:|[Pp]assword:)\(dq\&\&. See regex(7) for details\&.
 (example)
-.IP "\fB\f(CWprompt=<string>\fP\fP"
+.IP "\fBprompt=<string>\fP"
 Passes the string as prompt to the readline function\&. readline prints this
 prompt when stepping through the history\&. If this string matches a constant
 prompt issued by an interactive program on the other socat address,
 consistent look and feel can be achieved\&.
-
+enddit()
 .PP 
+startdit()enddit()
 .br 
 
 .PP 
@@ -2034,32 +2086,34 @@
 Note that these options only apply to the \(dq\&raw\(dq\& data transferred by socat,
 but not to protocol data used by addresses like
 PROXY\&.
-.IP "\fB\f(CWcr\fP\fP"
+startdit()
+.IP "\fBcr\fP"
 Converts the default line termination character NL (\(cq\&\en\(cq\&, 0x0a) to/from CR
 (\(cq\&\er\(cq\&, 0x0d) when writing/reading on this channel\&. 
-.IP "\fB\f(CWcrnl\fP\fP"
+.IP "\fBcrnl\fP"
 Converts the default line termination character NL (\(cq\&\en\(cq\&, 0x0a) to/from CRNL
 (\(dq\&\er\en\(dq\&, 0x0d0a) when writing/reading on this channel (example)\&.
 Note: socat simply strips all CR characters\&.
-.IP "\fB\f(CWignoreeof\fP\fP"
+.IP "\fBignoreeof\fP"
 When EOF occurs on this channel, \fBsocat\fP ignores it and tries to read more
 data (like \(dq\&tail \-f\(dq\&) (example)\&.
-.IP "\fB\f(CWreadbytes=<bytes>\fP\fP"
+.IP "\fBreadbytes=<bytes>\fP"
 \fBsocat\fP reads only so many bytes from this address (the address provides
 only so many bytes for transfer and pretends to be at EOF afterwards)\&.
 Must be greater than 0\&.
-.IP "\fB\f(CWlockfile=<filename>\fP\fP"
+.IP "\fBlockfile=<filename>\fP"
 If lockfile exists, exits with error\&. If lockfile does not exist, creates it
 and continues, unlinks lockfile on exit\&.
-.IP "\fB\f(CWwaitlock=<filename>\fP\fP"
+.IP "\fBwaitlock=<filename>\fP"
 If lockfile exists, waits until it disappears\&. When lockfile does not exist,
 creates it and continues, unlinks lockfile on exit\&.
-.IP "\fB\f(CWescape=<int>\fP\fP"
+.IP "\fBescape=<int>\fP"
 Specifies the numeric code of a character that triggers EOF on the input
 stream\&. It is useful with a terminal in raw mode
 (example)\&.
-
+enddit()
 .PP 
+startdit()enddit()
 .br 
 
 .PP 
@@ -2068,69 +2122,71 @@
 These options are intended for all kinds of sockets, e\&.g\&. IP or UNIX domain\&. Most are applied with a 
 \f(CWsetsockopt()\fP
 call\&.
-.IP "\fB\f(CWbind=<sockname>\fP\fP"
+startdit()
+.IP "\fBbind=<sockname>\fP"
 Binds the socket to the given socket address using the 
 \f(CWbind()\fP
 system
 call\&. The form of <sockname> is socket domain dependent:
 IP4 and IP6 allow the form [hostname|hostaddress][:(service|port)] (example),
-UNIX domain sockets require <filename>\&.
-.IP "\fB\f(CWconnect\-timeout=<seconds>\fP\fP"
+UNIX domain sockets require <filename>,
+VSOCK allow the form [cid][:(port)]\&.
+.IP "\fBconnect\-timeout=<seconds>\fP"
 Abort the connection attempt after <seconds> [timeval]
 with error status\&.
-.IP "\fB\f(CWso\-bindtodevice=<interface>\fP\fP"
+.IP "\fBso\-bindtodevice=<interface>\fP"
 Binds the socket to the given <interface>\&.
 This option might require root privilege\&.
-.IP "\fB\f(CWbroadcast\fP\fP"
+.IP "\fBbroadcast\fP"
 For datagram sockets, allows sending to broadcast addresses and receiving
 packets addressed to broadcast addresses\&. 
-.IP "\fB\f(CWdebug\fP\fP"
+.IP "\fBdebug\fP"
 Enables socket debugging\&.
-.IP "\fB\f(CWdontroute\fP\fP"
+.IP "\fBdontroute\fP"
 Only communicates with directly connected peers, does not use routers\&.
-.IP "\fB\f(CWkeepalive\fP\fP"
+.IP "\fBkeepalive\fP"
 Enables sending keepalives on the socket\&.
-.IP "\fB\f(CWlinger=<seconds>\fP\fP"
+.IP "\fBlinger=<seconds>\fP"
 Blocks 
 \f(CWshutdown()\fP
 or 
 \f(CWclose()\fP
 until data transfers have finished
 or the given timeout [int] expired\&. 
-.IP "\fB\f(CWoobinline\fP\fP"
+.IP "\fBoobinline\fP"
 Places out\-of\-band data in the input data stream\&.
-.IP "\fB\f(CWpriority=<priority>\fP\fP"
+.IP "\fBpriority=<priority>\fP"
 Sets the protocol defined <priority> [<int>] for outgoing
 packets\&. 
-.IP "\fB\f(CWrcvbuf=<bytes>\fP\fP"
+.IP "\fBrcvbuf=<bytes>\fP"
 Sets the size of the receive buffer after the 
 \f(CWsocket()\fP
 call to
 <bytes> [int]\&.  With TCP
 sockets, this value corresponds to the socket\(cq\&s maximal window size\&.
-.IP "\fB\f(CWrcvbuf\-late=<bytes>\fP\fP"
+.IP "\fBrcvbuf\-late=<bytes>\fP"
 Sets the size of the receive buffer when the socket is already
 connected to <bytes> [int]\&. 
 With TCP sockets, this value corresponds to the socket\(cq\&s 
 maximal window size\&. 
-.IP "\fB\f(CWrcvlowat=<bytes>\fP\fP"
+.IP "\fBrcvlowat=<bytes>\fP"
 Specifies the minimum number of received bytes [int] until
 the socket layer will pass the buffered data to \fBsocat\fP\&. 
-.IP "\fB\f(CWreuseaddr\fP\fP"
+.IP "\fBreuseaddr\fP"
 Allows other sockets to bind to an address even if parts of it (e\&.g\&. the
 local port) are already in use by \fBsocat\fP (example)\&. 
-.IP "\fB\f(CWsndbuf=<bytes>\fP\fP"
+.IP "\fBsndbuf=<bytes>\fP"
 Sets the size of the send buffer after the 
 \f(CWsocket()\fP
 call to
 <bytes> [int]\&.
-.IP "\fB\f(CWsndbuf\-late=<bytes>\fP\fP"
+.IP "\fBsndbuf\-late=<bytes>\fP"
 Sets the size of the send buffer when the socket is connected to
 <bytes> [int]\&.
-.IP "\fB\f(CWsndlowat=<bytes>\fP\fP"
+.IP "\fBsndlowat=<bytes>\fP"
 Specifies the minimum number of bytes in the send buffer until the socket
 layer will send the data to <bytes> [int]\&.
-.IP "\fB\f(CWpf=<string>\fP\fP"
+.IP "\fBpf=<string>\fP"
 Forces the use of the specified IP version or protocol\&. <string> can be
 something like \(dq\&ip4\(dq\& or \(dq\&ip6\(dq\&\&. The resulting value is
 used as first argument to the 
@@ -2140,7 +2196,7 @@
 calls\&.
 This option affects address resolution and the required syntax of bind and
 range options\&.
-.IP "\fB\f(CWtype=<type>\fP\fP"
+.IP "\fBtype=<type>\fP"
 Sets the type of the socket, specified as second argument to the
 \f(CWsocket()\fP
 or 
@@ -2149,7 +2205,7 @@
 [int]\&. Address resolution is not affected by this option\&.
 Under Linux, 1 means stream oriented socket, 2 means datagram socket, and 3
 means raw socket\&.
-.IP "\fB\f(CWprototype\fP\fP"
+.IP "\fBprototype\fP"
 Sets the protocol of the socket, specified as third argument to the
 \f(CWsocket()\fP
 or 
@@ -2157,57 +2213,60 @@
 calls, to <prototype>
 [int]\&. Address resolution is not affected by this option\&.
 6 means TCP, 17 means UDP\&.
-.IP "\fB\f(CWreuseport\fP\fP"
+.IP "\fBreuseport\fP"
 Set the 
 \f(CWSO_REUSEPORT\fP
 socket option\&.
-.IP "\fB\f(CWso\-timestamp\fP\fP"
+.IP "\fBso\-timestamp\fP"
 Sets the SO_TIMESTAMP socket option\&. This enables receiving and logging of
 timestamp ancillary messages\&.
-.IP "\fB\f(CWsetsockopt\-int=<level>:<optname>:<optval>\fP\fP"
-Invokes \f(CWsetsockopt()\fP for the socket with the given parameters\&. \f(CWlevel\fP
-[int] is used as second argument to \f(CWsetsockopt()\fP and
+.IP "\fBsetsockopt\-int=<level>:<optname>:<optval>\fP"
+Invokes setsockopt() for the socket with the given parameters\&. level
+[int] is used as second argument to setsockopt() and
 specifies the layer, e\&.g\&. SOL_TCP for TCP (6 on Linux), or SOL_SOCKET for
-the socket layer (1 on Linux)\&. \f(CWoptname\fP [int] is the
-third argument to \f(CWsetsockopt()\fP and tells which socket option is to be
+the socket layer (1 on Linux)\&. optname [int] is the
+third argument to setsockopt() and tells which socket option is to be
 set\&. For the actual numbers you might have to look up the appropriate include
-files of your system\&. The 4th \f(CWsetsockopt()\fP parameter, \f(CWvalue\fP
+files of your system\&. The 4th setsockopt() parameter, value
 [int], is passed to the function per pointer, and for the
 length parameter sizeof(int) is taken implicitely\&.
-.IP "\fB\f(CWsetsockopt\-bin=<level>:<optname>:<optval>\fP\fP"
-Like \f(CWsetsockopt\-int\fP, but <optval> must be provided in
+.IP "\fBsetsockopt\-bin=<level>:<optname>:<optval>\fP"
+Like setsockopt\-int, but <optval> must be provided in
 dalan format and specifies an arbitrary sequence of bytes;
 the length parameter is automatically derived from the data\&.
-.IP "\fB\f(CWsetsockopt\-string=<level>:<optname>:<optval>\fP\fP"
-Like \f(CWsetsockopt\-int\fP, but <optval> must be a string\&.
+.IP "\fBsetsockopt\-string=<level>:<optname>:<optval>\fP"
+Like setsockopt\-int, but <optval> must be a string\&.
 This string is passed to the function with trailing null character, and the
 length parameter is automatically derived from the data\&.
-
+enddit()
 .PP 
+startdit()enddit()
 .br 
 
 .PP 
 \fI\fBUNIX option group\fP\fP
 .PP 
 These options apply to UNIX domain based addresses\&.
-.IP "\fB\f(CWunix\-tightsocklen=[0|1]\fP\fP"
+startdit()
+.IP "\fBunix\-tightsocklen=[0|1]\fP"
 On socket operations, pass a socket address length that does not include the
 whole 
 \f(CWstruct sockaddr_un\fP
 record but (besides other components) only
 the relevant part of the filename or abstract string\&. Default is 1\&.
-
+enddit()
 .PP 
 \fI\fBIP4 and IP6 option groups\fP\fP
 .PP 
 These options can be used with IPv4 and IPv6 based sockets\&.
-.IP "\fB\f(CWtos=<tos>\fP\fP"
+startdit()
+.IP "\fBtos=<tos>\fP"
 Sets the TOS (type of service) field of outgoing packets to <tos>
 [byte] (see RFC 791)\&.
-.IP "\fB\f(CWttl=<ttl>\fP\fP"
+.IP "\fBttl=<ttl>\fP"
 Sets the TTL (time to live) field of outgoing packets to <ttl>
 [byte]\&.
-.IP "\fB\f(CWip\-options=<data>\fP\fP"
+.IP "\fBip\-options=<data>\fP"
 Sets IP options like source routing\&. Must be given in binary form,
 recommended format is a leading \(dq\&x\(dq\& followed by an even number of hex
 digits\&. This option may be used multiple times, data are appended\&.
@@ -2219,66 +2278,69 @@
 .br 
 IP options are defined in RFC 791\&. 
 .br 
-.IP "\fB\f(CWmtudiscover=<0|1|2>\fP\fP"
+.IP "\fBmtudiscover=<0|1|2>\fP"
 Takes 0, 1, 2 to never, want, or always use path MTU discover on this
 socket\&. 
-.IP "\fB\f(CWip\-pktinfo\fP\fP"
+.IP "\fBip\-pktinfo\fP"
 Sets the IP_PKTINFO socket option\&. This enables receiving and logging of
 ancillary messages containing destination address and interface (Linux)
 (example)\&. 
-.IP "\fB\f(CWip\-recverr\fP\fP"
+.IP "\fBip\-recverr\fP"
 Sets the IP_RECVERR socket option\&. This enables receiving and logging of
 ancillary messages containing detailed error information\&.
-.IP "\fB\f(CWip\-recvopts\fP\fP"
+.IP "\fBip\-recvopts\fP"
 Sets the IP_RECVOPTS socket option\&. This enables receiving and logging of IP
 options ancillary messages (Linux, *BSD)\&.
-.IP "\fB\f(CWip\-recvtos\fP\fP"
+.IP "\fBip\-recvtos\fP"
 Sets the IP_RECVTOS socket option\&. This enables receiving and logging of TOS
 (type of service) ancillary messages (Linux)\&.
-.IP "\fB\f(CWip\-recvttl\fP\fP"
+.IP "\fBip\-recvttl\fP"
 Sets the IP_RECVTTL socket option\&. This enables receiving and logging of TTL
 (time to live) ancillary messages (Linux, *BSD)\&.
-.IP "\fB\f(CWip\-recvdstaddr\fP\fP"
+.IP "\fBip\-recvdstaddr\fP"
 Sets the IP_RECVDSTADDR socket option\&. This enables receiving and logging of
 ancillary messages containing destination address (*BSD)
 (example)\&.
-.IP "\fB\f(CWip\-recvif\fP\fP"
+.IP "\fBip\-recvif\fP"
 Sets the IP_RECVIF socket option\&. This enables receiving and logging of
 interface ancillary messages (*BSD) (example)\&.
-.IP "\fB\f(CWip\-add\-membership=<multicast\-address:interface\-address>\fP\fP"
-.IP "\fB\f(CWip\-add\-membership=<multicast\-address:interface\-name>\fP\fP"
-.IP "\fB\f(CWip\-add\-membership=<multicast\-address:interface\-index>\fP\fP"
-.IP "\fB\f(CWip\-add\-membership=<multicast\-address:interface\-address:interface\-name>\fP\fP"
-.IP "\fB\f(CWip\-add\-membership=<multicast\-address:interface\-address:interface\-index>\fP\fP"
+.IP "\fBip\-add\-membership=<multicast\-address:interface\-address>\fP"
+.IP "\fBip\-add\-membership=<multicast\-address:interface\-name>\fP"
+.IP "\fBip\-add\-membership=<multicast\-address:interface\-index>\fP"
+.IP "\fBip\-add\-membership=<multicast\-address:interface\-address:interface\-name>\fP"
+.IP "\fBip\-add\-membership=<multicast\-address:interface\-address:interface\-index>\fP"
 Makes the socket member of the specified multicast group\&. This is currently
 only implemented for IPv4\&. The option takes the IP address of the multicast
 group and info about the desired network interface\&. The most common syntax
 is the first one, while the others are only available on systems that
-provide \f(CWstruct mreqn\fP (Linux)\&.
+provide struct mreqn (Linux)\&.
 .br 
 The indices of active network interfaces can be shown using the utility
 \fBprocan\fP\&.
-.IP "\fB\f(CWip\-multicast\-if=<hostname>\fP\fP"
+.IP "\fBip\-multicast\-if=<hostname>\fP"
 Specifies hostname or address of the network interface to be used for
 multicast traffic\&.
-.IP "\fB\f(CWip\-multicast\-loop=<bool>\fP\fP"
+.IP "\fBip\-multicast\-loop=<bool>\fP"
 Specifies if outgoing multicast traffic should loop back to the interface\&.
-.IP "\fB\f(CWip\-multicast\-ttl=<byte>\fP\fP"
+.IP "\fBip\-multicast\-ttl=<byte>\fP"
 Sets the TTL used for outgoing multicast traffic\&. Default is 1\&.
-.IP "\fB\f(CWres\-debug\fP\fP"
-.IP "\fB\f(CWres\-aaonly\fP\fP"
-.IP "\fB\f(CWres\-usevc\fP\fP"
-.IP "\fB\f(CWres\-primary\fP\fP"
-.IP "\fB\f(CWres\-igntc\fP\fP"
-.IP "\fB\f(CWres\-recurse\fP\fP"
-.IP "\fB\f(CWres\-defnames\fP\fP"
-.IP "\fB\f(CWres\-stayopen\fP\fP"
-.IP "\fB\f(CWres\-dnsrch\fP\fP"
+.IP "\fBres\-debug\fP"
+.IP "\fBres\-aaonly\fP"
+.IP "\fBres\-usevc\fP"
+.IP "\fBres\-primary\fP"
+.IP "\fBres\-igntc\fP"
+.IP "\fBres\-recurse\fP"
+.IP "\fBres\-defnames\fP"
+.IP "\fBres\-stayopen\fP"
+.IP "\fBres\-dnsrch\fP"
 These options set the corresponding resolver (name resolution) option flags\&.
 Append \(dq\&=0\(dq\& to clear a default option\&. See man resolver(5) for more
 information on these options\&. Note: these options are valid only for the
 address they are applied to\&.
-.IP 
+.PP 
+enddit()
+.PP 
+startdit()enddit()
 .br 
 
 .PP 
@@ -2287,36 +2349,38 @@
 These options can only be used on IPv6 based sockets\&. See IP
 options for options that can be applied to both IPv4 and IPv6
 sockets\&.
-.IP "\fB\f(CWipv6only=<bool>\fP\fP"
+startdit()
+.IP "\fBipv6only=<bool>\fP"
 Sets the IPV6_V6ONLY socket option\&. If 0, the TCP stack will also accept
 connections using IPv4 protocol on the same port\&. The default is system
 dependent\&.
-.IP "\fB\f(CWipv6\-recvdstopts\fP\fP"
+.IP "\fBipv6\-recvdstopts\fP"
 Sets the IPV6_RECVDSTOPTS socket option\&. This enables receiving and logging
 of ancillary messages containing the destination options\&.
-.IP "\fB\f(CWipv6\-recvhoplimit\fP\fP"
+.IP "\fBipv6\-recvhoplimit\fP"
 Sets the IPV6_RECVHOPLIMIT socket option\&. This enables receiving and logging
 of ancillary messages containing the hoplimit\&.
-.IP "\fB\f(CWipv6\-recvhopopts\fP\fP"
+.IP "\fBipv6\-recvhopopts\fP"
 Sets the IPV6_RECVHOPOPTS socket option\&. This enables receiving and logging
 of ancillary messages containing the hop options\&.
-.IP "\fB\f(CWipv6\-recvpktinfo\fP\fP"
+.IP "\fBipv6\-recvpktinfo\fP"
 Sets the IPV6_RECVPKTINFO socket option\&. This enables receiving and logging
 of ancillary messages containing destination address and interface\&.
-.IP "\fB\f(CWipv6\-unicast\-hops=link(TYPE_INT)(<int>)\fP\fP"
+.IP "\fBipv6\-unicast\-hops=link(TYPE_INT)(<int>)\fP"
 Sets the IPV6_UNICAST_HOPS socket option\&. This sets the hop count limit
 (TTL) for outgoing unicast packets\&.
-.IP "\fB\f(CWipv6\-recvrthdr\fP\fP"
+.IP "\fBipv6\-recvrthdr\fP"
 Sets the IPV6_RECVRTHDR socket option\&. This enables receiving and logging
 of ancillary messages containing routing information\&.
-.IP "\fB\f(CWipv6\-tclass\fP\fP"
+.IP "\fBipv6\-tclass\fP"
 Sets the IPV6_TCLASS socket option\&. This sets the transfer class of outgoing
 packets\&.
-.IP "\fB\f(CWipv6\-recvtclass\fP\fP"
+.IP "\fBipv6\-recvtclass\fP"
 Sets the IPV6_RECVTCLASS socket option\&. This enables receiving and logging
 of ancillary messages containing the transfer class\&.
-
+enddit()
 .PP 
+startdit()enddit()
 .br 
 
 .PP 
@@ -2325,83 +2389,87 @@
 These options may be applied to TCP sockets\&. They work by invoking 
 \f(CWsetsockopt()\fP
 with the appropriate parameters\&.
-.IP "\fB\f(CWcork\fP\fP"
+startdit()
+.IP "\fBcork\fP"
 Doesn\(cq\&t send packets smaller than MSS (maximal segment size)\&.
-.IP "\fB\f(CWdefer\-accept\fP\fP"
+.IP "\fBdefer\-accept\fP"
 While listening, accepts connections only when data from the peer arrived\&.
-.IP "\fB\f(CWkeepcnt=<count>\fP\fP"
+.IP "\fBkeepcnt=<count>\fP"
 Sets the number of keepalives before shutting down the socket to
 <count> [int]\&.
-.IP "\fB\f(CWkeepidle=<seconds>\fP\fP"
+.IP "\fBkeepidle=<seconds>\fP"
 Sets the idle time before sending the first keepalive to <seconds>
 [int]\&.
-.IP "\fB\f(CWkeepintvl=<seconds>\fP\fP"
+.IP "\fBkeepintvl=<seconds>\fP"
 Sets the interval between two keepalives to <seconds>
 [int]\&. 
-.IP "\fB\f(CWlinger2=<seconds>\fP\fP"
+.IP "\fBlinger2=<seconds>\fP"
 Sets the time to keep the socket in FIN\-WAIT\-2 state to <seconds>
 [int]\&.
-.IP "\fB\f(CWmss=<bytes>\fP\fP"
+.IP "\fBmss=<bytes>\fP"
 Sets the MSS (maximum segment size) after the 
 \f(CWsocket()\fP
 call to <bytes>
 [int]\&. This
 value is then proposed to the peer with the SYN or SYN/ACK packet
 (example)\&. 
-.IP "\fB\f(CWmss\-late=<bytes>\fP\fP"
+.IP "\fBmss\-late=<bytes>\fP"
 Sets the MSS of the socket after connection has been established to <bytes>
 [int]\&.
-.IP "\fB\f(CWnodelay\fP\fP"
+.IP "\fBnodelay\fP"
 Turns off the Nagle algorithm for measuring the RTT (round trip time)\&.
-.IP "\fB\f(CWrfc1323\fP\fP"
+.IP "\fBrfc1323\fP"
 Enables RFC1323 TCP options: TCP window scale, round\-trip time measurement
 (RTTM), and protect against wrapped sequence numbers (PAWS) (AIX)\&.
-.IP "\fB\f(CWstdurg\fP\fP"
+.IP "\fBstdurg\fP"
 Enables RFC1122 compliant urgent pointer handling (AIX)\&.
-.IP "\fB\f(CWsyncnt=<count>\fP\fP"
+.IP "\fBsyncnt=<count>\fP"
 Sets the maximal number of SYN retransmits during connect to <count>
 [int]\&.
-.IP "\fB\f(CWmd5sig\fP\fP"
+.IP "\fBmd5sig\fP"
 Enables generation of MD5 digests on the packets (FreeBSD)\&.
-.IP "\fB\f(CWnoopt\fP\fP"
+.IP "\fBnoopt\fP"
 Disables use of TCP options (FreeBSD, MacOSX)\&.
-.IP "\fB\f(CWnopush\fP\fP"
+.IP "\fBnopush\fP"
 sets the TCP_NOPUSH socket option (FreeBSD, MacOSX)\&.
-.IP "\fB\f(CWsack\-disable\fP\fP"
+.IP "\fBsack\-disable\fP"
 Disables use the selective acknowledge feature (OpenBSD)\&.
-.IP "\fB\f(CWsignature\-enable\fP\fP"
+.IP "\fBsignature\-enable\fP"
 Enables generation of MD5 digests on the packets (OpenBSD)\&.
-.IP "\fB\f(CWabort\-threshold=<milliseconds>\fP\fP"
+.IP "\fBabort\-threshold=<milliseconds>\fP"
 Sets the time to wait for an answer of the peer on an established connection
 (HP\-UX)\&.
-.IP "\fB\f(CWconn\-abort\-threshold=<milliseconds>\fP\fP"
+.IP "\fBconn\-abort\-threshold=<milliseconds>\fP"
 Sets the time to wait for an answer of the server during the initial connect
 (HP\-UX)\&.
-.IP "\fB\f(CWkeepinit\fP\fP"
+.IP "\fBkeepinit\fP"
 Sets the time to wait for an answer of the server during connect() before
 giving up\&. Value in half seconds, default is 150 (75s) (Tru64)\&.
-.IP "\fB\f(CWpaws\fP\fP"
+.IP "\fBpaws\fP"
 Enables the \(dq\&protect against wrapped sequence numbers\(dq\& feature (Tru64)\&.
-.IP "\fB\f(CWsackena\fP\fP"
+.IP "\fBsackena\fP"
 Enables selective acknowledge (Tru64)\&.
-.IP "\fB\f(CWtsoptena\fP\fP"
+.IP "\fBtsoptena\fP"
 Enables the time stamp option that allows RTT recalculation on existing
 connections (Tru64)\&.
-
+enddit()
 .PP 
+startdit()enddit()
 .br 
 
 .PP 
 \fI\fBSCTP option group\fP\fP
 .PP 
 These options may be applied to SCTP stream sockets\&.
-.IP "\fB\f(CWsctp\-nodelay\fP\fP"
+startdit()
+.IP "\fBsctp\-nodelay\fP"
 Sets the SCTP_NODELAY socket option that disables the Nagle algorithm\&.
-.IP "\fB\f(CWsctp\-maxseg=<bytes>\fP\fP"
+.IP "\fBsctp\-maxseg=<bytes>\fP"
 Sets the SCTP_MAXSEG socket option to <bytes> [int]\&.  This
 value is then proposed to the peer with the SYN or SYN/ACK packet\&. 
-
+enddit()
 .PP 
+startdit()enddit()
 .br 
 
 .PP 
@@ -2409,14 +2477,15 @@
 .PP 
 Here we find options that are related to the network port mechanism and thus
 can be used with UDP, TCP, and SCTP client and server addresses\&.
-.IP "\fB\f(CWsourceport=<port>\fP\fP"
+startdit()
+.IP "\fBsourceport=<port>\fP"
 For outgoing (client) TCP and UDP connections, it sets the source
 <port> using an extra 
 \f(CWbind()\fP
 call\&.
 With TCP or UDP listen addresses, socat immediately shuts down the
 connection if the client does not use this sourceport (example)\&.
-.IP "\fB\f(CWlowport\fP\fP"
+.IP "\fBlowport\fP"
 Outgoing (client) TCP and UDP connections with this option use
 an unused random source port between 640 and 1023 incl\&. On UNIX class operating
 systems, this requires root privilege, and thus indicates that the
@@ -2424,22 +2493,25 @@
 TCP and UDP listen addresses with this option immediately shut down the
 connection if the client does not use a sourceport <= 1023\&.
 This mechanism can provide limited authorization under some circumstances\&.
-
+enddit()
 .PP 
+startdit()enddit()
 .br 
 
 .PP 
 \fI\fBSOCKS option group\fP\fP
 .PP 
 When using SOCKS type addresses, some socks specific options can be set\&.
-.IP "\fB\f(CWsocksport=<tcp service>\fP\fP"
+startdit()
+.IP "\fBsocksport=<tcp service>\fP"
 Overrides the default \(dq\&socks\(dq\& service or port 1080 for the socks server
 port with <TCP service>\&.
-.IP "\fB\f(CWsocksuser=<user>\fP\fP"
+.IP "\fBsocksuser=<user>\fP"
 Sends the <user> [string] in the username field to the
 socks server\&. Default is the actual user name ($LOGNAME or $USER) (example)\&.
-
+enddit()
 .PP 
+startdit()enddit()
 .br 
 
 .PP 
@@ -2448,15 +2520,16 @@
 Options that can be provided with HTTP type addresses\&. The only HTTP address
 currently implemented is proxy\-connect\&.
 .PP 
-.IP "\fB\f(CWproxyport=<TCP service>\fP\fP"
+startdit()
+.IP "\fBproxyport=<TCP service>\fP"
 Overrides the default HTTP proxy port 8080 with
 <TCP service>\&.
-.IP "\fB\f(CWignorecr\fP\fP"
+.IP "\fBignorecr\fP"
 The HTTP protocol requires the use of CR+NL as line terminator\&. When a proxy
 server violates this standard, socat might not understand its answer\&. 
 This option directs socat to interprete NL as line terminator and
 to ignore CR in the answer\&. Nevertheless, socat sends CR+NL to the proxy\&.
-.IP "\fB\f(CWproxyauth=<username>:<password>\fP\fP"
+.IP "\fBproxyauth=<username>:<password>\fP"
 Provide \(dq\&basic\(dq\& authentication to the proxy server\&. The argument to the
 option is used with a \(dq\&Proxy\-Authorization: Base\(dq\& header in base64 encoded
 form\&.
@@ -2464,13 +2537,14 @@
 Note: username and password are visible for every user on the local machine
 in the process list; username and password are transferred to the proxy
 server unencrypted (base64 encoded) and might be sniffed\&.
-.IP "\fB\f(CWresolve\fP\fP"
+.IP "\fBresolve\fP"
 Per default, socat sends to the proxy a CONNECT request containing the
 target hostname\&. With this option, socat resolves the hostname locally and
 sends the IP address\&. Please note that, according to RFC 2396, only name
 resolution to IPv4 addresses is implemented\&.
-
+enddit()
 .PP 
+startdit()enddit()
 .br 
 
 .PP 
@@ -2479,13 +2553,14 @@
 These options check if a connecting client should be granted access\&. They can
 be applied to listening and receiving network sockets\&. tcp\-wrappers options
 fall into this group\&.
-.IP "\fB\f(CWrange=<address\-range>\fP\fP"
+startdit()
+.IP "\fBrange=<address\-range>\fP"
 After accepting a connection, tests if the peer is within \fIrange\fP\&. For
 IPv4 addresses, address\-range takes the form address/bits, e\&.g\&.
 10\&.0\&.0\&.0/8, or address:mask, e\&.g\&. 10\&.0\&.0\&.0:255\&.0\&.0\&.0 (example); for IPv6, it is [ip6\-address]/bits, e\&.g\&. [::1]/128\&.
 If the client address does not match, \fBsocat\fP refuses the connection attempt, issues a warning, and keeps
 listening/receiving\&.
-.IP "\fB\f(CWtcpwrap[=<name>]\fP\fP"
+.IP "\fBtcpwrap[=<name>]\fP"
 Uses Wietse Venema\(cq\&s libwrap (tcpd) library to determine
 if the client is allowed to connect\&. The configuration files are
 /etc/hosts\&.allow and /etc/hosts\&.deny per default, see \(dq\&man 5 hosts_access\(dq\&
@@ -2494,37 +2569,42 @@
 If omitted, the basename of socats invocation (argv[0]) is passed\&. 
 If both tcpwrap and range options are applied to an address, both
 conditions must be fulfilled to allow the connection\&.
-.IP "\fB\f(CWallow\-table=<filename>\fP\fP"
+.IP "\fBallow\-table=<filename>\fP"
 Takes the specified file instead of /etc/hosts\&.allow\&.
-.IP "\fB\f(CWdeny\-table=<filename>\fP\fP"
+.IP "\fBdeny\-table=<filename>\fP"
 Takes the specified file instead of /etc/hosts\&.deny\&.
-.IP "\fB\f(CWtcpwrap\-etc=<directoryname>\fP\fP"
+.IP "\fBtcpwrap\-etc=<directoryname>\fP"
 Looks for hosts\&.allow and hosts\&.deny in the specified directory\&. Is
 overridden by options hosts\-allow
 and hosts\-deny\&.
-
+enddit()
 .PP 
+startdit()enddit()
 .br 
 
 .PP 
 \fI\fBLISTEN option group\fP\fP
 .PP 
 Options specific to listening sockets\&.
-.IP "\fB\f(CWbacklog=<count>\fP\fP"
+startdit()
+.IP "\fBbacklog=<count>\fP"
 Sets the backlog value passed with the 
 \f(CWlisten()\fP
 system call to <count>
 [int]\&. Default is 5\&. 
-.IP "\fB\f(CWmax\-children=<count>\fP\fP"
+.IP "\fBmax\-children=<count>\fP"
 Limits the number of concurrent child processes [int]\&.
 Default is no limit\&. 
+enddit()
+startdit()enddit()
 .br 
 
 .PP 
 \fI\fBCHILD option group\fP\fP
 .PP 
 Options for addresses with multiple connections via child processes\&.
-.IP "\fB\f(CWfork\fP\fP"
+startdit()
+.IP "\fBfork\fP"
 After establishing a connection, handles its channel in a child process and
 keeps the parent process attempting to produce more connections, either by
 listening or by connecting in a loop (example)\&.
@@ -2538,28 +2618,31 @@
 On some operating systems (e\&.g\&. FreeBSD) this option does not work for
 UDP\-LISTEN addresses\&.
 .br 
-
+enddit()
 .PP 
+startdit()enddit()
 .br 
 
 .PP 
 \fI\fBEXEC option group\fP\fP
 .PP 
 Options for addresses that invoke a program\&.
-.IP "\fB\f(CWpath=<string>\fP\fP"
+startdit()
+.IP "\fBpath=<string>\fP"
 Overrides the PATH environment variable for searching the program with
 <string>\&. This
 \f(CW$PATH\fP
 value is effective in the child process too\&.
-.IP "\fB\f(CWlogin\fP\fP"
+.IP "\fBlogin\fP"
 Prefixes 
 \f(CWargv[0]\fP
 for the 
 \f(CWexecvp()\fP
 call with \(cq\&\-\(cq\&, thus making a
 shell behave as login shell\&.
-
+enddit()
 .PP 
+startdit()enddit()
 .br 
 
 .PP 
@@ -2572,11 +2655,13 @@
 the child process, while stderr is inherited from the \fBsocat\fP process, and the
 child process uses file descriptors 0 and 1 for communicating with the main
 socat process\&.
-.IP "\fB\f(CWnofork\fP\fP"
+startdit()
+.IP "\fBnofork\fP"
 Does not fork a subprocess for executing the program, instead calls execvp()
 or system() directly from the actual socat instance\&. This avoids the
 overhead of another process between the program and its peer,
 but introduces a lot of restrictions:
+startit()
 .IP o 
 this option can only be applied to the second \fBsocat\fP address\&.
 .IP o 
@@ -2592,44 +2677,46 @@
 append,  cloexec, flock, user, group, mode, nonblock,
 perm\-late, setlk, and setpgid cannot be applied\&. Some of these could be
 used on the first address though\&.
-.IP "\fB\f(CWpipes\fP\fP"
+endit()
+.IP "\fBpipes\fP"
 Creates a pair of unnamed pipes for interprocess communication instead of a
 socket pair\&.
-.IP "\fB\f(CWopenpty\fP\fP"
+.IP "\fBopenpty\fP"
 Establishes communication with the sub process using a pseudo terminal
 created with 
 \f(CWopenpty()\fP
 instead of the default (socketpair or ptmx)\&.
-.IP "\fB\f(CWptmx\fP\fP"
+.IP "\fBptmx\fP"
 Establishes communication with the sub process using a pseudo terminal
 created by opening \fB/dev/ptmx\fP or \fB/dev/ptc\fP instead of the default
 (socketpair)\&.
-.IP "\fB\f(CWpty\fP\fP"
+.IP "\fBpty\fP"
 Establishes communication with the sub process using a pseudo terminal
 instead of a socket pair\&. Creates the pty with an available mechanism\&. If
 openpty and ptmx are both available, it uses ptmx because this is POSIX
 compliant (example)\&.
-.IP "\fB\f(CWctty\fP\fP"
+.IP "\fBctty\fP"
 Makes the pty the controlling tty of the sub process (example)\&.
-.IP "\fB\f(CWstderr\fP\fP"
+.IP "\fBstderr\fP"
 Directs stderr of the sub process to its output channel by making stderr a
 \f(CWdup()\fP
 of stdout (example)\&. 
-.IP "\fB\f(CWfdin=<fdnum>\fP\fP"
+.IP "\fBfdin=<fdnum>\fP"
 Assigns the sub processes input channel to its file descriptor
 <fdnum> 
 instead of stdin (0)\&. The program started from the subprocess has to use
 this fd for reading data from \fBsocat\fP (example)\&. 
-.IP "\fB\f(CWfdout=<fdnum>\fP\fP"
+.IP "\fBfdout=<fdnum>\fP"
 Assigns the sub processes output channel to its file descriptor
 <fdnum> 
 instead of stdout (1)\&. The program started from the subprocess has to use 
 this fd for writing data to \fBsocat\fP (example)\&.
-.IP "\fB\f(CWsighup\fP\fP, \fB\f(CWsigint\fP\fP, \fB\f(CWsigquit\fP\fP"
+.IP "\fBsighup\fP, \fBsigint\fP, \fBsigquit\fP"
 Has \fBsocat\fP pass signals of this type to the sub process\&.
 If no address has this option, socat terminates on these signals\&.
-
+enddit()
 .PP 
+startdit()enddit()
 .br 
 
 .PP 
@@ -2642,36 +2729,37 @@
 For EXEC and SYSTEM addresses with option PTY,
 these options apply to the pty by the child processes\&.
 .PP 
-.IP "\fB\f(CWb0\fP\fP"
+startdit()
+.IP "\fBb0\fP"
 Disconnects the terminal\&.
-.IP "\fB\f(CWb19200\fP\fP"
+.IP "\fBb19200\fP"
 Sets the serial line speed to 19200 baud\&. Some other rates are possible; use
-something like \f(CWsocat \-hh |grep \(cq\& b[1\-9]\(cq\&\fP to find all speeds supported by
+something like socat \-hh |grep \(cq\& b[1\-9]\(cq\& to find all speeds supported by
 your implementation\&.
 .br 
 Note: On some operating systems, these options may not be
 available\&. Use ispeed or ospeed
 instead\&.
-.IP "\fB\f(CWecho=<bool>\fP\fP"
+.IP "\fBecho=<bool>\fP"
 Enables or disables local echo\&.
-.IP "\fB\f(CWicanon=<bool>\fP\fP"
+.IP "\fBicanon=<bool>\fP"
 Sets or clears canonical mode, enabling line buffering and some special
 characters\&. 
-.IP "\fB\f(CWraw\fP\fP"
+.IP "\fBraw\fP"
 Sets raw mode, thus passing input and output almost unprocessed\&. This option is obsolete, use option rawer or cfmakeraw instead\&.
-.IP "\fB\f(CWrawer\fP\fP"
+.IP "\fBrawer\fP"
 Makes terminal rawer than raw option\&. This option implicitly turns off echo\&. (example)\&.
-.IP "\fB\f(CWcfmakeraw\fP\fP"
-Sets raw mode by invoking \f(CWcfmakeraw()\fP or by simulating this call\&. This option implicitly turns off echo\&.
-.IP "\fB\f(CWignbrk=<bool>\fP\fP"
+.IP "\fBcfmakeraw\fP"
+Sets raw mode by invoking cfmakeraw() or by simulating this call\&. This option implicitly turns off echo\&.
+.IP "\fBignbrk=<bool>\fP"
 Ignores or interpretes the BREAK character (e\&.g\&., ^C)
-.IP "\fB\f(CWbrkint=<bool>\fP\fP"
-.IP "\fB\f(CWbs0\fP\fP"
-.IP "\fB\f(CWbs1\fP\fP"
-.IP "\fB\f(CWbsdly=<0|1>\fP\fP"
-.IP "\fB\f(CWclocal=<bool>\fP\fP"
+.IP "\fBbrkint=<bool>\fP"
+.IP "\fBbs0\fP"
+.IP "\fBbs1\fP"
+.IP "\fBbsdly=<0|1>\fP"
+.IP "\fBclocal=<bool>\fP"
 
-.IP 
+.PP 
 \.LP
 \.nf
 \fBcr0
@@ -2682,12 +2770,12 @@
 \.IP
 Sets the carriage return delay to 0, 1, 2, or 3, respectively\&.
 0 means no delay, the other values are terminal dependent\&.
-.IP 
-.IP "\fB\f(CWcrdly=<0|1|2|3>\fP\fP"
-.IP "\fB\f(CWcread=<bool>\fP\fP"
-.IP "\fB\f(CWcrtscts=<bool>\fP\fP"
+.PP 
+.IP "\fBcrdly=<0|1|2|3>\fP"
+.IP "\fBcread=<bool>\fP"
+.IP "\fBcrtscts=<bool>\fP"
 
-.IP 
+.PP 
 \.LP
 \.nf
 \fBcs5 
@@ -2697,104 +2785,105 @@
 \.fi
 \.IP
 Sets the character size to 5, 6, 7, or 8 bits, respectively\&.
-.IP 
-.IP "\fB\f(CWcsize=<0|1|2|3>\fP\fP"
-.IP "\fB\f(CWcstopb=<bool>\fP\fP"
+.PP 
+.IP "\fBcsize=<0|1|2|3>\fP"
+.IP "\fBcstopb=<bool>\fP"
 Sets two stop bits, rather than one\&.
-.IP "\fB\f(CWdsusp=<byte>\fP\fP"
+.IP "\fBdsusp=<byte>\fP"
 Sets the value for the VDSUSP character that suspends the current foreground
 process and reactivates the shell (all except Linux)\&.
-.IP "\fB\f(CWechoctl=<bool>\fP\fP"
+.IP "\fBechoctl=<bool>\fP"
 Echos control characters in hat notation (e\&.g\&. ^A)
-.IP "\fB\f(CWechoe=<bool>\fP\fP"
-.IP "\fB\f(CWechok=<bool>\fP\fP"
-.IP "\fB\f(CWechoke=<bool>\fP\fP"
-.IP "\fB\f(CWechonl=<bool>\fP\fP"
-.IP "\fB\f(CWechoprt=<bool>\fP\fP"
-.IP "\fB\f(CWeof=<byte>\fP\fP"
-.IP "\fB\f(CWeol=<byte>\fP\fP"
-.IP "\fB\f(CWeol2=<byte>\fP\fP"
-.IP "\fB\f(CWerase=<byte>\fP\fP"
-.IP "\fB\f(CWdiscard=<byte>\fP\fP"
-.IP "\fB\f(CWff0\fP\fP"
-.IP "\fB\f(CWff1\fP\fP"
-.IP "\fB\f(CWffdly=<bool>\fP\fP"
-.IP "\fB\f(CWflusho=<bool>\fP\fP"
-.IP "\fB\f(CWhupcl=<bool>\fP\fP"
-.IP "\fB\f(CWicrnl=<bool>\fP\fP"
-.IP "\fB\f(CWiexten=<bool>\fP\fP"
-.IP "\fB\f(CWigncr=<bool>\fP\fP"
-.IP "\fB\f(CWignpar=<bool>\fP\fP"
-.IP "\fB\f(CWimaxbel=<bool>\fP\fP"
-.IP "\fB\f(CWinlcr=<bool>\fP\fP"
-.IP "\fB\f(CWinpck=<bool>\fP\fP"
-.IP "\fB\f(CWintr=<byte>\fP\fP"
-.IP "\fB\f(CWisig=<bool>\fP\fP"
-.IP "\fB\f(CWispeed=<unsigned\-int>\fP\fP"
+.IP "\fBechoe=<bool>\fP"
+.IP "\fBechok=<bool>\fP"
+.IP "\fBechoke=<bool>\fP"
+.IP "\fBechonl=<bool>\fP"
+.IP "\fBechoprt=<bool>\fP"
+.IP "\fBeof=<byte>\fP"
+.IP "\fBeol=<byte>\fP"
+.IP "\fBeol2=<byte>\fP"
+.IP "\fBerase=<byte>\fP"
+.IP "\fBdiscard=<byte>\fP"
+.IP "\fBff0\fP"
+.IP "\fBff1\fP"
+.IP "\fBffdly=<bool>\fP"
+.IP "\fBflusho=<bool>\fP"
+.IP "\fBhupcl=<bool>\fP"
+.IP "\fBicrnl=<bool>\fP"
+.IP "\fBiexten=<bool>\fP"
+.IP "\fBigncr=<bool>\fP"
+.IP "\fBignpar=<bool>\fP"
+.IP "\fBimaxbel=<bool>\fP"
+.IP "\fBinlcr=<bool>\fP"
+.IP "\fBinpck=<bool>\fP"
+.IP "\fBintr=<byte>\fP"
+.IP "\fBisig=<bool>\fP"
+.IP "\fBispeed=<unsigned\-int>\fP"
 Set the baud rate for incoming data on this line\&.
 .br 
 See also: ospeed, b19200
-.IP "\fB\f(CWistrip=<bool>\fP\fP"
-.IP "\fB\f(CWiuclc=<bool>\fP\fP"
-.IP "\fB\f(CWixany=<bool>\fP\fP"
-.IP "\fB\f(CWixoff=<bool>\fP\fP"
-.IP "\fB\f(CWixon=<bool>\fP\fP"
-.IP "\fB\f(CWkill=<byte>\fP\fP"
-.IP "\fB\f(CWlnext=<byte>\fP\fP"
-.IP "\fB\f(CWmin=<byte>\fP\fP"
-.IP "\fB\f(CWnl0\fP\fP"
+.IP "\fBistrip=<bool>\fP"
+.IP "\fBiuclc=<bool>\fP"
+.IP "\fBixany=<bool>\fP"
+.IP "\fBixoff=<bool>\fP"
+.IP "\fBixon=<bool>\fP"
+.IP "\fBkill=<byte>\fP"
+.IP "\fBlnext=<byte>\fP"
+.IP "\fBmin=<byte>\fP"
+.IP "\fBnl0\fP"
 Sets the newline delay to 0\&.
-.IP "\fB\f(CWnl1\fP\fP"
-.IP "\fB\f(CWnldly=<bool>\fP\fP"
-.IP "\fB\f(CWnoflsh=<bool>\fP\fP"
-.IP "\fB\f(CWocrnl=<bool>\fP\fP"
-.IP "\fB\f(CWofdel=<bool>\fP\fP"
-.IP "\fB\f(CWofill=<bool>\fP\fP"
-.IP "\fB\f(CWolcuc=<bool>\fP\fP"
-.IP "\fB\f(CWonlcr=<bool>\fP\fP"
-.IP "\fB\f(CWonlret=<bool>\fP\fP"
-.IP "\fB\f(CWonocr=<bool>\fP\fP"
-.IP "\fB\f(CWopost=<bool>\fP\fP"
+.IP "\fBnl1\fP"
+.IP "\fBnldly=<bool>\fP"
+.IP "\fBnoflsh=<bool>\fP"
+.IP "\fBocrnl=<bool>\fP"
+.IP "\fBofdel=<bool>\fP"
+.IP "\fBofill=<bool>\fP"
+.IP "\fBolcuc=<bool>\fP"
+.IP "\fBonlcr=<bool>\fP"
+.IP "\fBonlret=<bool>\fP"
+.IP "\fBonocr=<bool>\fP"
+.IP "\fBopost=<bool>\fP"
 Enables or disables output processing; e\&.g\&., converts NL to CR\-NL\&.
-.IP "\fB\f(CWospeed=<unsigned\-int>\fP\fP"
+.IP "\fBospeed=<unsigned\-int>\fP"
 Set the baud rate for outgoing data on this line\&.
 .br 
 See also: ispeed, b19200
-.IP "\fB\f(CWparenb=<bool>\fP\fP"
+.IP "\fBparenb=<bool>\fP"
 Enable parity generation on output and parity checking for input\&.
-.IP "\fB\f(CWparmrk=<bool>\fP\fP"
-.IP "\fB\f(CWparodd=<bool>\fP\fP"
-.IP "\fB\f(CWpendin=<bool>\fP\fP"
-.IP "\fB\f(CWquit=<byte>\fP\fP"
-.IP "\fB\f(CWreprint=<byte>\fP\fP"
-.IP "\fB\f(CWsane\fP\fP"
+.IP "\fBparmrk=<bool>\fP"
+.IP "\fBparodd=<bool>\fP"
+.IP "\fBpendin=<bool>\fP"
+.IP "\fBquit=<byte>\fP"
+.IP "\fBreprint=<byte>\fP"
+.IP "\fBsane\fP"
 Brings the terminal to something like a useful default state\&.
-.IP "\fB\f(CWstart=<byte>\fP\fP"
-.IP "\fB\f(CWstop=<byte>\fP\fP"
-.IP "\fB\f(CWsusp=<byte>\fP\fP"
-.IP "\fB\f(CWswtc=<byte>\fP\fP"
-.IP "\fB\f(CWtab0\fP\fP"
-.IP "\fB\f(CWtab1\fP\fP"
-.IP "\fB\f(CWtab2\fP\fP"
-.IP "\fB\f(CWtab3\fP\fP"
-.IP "\fB\f(CWtabdly=<unsigned\-int>\fP\fP"
-.IP "\fB\f(CWtime=<byte>\fP\fP"
-.IP "\fB\f(CWtostop=<bool>\fP\fP"
-.IP "\fB\f(CWvt0\fP\fP"
-.IP "\fB\f(CWvt1\fP\fP"
-.IP "\fB\f(CWvtdly=<bool>\fP\fP"
-.IP "\fB\f(CWwerase=<byte>\fP\fP"
-.IP "\fB\f(CWxcase=<bool>\fP\fP"
-.IP "\fB\f(CWxtabs\fP\fP"
-.IP "\fB\f(CWi\-pop\-all\fP\fP"
+.IP "\fBstart=<byte>\fP"
+.IP "\fBstop=<byte>\fP"
+.IP "\fBsusp=<byte>\fP"
+.IP "\fBswtc=<byte>\fP"
+.IP "\fBtab0\fP"
+.IP "\fBtab1\fP"
+.IP "\fBtab2\fP"
+.IP "\fBtab3\fP"
+.IP "\fBtabdly=<unsigned\-int>\fP"
+.IP "\fBtime=<byte>\fP"
+.IP "\fBtostop=<bool>\fP"
+.IP "\fBvt0\fP"
+.IP "\fBvt1\fP"
+.IP "\fBvtdly=<bool>\fP"
+.IP "\fBwerase=<byte>\fP"
+.IP "\fBxcase=<bool>\fP"
+.IP "\fBxtabs\fP"
+.IP "\fBi\-pop\-all\fP"
 With UNIX System V STREAMS, removes all drivers from the stack\&.
-.IP "\fB\f(CWi\-push=<string>\fP\fP"
+.IP "\fBi\-push=<string>\fP"
 With UNIX System V STREAMS, pushes the driver (module) with the given name
 (string) onto the stack\&. For example, to make sure that a
 character device on Solaris supports termios etc, use the following options:
-\f(CWi\-pop\-all,i\-push=ptem,i\-push=ldterm,i\-push=ttcompat\fP
-
+i\-pop\-all,i\-push=ptem,i\-push=ldterm,i\-push=ttcompat
+enddit()
 .PP 
+startdit()enddit()
 .br 
 
 .PP 
@@ -2803,7 +2892,8 @@
 These options are intended for use with the pty address
 type\&.
 .PP 
-.IP "\fB\f(CWlink=<filename>\fP\fP"
+startdit()
+.IP "\fBlink=<filename>\fP"
 Generates a symbolic link that points to the actual pseudo terminal
 (pty)\&. This might help 
 to solve the problem that ptys are generated with more or less
@@ -2813,23 +2903,24 @@
 (example)\&.
 Beginning with \fBsocat\fP version 1\&.4\&.3, the symbolic link is removed when
 the address is closed (but see option unlink\-close)\&.
-.IP "\fB\f(CWwait\-slave\fP\fP"
+.IP "\fBwait\-slave\fP"
 Blocks the open phase until a process opens the slave side of the pty\&.
 Usually, socat continues after generating the pty with opening the next
 address or with entering the transfer loop\&. With the wait\-slave option,
 socat waits until some process opens the slave side of the pty before
 continuing\&. 
-This option only works if the operating system provides the \f(CWpoll()\fP
+This option only works if the operating system provides the poll()
 system call\&. And it depends on an undocumented behaviour of pty\(cq\&s, so it
 does not work on all operating systems\&. It has successfully been tested on
 Linux, FreeBSD, NetBSD, and on Tru64 with openpty\&. 
-.IP "\fB\f(CWpty\-interval=<seconds>\fP\fP"
+.IP "\fBpty\-interval=<seconds>\fP"
 When the wait\-slave option is set, socat
-periodically checks the HUP condition using \f(CWpoll()\fP to find if the pty\(cq\&s
+periodically checks the HUP condition using poll() to find if the pty\(cq\&s
 slave side has been opened\&. The default polling interval is 1s\&. Use the
 pty\-interval option [timeval] to change this value\&.
-
+enddit()
 .PP 
+startdit()enddit()
 .br 
 
 .PP 
@@ -2838,7 +2929,8 @@
 These options apply to the openssl and
 openssl\-listen address types\&.
 .PP 
-.IP "\fB\f(CWcipher=<cipherlist>\fP\fP"
+startdit()
+.IP "\fBcipher=<cipherlist>\fP"
 Selects the list of ciphers that may be used for the connection\&.
 See the man page of 
 \f(CWciphers\fP
@@ -2847,6 +2939,7 @@
 .br 
 Several cipher strings may be given, separated by \(cq\&:\(cq\&\&.
 Some simple cipher strings:
+startdit()
 .IP "3DES"
 Uses a cipher suite with triple DES\&.
 .IP "MD5"
@@ -2857,58 +2950,61 @@
 Does not use encryption\&.
 .IP "HIGH"
 Uses a cipher suite with \(dq\&high\(dq\& encryption\&.
+enddit()
 Note that the peer must support the selected property, or the negotiation
 will fail\&.
-.IP "\fB\f(CWmethod=<ssl\-method>\fP\fP"
+.IP "\fBmethod=<ssl\-method>\fP"
 This option is based on deprecated functions and is only available when
-\fBsocat\fP was build with option \f(CW\-\-with\-openssl\-method\fP\&.
+\fBsocat\fP was build with option \-\-with\-openssl\-method\&.
 Sets the protocol version to be used\&. Valid strings (not case sensitive)
 are:  
-.IP "\f(CWSSL2\fP"
+startdit()
+.IP "SSL2"
 Select SSL protocol version 2\&.
-.IP "\f(CWSSL3\fP"
+.IP "SSL3"
 Select SSL protocol version 3\&.
-.IP "\f(CWSSL23\fP"
+.IP "SSL23"
 Select the best available SSL or TLS protocol\&.
-.IP "\f(CWTLS1\fP"
+.IP "TLS1"
 Select TLS protocol version 1\&.
-.IP "\f(CWTLS1\&.1\fP"
+.IP "TLS1\&.1"
 Select TLS protocol version 1\&.1\&.
-.IP "\f(CWTLS1\&.2\fP"
+.IP "TLS1\&.2"
 Select TLS protocol version 1\&.2\&.
 When this option is not provided OpenSSL negotiates the mothod with its
 peer\&.
-.IP "\fB\f(CWverify=<bool>\fP\fP"
+enddit()
+.IP "\fBverify=<bool>\fP"
 Controls check of the peer\(cq\&s certificate\&. Default is 1 (true)\&. Disabling
 verify might open your socket for everyone, making the encryption useless!
-.IP "\fB\f(CWcert=<filename>\fP\fP"
+.IP "\fBcert=<filename>\fP"
 Specifies the file with the certificate and private key for authentication\&. 
 The certificate must be in OpenSSL format (*\&.pem)\&. 
 With openssl\-listen, use of this option is strongly
 recommended\&. Except with cipher aNULL, \(dq\&no shared ciphers\(dq\& error will
 occur when no certificate is given\&.
-.IP "\fB\f(CWkey=<filename>\fP\fP"
+.IP "\fBkey=<filename>\fP"
 Specifies the file with the private key\&. The private key may be in this
 file or in the file given with the cert option\&. The party that has
 to proof that it is the owner of a certificate needs the private key\&.
-.IP "\fB\f(CWdhparams=<filename>\fP\fP"
+.IP "\fBdhparams=<filename>\fP"
 Specifies the file with the Diffie Hellman parameters\&. These parameters may
 also be in the file given with the cert
 option in which case the dhparams option is not needed\&.
-.IP "\fB\f(CWcafile=<filename>\fP\fP"
+.IP "\fBcafile=<filename>\fP"
 Specifies the file with the trusted (root) authority certificates\&. The file
 must be in PEM format and should contain one or more certificates\&. The party
 that checks the authentication of its peer trusts only certificates that are
 in this file\&.
-.IP "\fB\f(CWcapath=<dirname>\fP\fP"
+.IP "\fBcapath=<dirname>\fP"
 Specifies the directory with the trusted (root) certificates\&. The directory
 must contain certificates in PEM format and their hashes (see OpenSSL
 documentation) 
-.IP "\fB\f(CWegd=<filename>\fP\fP"
+.IP "\fBegd=<filename>\fP"
 On some systems, openssl requires an explicit source of random data\&. Specify
 the socket name where an entropy gathering daemon like egd provides random
 data, e\&.g\&. /dev/egd\-pool\&.
-.IP "\fB\f(CWpseudo\fP\fP"
+.IP "\fBpseudo\fP"
 On systems where openssl cannot find an entropy source and where no entropy
 gathering daemon can be utilized, this option activates a mechanism for
 providing pseudo entropy\&. This is achieved by taking the current time in
@@ -2916,14 +3012,14 @@
 initial value\&. openssl is then feeded with output from random() calls\&.
 .br 
 NOTE:This mechanism is not sufficient for generation of secure keys!
-.IP "\fB\f(CWcompress\fP\fP"
+.IP "\fBcompress\fP"
 Enable or disable the use of compression for a connection\&. Setting this to
 \(dq\&none\(dq\& disables compression, setting it to \(dq\&auto\(dq\& lets OpenSSL choose the best
 available algorithm supported by both parties\&. The default is to not touch any
 compression\-related settings\&.
 NOTE: Requires OpenSSL 0\&.9\&.8 or higher and disabling compression with
 OpenSSL 0\&.9\&.8 affects all new connections in the process\&.
-.IP "\fB\f(CWcommonname=<string>\fP\fP"
+.IP "\fBcommonname=<string>\fP"
 Specify the commonname that the peer certificate must match\&. With
 OPENSSL\-CONNECT address this overrides the
 given hostname or IP target address; with
@@ -2931,14 +3027,15 @@
 certificates commonname\&. This option has only meaning when option
 verify is not disabled and the chosen cipher
 provides a peer certificate\&.
-.IP "\fB\f(CWfips\fP\fP"
+.IP "\fBfips\fP"
 Enables FIPS mode if compiled in\&. For info about the FIPS encryption
 implementation standard see http://oss\-institute\&.org/fips\-faq\&.html\&. 
 This mode might require that the involved certificates are generated with a
 FIPS enabled version of openssl\&. Setting or clearing this option on one
 socat address affects all OpenSSL addresses of this process\&.
-
+enddit()
 .PP 
+startdit()enddit()
 .br 
 
 .PP 
@@ -2947,16 +3044,18 @@
 Options that control retry of some system calls, especially connection
 attempts\&.
 .PP 
-.IP "\fB\f(CWretry=<num>\fP\fP"
+startdit()
+.IP "\fBretry=<num>\fP"
 Number of retries before the connection or listen attempt is aborted\&. 
 Default is 0, which means just one attempt\&. 
-.IP "\fB\f(CWinterval=<timespec>\fP\fP"
+.IP "\fBinterval=<timespec>\fP"
 Time between consecutive attempts (seconds, 
 [timespec])\&. Default is 1 second\&.
-.IP "\fB\f(CWforever\fP\fP"
+.IP "\fBforever\fP"
 Performs an unlimited number of retry attempts\&.
-
+enddit()
 .PP 
+startdit()enddit()
 .br 
 
 .PP 
@@ -2964,56 +3063,58 @@
 .PP 
 Options that control Linux TUN/TAP interface device addresses\&.
 .PP 
-.IP "\fB\f(CWtun\-device=<device\-file>\fP\fP"
+startdit()
+.IP "\fBtun\-device=<device\-file>\fP"
 Instructs socat to take another path for the TUN clone device\&. Default is
-\f(CW/dev/net/tun\fP\&.
-.IP "\fB\f(CWtun\-name=<if\-name>\fP\fP"
+/dev/net/tun\&.
+.IP "\fBtun\-name=<if\-name>\fP"
 Gives the resulting network interface a specific name instead of the system
 generated (tun0, tun1, etc\&.)
-.IP "\fB\f(CWtun\-type=[tun|tap]\fP\fP"
+.IP "\fBtun\-type=[tun|tap]\fP"
 Sets the type of the TUN device; use this option to generate a TAP
 device\&. See the Linux docu for the difference between these types\&.
 When you try to establish a tunnel between two TUN devices, their types
 should be the same\&.
-.IP "\fB\f(CWiff\-no\-pi\fP\fP"
+.IP "\fBiff\-no\-pi\fP"
 Sets the IFF_NO_PI flag which controls if the device includes additional
 packet information in the tunnel\&.
 When you try to establish a tunnel between two TUN devices, these flags
 should have the same values\&.
-.IP "\fB\f(CWiff\-up\fP\fP"
+.IP "\fBiff\-up\fP"
 Sets the TUN network interface status UP\&. Strongly recommended\&.
-.IP "\fB\f(CWiff\-broadcast\fP\fP"
+.IP "\fBiff\-broadcast\fP"
 Sets the BROADCAST flag of the TUN network interface\&.
-.IP "\fB\f(CWiff\-debug\fP\fP"
+.IP "\fBiff\-debug\fP"
 Sets the DEBUG flag of the TUN network interface\&.
-.IP "\fB\f(CWiff\-loopback\fP\fP"
+.IP "\fBiff\-loopback\fP"
 Sets the LOOPBACK flag of the TUN network interface\&.
-.IP "\fB\f(CWiff\-pointopoint\fP\fP"
+.IP "\fBiff\-pointopoint\fP"
 Sets the POINTOPOINT flag of the TUN device\&.
-.IP "\fB\f(CWiff\-notrailers\fP\fP"
+.IP "\fBiff\-notrailers\fP"
 Sets the NOTRAILERS flag of the TUN device\&.
-.IP "\fB\f(CWiff\-running\fP\fP"
+.IP "\fBiff\-running\fP"
 Sets the RUNNING flag of the TUN device\&.
-.IP "\fB\f(CWiff\-noarp\fP\fP"
+.IP "\fBiff\-noarp\fP"
 Sets the NOARP flag of the TUN device\&.
-.IP "\fB\f(CWiff\-promisc\fP\fP"
+.IP "\fBiff\-promisc\fP"
 Sets the PROMISC flag of the TUN device\&.
-.IP "\fB\f(CWiff\-allmulti\fP\fP"
+.IP "\fBiff\-allmulti\fP"
 Sets the ALLMULTI flag of the TUN device\&.
-.IP "\fB\f(CWiff\-master\fP\fP"
+.IP "\fBiff\-master\fP"
 Sets the MASTER flag of the TUN device\&.
-.IP "\fB\f(CWiff\-slave\fP\fP"
+.IP "\fBiff\-slave\fP"
 Sets the SLAVE flag of the TUN device\&.
-.IP "\fB\f(CWiff\-multicast\fP\fP"
+.IP "\fBiff\-multicast\fP"
 Sets the MULTICAST flag of the TUN device\&.
-.IP "\fB\f(CWiff\-portsel\fP\fP"
+.IP "\fBiff\-portsel\fP"
 Sets the PORTSEL flag of the TUN device\&.
-.IP "\fB\f(CWiff\-automedia\fP\fP"
+.IP "\fBiff\-automedia\fP"
 Sets the AUTOMEDIA flag of the TUN device\&.
-.IP "\fB\f(CWiff\-dynamic\fP\fP"
+.IP "\fBiff\-dynamic\fP"
 Sets the DYNAMIC flag of the TUN device\&.
-
+enddit()
 .PP 
+startdit()enddit()
 .br 
 
 .PP 
@@ -3023,6 +3124,7 @@
 This section explains the different data types that address parameters and
 address options can take\&.
 .PP 
+startdit()
 .IP "address\-range"
 Is currently only implemented for IPv4 and IPv6\&. See address\-option
 `range\(cq\& 
@@ -3153,49 +3255,63 @@
 \f(CWstrtoul()\fP
 as unsigned integer specifying a user id\&. Otherwise, it must
 be an existing user name\&.
-
+.IP "VSOCK cid"
+A uint32_t (32 bit unsigned number) specifying a VSOCK Context Identifier
+(CID), read with 
+\f(CWstrtoul()\fP
+\&.
+There are several special addresses: VMADDR_CID_ANY (\-1U) means any address
+for binding; VMADDR_CID_HOST (2) is the well\-known address of the host\&.
+.IP "VSOCK port"
+A uint32_t (32 bit unsigned number) specifying a VSOCK port, read
+with 
+\f(CWstrtoul()\fP
+\&.
+enddit()
 .PP 
 .SH "EXAMPLES"
 
 .PP 
-.IP "\fB\f(CWsocat \- TCP4:www\&.domain\&.org:80\fP\fP"
+startdit()
+.PP 
+.IP "\fBsocat \- TCP4:www\&.domain\&.org:80\fP"
 
-.IP 
+.PP 
 transfers data between STDIO (\-) and a
 TCP4 connection to port 80 of host 
 www\&.domain\&.org\&. This example results in an interactive connection similar to
 telnet or netcat\&. The stdin terminal parameters are not changed, so you may
 close the relay with ^D or abort it with ^C\&.
-.IP 
+.PP 
 \.LP
 \.nf
 \fBsocat -d -d READLINE,history=$HOME/.http_history \\ 
 TCP4:www.domain.org:www,crnl\fP
 \.fi
-.IP 
+.PP 
 this is similar to the previous example, but you can edit the current line in a
 bash like manner (READLINE) and use the
 history file \&.http_history; \fBsocat\fP prints messages about
 progress (\-d \-d)\&. The  port is specified by service name
 (www), and correct network line termination characters
 (crnl) instead of NL are used\&.
-.IP 
-.IP "\fB\f(CWsocat TCP4\-LISTEN:www TCP4:www\&.domain\&.org:www\fP\fP"
+.PP 
+.IP "\fBsocat TCP4\-LISTEN:www TCP4:www\&.domain\&.org:www\fP"
 
-.IP 
+.PP 
 installs a simple TCP port forwarder\&. With
 TCP4\-LISTEN it listens on local port \(dq\&www\(dq\& until a
 connection comes in, accepts it, then connects to the remote host
 (TCP4) and starts data transfer\&. It will not accept
 a second connection\&. 
-.IP 
+.PP 
 \.LP
 \.nf
 \fBsocat -d -d -lmlocal2 \\ 
 TCP4-LISTEN:80,bind=myaddr1,reuseaddr,fork,su=nobody,range=10.0.0.0/8 \\ 
 TCP4:www.domain.org:80,bind=myaddr2\fP
 \.fi
-.IP 
+.PP 
 TCP port forwarder, each side bound to another local IP address
 (bind)\&. This example handles an almost
 arbitrary number of parallel or consecutive connections by
@@ -3211,13 +3327,13 @@
 With \-lmlocal2, socat logs to stderr until successfully
 reaching the accept loop\&. Further logging is directed to syslog with facility
 local2\&.
-.IP 
+.PP 
 \.LP
 \.nf
 \fBsocat TCP4-LISTEN:5555,fork,tcpwrap=script \\ 
 EXEC:/bin/myscript,chroot=/home/sandbox,su-d=sandbox,pty,stderr\fP
 \.fi
-.IP 
+.PP 
 a simple server that accepts connections
 (TCP4\-LISTEN) and fork\(cq\&s a new
 child process for each connection; every child acts as single relay\&. 
@@ -3231,13 +3347,13 @@
 myscript communicate via a pseudo tty (pty); myscript\(cq\&s
 stderr is redirected to stdout,
 so its error messages are transferred via \fBsocat\fP to the connected client\&. 
-.IP 
+.PP 
 \.LP
 \.nf
 \fBsocat EXEC:"mail.sh target@domain.com",fdin=3,fdout=4 \\ 
 TCP4:mail.relay.org:25,crnl,bind=alias1.server.org,mss=512\fP
 \.fi
-.IP 
+.PP 
 \fBmail\&.sh\fP is a shell script, distributed with \fBsocat\fP, that implements a
 simple 
 SMTP client\&. It is programmed to \(dq\&speak\(dq\& SMTP on its FDs 3 (in) and 4 (out)\&.
@@ -3249,23 +3365,23 @@
 (bind), cares for correct network line termination
 (crnl) and sends  
 at most 512 data bytes per packet (mss)\&. 
-.IP 
-.IP "\fB\f(CWsocat \-,escape=0x0f /dev/ttyS0,rawer,crnl\fP\fP"
+.PP 
+.IP "\fBsocat \-,escape=0x0f /dev/ttyS0,rawer,crnl\fP"
 
-.IP 
+.PP 
 opens an interactive connection via the serial line, e\&.g\&. for talking with a
 modem\&. rawer sets the console\(cq\&s and
 ttyS0\(cq\&s terminal parameters to practicable values, crnl 
 converts to correct newline characters\&. escape allows
 terminating the socat process with character control\-O\&. 
 Consider using READLINE instead of the first address\&.
-.IP 
+.PP 
 \.LP
 \.nf
 \fBsocat UNIX-LISTEN:/tmp/.X11-unix/X1,fork \\ 
 SOCKS4:host.victim.org:127.0.0.1:6000,socksuser=nobody,sourceport=20\fP
 \.fi
-.IP 
+.PP 
 with UNIX\-LISTEN, \fBsocat\fP opens a listening
 UNIX domain socket \fB/tmp/\&.X11\-unix/X1\fP\&. This path corresponds 
 to local XWindow display :1 on your machine, so XWindow client connections to
@@ -3280,10 +3396,10 @@
 cookies or Kerberos authentication, we can start work\&. Please note that there
 can only be one connection at a time, because TCP can establish only one
 session with a given set of addresses and ports\&.
-.IP 
-.IP "\fB\f(CWsocat \-u /tmp/readdata,seek\-end=0,ignoreeof \-\fP\fP"
+.PP 
+.IP "\fBsocat \-u /tmp/readdata,seek\-end=0,ignoreeof \-\fP"
 
-.IP 
+.PP 
 this is an example for unidirectional data transfer
 (\-u)\&. \fBSocat\fP transfers data 
 from file /tmp/readdata (implicit address GOPEN), starting
@@ -3292,47 +3408,47 @@
 seek option to first read the existing data) in a \(dq\&tail \-f\(dq\& like mode
 (ignoreeof)\&. The \(dq\&file\(dq\& 
 might also be a listening UNIX domain socket (do not use a seek option then)\&. 
-.IP 
+.PP 
 \.LP
 \.nf
 \fB(sleep 5; echo PASSWORD; sleep 5; echo ls; sleep 1) | 
 socat - EXEC:'ssh -l user server',pty,setsid,ctty\fP
 \.fi
-.IP 
+.PP 
 EXEC\(cq\&utes an ssh session to server\&. Uses a pty for communication between \fBsocat\fP and
 ssh, makes it ssh\(cq\&s controlling tty (ctty), 
 and makes this pty the owner of
 a new process group (setsid), so ssh accepts the password from \fBsocat\fP\&.
-.IP 
+.PP 
 \.LP
 \.nf
 \fBsocat -u TCP4-LISTEN:3334,reuseaddr,fork \\ 
 OPEN:/tmp/in.log,creat,append\fP
 \.fi
-.IP 
+.PP 
 implements a simple network based message collector\&. 
 For each client connecting to port 3334, a new child process is generated (option fork)\&.
 All data sent by the clients are append\(cq\&ed to the file /tmp/in\&.log\&.
 If the file does not exist, socat creat\(cq\&s it\&. 
 Option reuseaddr allows immediate restart of the server
 process\&. 
-.IP 
-.IP "\fB\f(CWsocat READLINE,noecho=\(cq\&[Pp]assword:\(cq\& EXEC:\(cq\&ftp ftp\&.server\&.com\(cq\&,pty,setsid,ctty\fP\fP"
+.PP 
+.IP "\fBsocat READLINE,noecho=\(cq\&[Pp]assword:\(cq\& EXEC:\(cq\&ftp ftp\&.server\&.com\(cq\&,pty,setsid,ctty\fP"
 
-.IP 
+.PP 
 wraps a command line history (READLINE) around the EXEC\(cq\&uted ftp client utility\&.
 This allows editing and reuse of FTP commands for relatively comfortable
 browsing through the ftp directory hierarchy\&. The password is echoed!
 pty is required to have ftp issue a prompt\&.
 Nevertheless, there may occur some confusion with the password and FTP
 prompts\&.
-.IP 
+.PP 
 \.LP
 \.nf
 \fBsocat PTY,link=$HOME/dev/vmodem0,rawer,wait-slave \\\bf
 \fBEXEC:"ssh modemserver.us.org socat - /dev/ttyS0,nonblock,rawer"\fP
 \.fi
-.IP 
+.PP 
 generates a pseudo terminal 
 device (PTY) on the client that can be reached under the
 symbolic link \fB$HOME/dev/vmodem0\fP\&. 
@@ -3340,22 +3456,22 @@
 can be configured to use \fB$HOME/dev/vmodem0\fP; its traffic will be directed
 to a modemserver via ssh where another socat instance links it to
 \fB/dev/ttyS0\fP\&.
-.IP 
+.PP 
 \.LP
 \.nf
 \fBsocat TCP4-LISTEN:2022,reuseaddr,fork \\ 
 PROXY:proxy:www.domain.org:22,proxyport=3128,proxyauth=user:pass\fP
 \.fi
-.IP 
+.PP 
 starts a forwarder that accepts connections on port 2022, and directs them 
 through the proxy daemon listening on port 3128
 (proxyport) on host proxy, using the
 CONNECT method, where they are authenticated as \(dq\&user\(dq\& with \(dq\&pass\(dq\& (proxyauth)\&. The proxy 
 should establish connections to host www\&.domain\&.org on port 22 then\&.
-.IP 
-.IP "\fB\f(CWsocat \- SSL:server:4443,cafile=server\&.crt,cert=client\&.pem\fP\fP"
+.PP 
+.IP "\fBsocat \- SSL:server:4443,cafile=server\&.crt,cert=client\&.pem\fP"
 
-.IP 
+.PP 
 is an OpenSSL client that tries to establish a secure connection to an SSL
 server\&. Option cafile specifies a file that
 contains trust certificates: we trust the server only when it presents one of
@@ -3366,10 +3482,10 @@
 server wishes a client authentication; many Internet servers do not\&.
 .br 
 The first address (\(cq\&\-\(cq\&) can be replaced by almost any other socat address\&.
-.IP 
-.IP "\fB\f(CWsocat OPENSSL\-LISTEN:4443,reuseaddr,pf=ip4,fork,cert=server\&.pem,cafile=client\&.crt PIPE\fP\fP"
+.PP 
+.IP "\fBsocat OPENSSL\-LISTEN:4443,reuseaddr,pf=ip4,fork,cert=server\&.pem,cafile=client\&.crt PIPE\fP"
 
-.IP 
+.PP 
 is an OpenSSL server that accepts TCP connections, presents the certificate
 from the file server\&.pem and forces the client to present a certificate that is
 verified against cafile\&.crt\&.
@@ -3378,70 +3494,70 @@
 address\&.
 .br 
 For instructions on generating and distributing OpenSSL keys and certificates
-see the additional socat docu \f(CWsocat\-openssl\&.txt\fP\&.
-.IP 
-.IP "\fB\f(CWecho |socat \-u \- file:/tmp/bigfile,create,largefile,seek=100000000000\fP\fP"
+see the additional socat docu socat\-openssl\&.txt\&.
+.PP 
+.IP "\fBecho |socat \-u \- file:/tmp/bigfile,create,largefile,seek=100000000000\fP"
 
-.IP 
+.PP 
 creates a 100GB sparse file; this requires a file system type that
 supports this (ext2, ext3, reiserfs, jfs; not minix, vfat)\&. The operation of
 writing 1 byte might take long (reiserfs: some minutes; ext2: \(dq\&no\(dq\& time), and
 the resulting file can consume some disk space with just its inodes (reiserfs:
 2MB; ext2: 16KB)\&. 
-.IP 
-.IP "\fB\f(CWsocat tcp\-l:7777,reuseaddr,fork system:\(cq\&filan \-i 0 \-s >&2\(cq\&,nofork\fP\fP"
+.PP 
+.IP "\fBsocat tcp\-l:7777,reuseaddr,fork system:\(cq\&filan \-i 0 \-s >&2\(cq\&,nofork\fP"
 
-.IP 
+.PP 
 listens for incoming TCP connections on port 7777\&. For each accepted
 connection, invokes a shell\&. This shell has its stdin and stdout directly
 connected to the TCP socket (nofork)\&.  The shell starts filan and lets it print the socket addresses to
 stderr (your terminal window)\&.
-.IP 
-.IP "\fB\f(CWecho \-e \(dq\&\e0\e14\e0\e0\ec\(dq\& |socat \-u \- file:/usr/bin/squid\&.exe,seek=0x00074420\fP\fP"
+.PP 
+.IP "\fBecho \-e \(dq\&\e0\e14\e0\e0\ec\(dq\& |socat \-u \- file:/usr/bin/squid\&.exe,seek=0x00074420\fP"
 
-.IP 
+.PP 
 functions as primitive binary editor: it writes the 4 bytes 000 014 000 000 to
 the executable /usr/bin/squid at offset 0x00074420 (this is a real world patch
 to make the squid executable from Cygwin run under Windows, actual per May 2004)\&.
-.IP 
-.IP "\fB\f(CWsocat \- tcp:www\&.blackhat\&.org:31337,readbytes=1000\fP\fP"
+.PP 
+.IP "\fBsocat \- tcp:www\&.blackhat\&.org:31337,readbytes=1000\fP"
 
-.IP 
+.PP 
 connects to an unknown service and prevents being flooded\&.
-.IP 
-.IP "\fB\f(CWsocat \-U TCP:target:9999,end\-close TCP\-L:8888,reuseaddr,fork\fP\fP"
+.PP 
+.IP "\fBsocat \-U TCP:target:9999,end\-close TCP\-L:8888,reuseaddr,fork\fP"
 
-.IP 
+.PP 
 merges data arriving from different TCP streams on port 8888 to just one stream
 to target:9999\&. The end\-close option prevents the child
 processes forked off by the second address from terminating the shared
 connection to 9999 (close(2) just unlinks the inode which stays active as long
 as the parent process lives; shutdown(2) would actively terminate the
 connection)\&.
-.IP 
-.IP "\fB\f(CWsocat \- UDP4\-DATAGRAM:192\&.168\&.1\&.0:123,sp=123,broadcast,range=192\&.168\&.1\&.0/24\fP\fP"
+.PP 
+.IP "\fBsocat \- UDP4\-DATAGRAM:192\&.168\&.1\&.0:123,sp=123,broadcast,range=192\&.168\&.1\&.0/24\fP"
 
-.IP 
+.PP 
 sends a broadcast to the network 192\&.168\&.1\&.0/24 and receives the replies of the
 timeservers there\&. Ignores NTP packets from hosts outside this network\&.
-.IP 
-.IP "\fB\f(CWsocat \- SOCKET\-DATAGRAM:2:2:17:x007bxc0a80100x0000000000000000,bind=x007bx00000000x0000000000000000,setsockopt\-int=1:6:1,range=x0000xc0a80100x0000000000000000:x0000xffffff00x0000000000000000\fP\fP"
+.PP 
+.IP "\fBsocat \- SOCKET\-DATAGRAM:2:2:17:x007bxc0a80100x0000000000000000,bind=x007bx00000000x0000000000000000,setsockopt\-int=1:6:1,range=x0000xc0a80100x0000000000000000:x0000xffffff00x0000000000000000\fP"
 
-.IP 
+.PP 
 is semantically equivalent to the previous
 example, but all parameters are
 specified in generic form\&. the value 6 of setsockopt\-int is the Linux value for
-\f(CWSO_BROADCAST\fP\&.
-.IP 
-.IP "\fB\f(CWsocat \- IP4\-DATAGRAM:255\&.255\&.255\&.255:44,broadcast,range=10\&.0\&.0\&.0/8\fP\fP"
+SO_BROADCAST\&.
+.PP 
+.IP "\fBsocat \- IP4\-DATAGRAM:255\&.255\&.255\&.255:44,broadcast,range=10\&.0\&.0\&.0/8\fP"
 
-.IP 
+.PP 
 sends a broadcast to the local network(s) using protocol 44\&. Accepts replies
 from the private address range only\&.
-.IP 
-.IP "\fB\f(CWsocat \- UDP4\-DATAGRAM:224\&.255\&.0\&.1:6666,bind=:6666,ip\-add\-membership=224\&.255\&.0\&.1:eth0\fP\fP"
+.PP 
+.IP "\fBsocat \- UDP4\-DATAGRAM:224\&.255\&.0\&.1:6666,bind=:6666,ip\-add\-membership=224\&.255\&.0\&.1:eth0\fP"
 
-.IP 
+.PP 
 transfers data from stdin to the specified multicast address using UDP\&. Both
 local and remote ports are 6666\&. Tells the interface eth0 to also accept
 multicast packets of the given group\&. Multiple hosts on the local network can
@@ -3449,45 +3565,85 @@
 by all the other ones\&. Note that there are many possible reasons for failure,
 including IP\-filters, routing issues, wrong interface selection by the
 operating system, bridges, or a badly configured switch\&.
-.IP 
-.IP "\fB\f(CWsocat TCP:host2:4443 TUN:192\&.168\&.255\&.1/24,up\fP\fP"
+.PP 
+.IP "\fBsocat TCP:host2:4443 TUN:192\&.168\&.255\&.1/24,up\fP"
 
-.IP 
+.PP 
 establishes one side of a virtual (but not private!) network with host2 where a
 similar process might run, with UDP\-L and tun address 192\&.168\&.255\&.2\&. They can
 reach each other using the addresses 192\&.168\&.255\&.1 and 192\&.168\&.255\&.2\&. Note that
 streaming eg\&. via TCP or SSL does not guarantee to retain packet boundaries and
 may thus cause packet loss\&.
-.IP 
-.IP "\fB\f(CWsocat PTY,link=/var/run/ppp,rawer INTERFACE:hdlc0\fP\fP"
+.PP 
+.IP "\fBsocat \- VSOCK\-CONNECT:2:1234\fP"
+
+.PP 
+establishes a VSOCK connection with the host (host is always reachable with
+the well\-know CID=2) on 1234 port\&.
+.PP 
+.IP "\fBsocat \- VSOCK\-LISTEN:1234\fP"
+
+.PP 
+listens for a VSOCK connection on 1234 port\&.
+.PP 
+.IP "\fBsocat \- VSOCK\-CONNECT:31:4321,bind:5555\fP"
+
+.PP 
+establishes a VSOCK connection with the guest that have CID=31 on 1234 port,
+binding the local socket to the 5555 port\&.
+.PP 
+.IP "\fBsocat VSOCK\-LISTEN:3333,reuseaddr,fork VSOCK\-CONNECT:42,3333\fP"
 
-.IP 
+.PP 
+starts a forwarder that accepts VSOCK connections on port 3333, and directs
+them to the guest with CID=42 on the same port\&.
+.PP 
+.IP "\fBsocat VSOCK\-LISTEN:22,reuseaddr,fork TCP:localhost:22\fP"
+
+.PP 
+forwards VSOCK connections from 22 port to the local SSH server\&.
+Running this in a VM allows you to connect via SSH from the host using VSOCK,
+as in the example below\&.
+.PP 
+.IP "\fBsocat TCP4\-LISTEN:22222,reuseaddr,fork VSOCK\-CONNECT:33:22\fP"
+
+.PP 
+forwards TCP connections from 22222 port to the guest with CID=33 listening on
+VSOCK port 22\&.
+Running this in the host, allows you to connect via SSH running
+\(dq\&ssh \-p 22222 user@localhost\(dq\&, if the guest runs the example above\&.
+.PP 
+.IP "\fBsocat PTY,link=/var/run/ppp,rawer INTERFACE:hdlc0\fP"
+
+.PP 
 circumvents the problem that pppd requires a serial device and thus might not
 be able to work on a synchronous line that is represented by a network device\&.
 socat creates a PTY to make pppd happy, binds to the network
-interface \f(CWhdlc0\fP, and can transfer data between
-both devices\&. Use pppd on device \f(CW/var/run/ppp\fP then\&.
-.IP 
-.IP "\fB\f(CWsocat \-T 1 \-d \-d TCP\-L:10081,reuseaddr,fork,crlf SYSTEM:\(dq\&echo \-e \e\(dq\&\e\e\e\(dq\&HTTP/1\&.0 200 OK\e\e\enDocumentType: text/plain\e\e\en\e\e\endate: \e$\e(date\e)\e\e\enserver:\e$SOCAT_SOCKADDR:\e$SOCAT_SOCKPORT\e\e\enclient: \e$SOCAT_PEERADDR:\e$SOCAT_PEERPORT\e\e\en\e\e\e\(dq\&\e\(dq\&; cat; echo \-e \e\(dq\&\e\e\e\(dq\&\e\e\en\e\e\e\(dq\&\e\(dq\&\(dq\&\fP\fP"
+interface hdlc0, and can transfer data between
+both devices\&. Use pppd on device /var/run/ppp then\&.
+.PP 
+.IP "\fBsocat \-T 1 \-d \-d TCP\-L:10081,reuseaddr,fork,crlf SYSTEM:\(dq\&echo \-e \e\(dq\&\e\e\e\(dq\&HTTP/1\&.0 200 OK\e\e\enDocumentType: text/plain\e\e\en\e\e\endate: \e$\e(date\e)\e\e\enserver:\e$SOCAT_SOCKADDR:\e$SOCAT_SOCKPORT\e\e\enclient: \e$SOCAT_PEERADDR:\e$SOCAT_PEERPORT\e\e\en\e\e\e\(dq\&\e\(dq\&; cat; echo \-e \e\(dq\&\e\e\e\(dq\&\e\e\en\e\e\e\(dq\&\e\(dq\&\(dq\&\fP"
 
-.IP 
+.PP 
 creates a simple HTTP echo server: each HTTP client that connects gets a valid
 HTTP reply that contains information about the client address and port as it is
 seen by the server host, the host address (which might vary on multihomed
 servers), and the original client request\&.
-.IP 
-.IP "\fB\f(CWsocat \-d \-d UDP4\-RECVFROM:9999,so\-broadcast,so\-timestamp,ip\-pktinfo,ip\-recverr,ip\-recvopts,ip\-recvtos,ip\-recvttl!!\- SYSTEM:\(cq\&export; sleep 1\(cq\& |grep SOCAT\fP\fP"
+.PP 
+.IP "\fBsocat \-d \-d UDP4\-RECVFROM:9999,so\-broadcast,so\-timestamp,ip\-pktinfo,ip\-recverr,ip\-recvopts,ip\-recvtos,ip\-recvttl!!\- SYSTEM:\(cq\&export; sleep 1\(cq\& |grep SOCAT\fP"
 
-.IP 
+.PP 
 waits for an incoming UDP packet on port 9999 and prints the environment 
 variables provided by socat\&. On BSD based systems you have to replace
-\f(CWip\-pktinfo\fP with \f(CWip\-recvdstaddr\fP,\f(CWip\-recvif\fP\&. Especially interesting is
+ip\-pktinfo with ip\-recvdstaddr,ip\-recvif\&. Especially interesting is
 SOCAT_IP_DSTADDR: it contains the target address of the packet which may be a
 unicast, multicast, or broadcast address\&.
-.IP 
-.IP "\fB\f(CW\fP\fP"
+.PP 
+.IP "\fB\fP"
 
-.IP 
+.PP 
+enddit()
+.PP 
 .SH "DIAGNOSTICS"
 
 .PP 
@@ -3540,12 +3696,13 @@
 by the upper case name of the executable or the value of option
 \-lp\&.
 .PP 
+startdit()
 .IP "\fBSOCAT_DEFAULT_LISTEN_IP\fP (input)"
 (Values 4 or 6) Sets the IP version to
 be used for listen, recv, and recvfrom addresses if no
 pf (protocol\-family) option is given\&. Is
 overridden by socat options \-4 or \-6\&.
-.IP 
+.PP 
 .IP "\fBSOCAT_PREFERRED_RESOLVE_IP\fP (input)"
 (Values 0, 4, or 6) Sets the IP
 version to 
@@ -3554,149 +3711,151 @@
 address format\&. If name resolution does not return a matching entry, the first
 result (with differing IP version) is taken\&. With value 0, socat always selects
 the first record and its IP version\&. 
-.IP 
+.PP 
 .IP "\fBSOCAT_FORK_WAIT\fP (input)"
 Specifies the time (seconds) to sleep the
 parent and child processes after successful fork()\&. Useful for debugging\&.
-.IP 
+.PP 
 .IP "\fBSOCAT_VERSION\fP (output)"
 Socat sets this variable to its version string,
-e\&.g\&. \f(CW\(dq\&1\&.7\&.0\&.0\(dq\&\fP for released versions or e\&.g\&. \f(CW\(dq\&1\&.6\&.0\&.1+envvar\(dq\&\fP for
+e\&.g\&. \(dq\&1\&.7\&.0\&.0\(dq\& for released versions or e\&.g\&. \(dq\&1\&.6\&.0\&.1+envvar\(dq\& for
 temporary versions; can be used in scripts invoked by socat\&. 
-.IP 
+.PP 
 .IP "\fBSOCAT_PID\fP (output)"
 Socat sets this variable to its process id\&. In case
 of fork address option, SOCAT_PID gets the child processes
 id\&. Forking for exec and system does
 not change SOCAT_PID\&.
-.IP 
+.PP 
 .IP "\fBSOCAT_PPID\fP (output)"
 Socat sets this variable to its process id\&. In
 case of fork, SOCAT_PPID keeps the pid of the master process\&.
-.IP 
+.PP 
 .IP "\fBSOCAT_PEERADDR\fP (output)"
 With passive socket addresses (all LISTEN and
 RECVFROM addresses), this variable is set to a string describing the peers
 socket address\&. Port information is not included\&.
-.IP 
+.PP 
 .IP "\fBSOCAT_PEERPORT\fP (output)"
 With appropriate passive socket addresses
 (TCP, UDP, and SCTP \- LISTEN and RECVFROM), this variable is set to a string containing the
 number of the peer port\&.
-.IP 
+.PP 
 .IP "\fBSOCAT_SOCKADDR\fP (output)"
 With all LISTEN addresses, this variable is
 set to a string describing the local socket address\&. Port information is not
 included example
-.IP 
+.PP 
 .IP "\fBSOCAT_SOCKPORT\fP (output)"
 With TCP\-LISTEN,
 UDP\-LISTEN, and
 SCTP\-LISTEN addresses, this variable is set to the
 local port\&.
-.IP 
+.PP 
 .IP "\fBSOCAT_TIMESTAMP\fP (output)"
 With all RECVFROM addresses where address
 option so\-timestamp is applied, socat sets this
 variable to the resulting timestamp\&.
-.IP 
+.PP 
 .IP "\fBSOCAT_IP_OPTIONS\fP (output)"
 With all IPv4 based RECVFROM addresses where 
 address option ip\-recvopts is applied, socat fills
 this variable with the IP options of the received packet\&.
-.IP 
+.PP 
 .IP "\fBSOCAT_IP_DSTADDR\fP (output)"
 With all IPv4 based RECVFROM addresses where
 address option ip\-recvdstaddr (BSD) or
 ip\-pktinfo (other platforms) is applied, socat sets
 this variable to the destination address of the received packet\&. This is
 particularly useful to identify broadcast and multicast addressed packets\&.
-.IP 
+.PP 
 .IP "\fBSOCAT_IP_IF\fP (output)"
 With all IPv4 based RECVFROM addresses where
 address option ip\-recvif (BSD) or
 ip\-pktinfo (other platforms) is applied, socat sets 
 this variable to the name of the interface where the packet was received\&.
-.IP 
+.PP 
 .IP "\fBSOCAT_IP_LOCADDR\fP (output)"
 With all IPv4 based RECVFROM
 addresses where address option ip\-pktinfo is applied,
 socat sets this variable to the address of the interface where the packet was
 received\&.
-.IP 
+.PP 
 .IP "\fBSOCAT_IP_TOS\fP (output)"
 With all IPv4 based RECVFROM addresses where
 address option ip\-recvtos is applied, socat sets this
 variable to the TOS (type of service) of the received packet\&.
-.IP 
+.PP 
 .IP "\fBSOCAT_IP_TTL\fP (output)"
 With all IPv4 based RECVFROM addresses where
 address option ip\-recvttl is applied, socat sets this
 variable to the TTL (time to live) of the received packet\&.
-.IP 
+.PP 
 .IP "\fBSOCAT_IPV6_HOPLIMIT\fP (output)"
 With all IPv6 based RECVFROM addresses
 where address option ipv6\-recvhoplimit is
 applied, socat sets this variable to the hoplimit value of the received packet\&.
-.IP 
+.PP 
 .IP "\fBSOCAT_IPV6_DSTADDR\fP (output)"
 With all IPv6 based RECVFROM
 addresses where address option ipv6\-recvpktinfo
 is applied, socat sets this variable to the destination address of the received
 packet\&.
-.IP 
+.PP 
 .IP "\fBSOCAT_IPV6_TCLASS\fP (output)"
 With all IPv6 based RECVFROM addresses
 where address option ipv6\-recvtclass is applied,
 \fBsocat\fP sets this variable to the transfer class of the received packet\&.
-.IP 
+.PP 
 .IP "\fBSOCAT_OPENSSL_X509_ISSUER\fP (output)"
 Issuer field from peer certificate
-.IP 
+.PP 
 .IP "\fBSOCAT_OPENSSL_X509_SUBJECT\fP (output)"
 Subject field from peer certificate
-.IP 
+.PP 
 .IP "\fBSOCAT_OPENSSL_X509_COMMONNAME\fP (output)"
 commonName entries from peer certificates subject\&. Multiple values are separated by \(dq\& // \(dq\&\&.
-.IP 
+.PP 
 .IP "\fBSOCAT_OPENSSL_X509_*\fP (output)"
 all other entries from peer certificates subject
-.IP 
+.PP 
 .IP "\fBSOCAT_OPENSSL_X509V3_DNS\fP (output)"
 DNS entries from peer certificates extensions \- subjectAltName field\&. Multiple values are separated by \(dq\& // \(dq\&\&.
-.IP 
+.PP 
 .IP "\fBHOSTNAME\fP (input)"
 Is used to determine the hostname for logging (see
 \-lh)\&.
-.IP 
+.PP 
 .IP "\fBLOGNAME\fP (input)"
 Is used as name for the socks client user name if no
 socksuser is given\&.
 .br 
 With options su and
 su\-d, LOGNAME is set to the given user name\&.
-.IP 
+.PP 
 .IP "\fBUSER\fP (input)"
 Is used as name for the socks client user name if no
 socksuser is given and LOGNAME is empty\&.
 .br 
 With options su and
 su\-d, USER is set to the given user name\&.
-.IP 
+.PP 
 .IP "\fBSHELL\fP (output)"
 With options su and
 su\-d, SHELL is set to the login shell of the
 given user\&.
-.IP 
+.PP 
 .IP "\fBPATH\fP (output)"
 Can be set with option path for exec and
 system addresses\&.
-.IP 
+.PP 
 .IP "\fBHOME\fP (output)"
 With options su and
 su\-d, HOME is set to the home directory of the
 given user\&.
-.IP 
+.PP 
+enddit()
+.PP 
 .SH "CREDITS"
 
 .PP 
diff -ur socat-1.7.3.4/doc/socat.html /tmp/socat-vsock/doc/socat.html
--- socat-1.7.3.4/doc/socat.html	2019-04-05 22:19:23.000000000 +0200
+++ /tmp/socat-vsock/doc/socat.html	2020-11-08 16:21:54.910305576 +0100
@@ -1,204 +1,217 @@
-<html><head>
-<title>socat</title>
+<!DOCTYPE html><html><head>
+<meta charset="UTF-8">
+<title><strong >socat</strong></title>
+<style type="text/css">
+    figure {text-align: center;}
+    img {vertical-align: center;}
+    .XXfc {margin-left:auto;margin-right:auto;}
+    .XXtc {text-align: center;}
+    .XXtl {text-align: left;}
+    .XXtr {text-align: right;}
+    .XXvt {vertical-align: top;}
+    .XXvb {vertical-align: bottom;}
+</style>
 <link rev="made" href="mailto:socat@dest-unreach.org">
 </head>
 <body>
-<hr>
-<h1><strong>socat</strong></h1>
+<hr/>
+<h1 id="title"><strong >socat</strong></h1>
+<h2 id="author"><br/>()</h2>
+
 
 <p>
 
 <a name="CONTENTS"></a>
-<h2>CONTENTS</h2>
-<a href="socat.html#NAME">NAME</a><br>
-<a href="socat.html#SYNOPSIS">SYNOPSIS</a><br>
-<a href="socat.html#DESCRIPTION">DESCRIPTION</a><br>
-<a href="socat.html#OPTIONS">OPTIONS</a><br>
-<a href="socat.html#ADDRESS_SPECIFICATIONS">ADDRESS SPECIFICATIONS</a><br>
-<a href="socat.html#ADDRESS_TYPES">ADDRESS TYPES</a><br>
-<a href="socat.html#ADDRESS_OPTIONS">ADDRESS OPTIONS</a><br>
-<a href="socat.html#VALUES">DATA VALUES</a><br>
-<a href="socat.html#EXAMPLES">EXAMPLES</a><br>
-<a href="socat.html#DIAGNOSTICS">DIAGNOSTICS</a><br>
-<a href="socat.html#FILES">FILES</a><br>
-<a href="socat.html#ENVIRONMENT_VARIABLES">ENVIRONMENT VARIABLES</a><br>
-<a href="socat.html#CREDITS">CREDITS</a><br>
-<a href="socat.html#VERSION">VERSION</a><br>
-<a href="socat.html#BUGS">BUGS</a><br>
-<a href="socat.html#SEEALSO">SEE ALSO</a><br>
+<h2 >CONTENTS</h2>
+<a href="socat.html#NAME">NAME</a><br/>
+<a href="socat.html#SYNOPSIS">SYNOPSIS</a><br/>
+<a href="socat.html#DESCRIPTION">DESCRIPTION</a><br/>
+<a href="socat.html#OPTIONS">OPTIONS</a><br/>
+<a href="socat.html#ADDRESS_SPECIFICATIONS">ADDRESS SPECIFICATIONS</a><br/>
+<a href="socat.html#ADDRESS_TYPES">ADDRESS TYPES</a><br/>
+<a href="socat.html#ADDRESS_OPTIONS">ADDRESS OPTIONS</a><br/>
+<a href="socat.html#VALUES">DATA VALUES</a><br/>
+<a href="socat.html#EXAMPLES">EXAMPLES</a><br/>
+<a href="socat.html#DIAGNOSTICS">DIAGNOSTICS</a><br/>
+<a href="socat.html#FILES">FILES</a><br/>
+<a href="socat.html#ENVIRONMENT_VARIABLES">ENVIRONMENT VARIABLES</a><br/>
+<a href="socat.html#CREDITS">CREDITS</a><br/>
+<a href="socat.html#VERSION">VERSION</a><br/>
+<a href="socat.html#BUGS">BUGS</a><br/>
+<a href="socat.html#SEEALSO">SEE ALSO</a><br/>
 <p>
 <a name="NAME"></a>
-<h2>NAME</h2>socat - Multipurpose relay (SOcket CAT)
+<h2 >NAME</h2>socat - Multipurpose relay (SOcket CAT)
 <p>
 <a name="SYNOPSIS"></a>
-<h2>SYNOPSIS</h2>
-<code>socat [options] &lt;address&gt; &lt;address&gt;</code><br>
-<code>socat -V</code><br>
-<code>socat -h[h[h]] | -?[?[?]]</code><br>
-<code>filan</code><br>
-<code>procan</code>
+<h2 >SYNOPSIS</h2>
+<code >socat [options] &lt;address&gt; &lt;address&gt;</code><br/>
+<code >socat -V</code><br/>
+<code >socat -h[h[h]] | -?[?[?]]</code><br/>
+<code >filan</code><br/>
+<code >procan</code>
 <p>
 <a name="DESCRIPTION"></a>
-<h2>DESCRIPTION</h2>
+<h2 >DESCRIPTION</h2>
 <p>
-<strong>Socat</strong> is a command line based utility that establishes two bidirectional byte
+<strong >Socat</strong> is a command line based utility that establishes two bidirectional byte
 streams and transfers data between them. Because the streams can be constructed
 from a large set of different types of data sinks and sources 
 (see <a href="socat.html#ADDRESS_TYPES">address types</a>), and because lots of
 <a href="socat.html#ADDRESS_OPTIONS">address options</a> may be applied to the streams, socat can
 be used for many different purposes. 
 <p>
-<strong>Filan</strong> is a utility that prints information about its active file
-descriptors to stdout. It has been written for debugging <strong>socat</strong>, but might be
+<strong >Filan</strong> is a utility that prints information about its active file
+descriptors to stdout. It has been written for debugging <strong >socat</strong>, but might be
 useful for other purposes too. Use the -h option to find more infos.
 <p>
-<strong>Procan</strong> is a utility that prints information about process parameters to
+<strong >Procan</strong> is a utility that prints information about process parameters to
 stdout. It has been written to better understand 
-some UNIX process properties and for debugging <strong>socat</strong>, but might be 
+some UNIX process properties and for debugging <strong >socat</strong>, but might be 
 useful for other purposes too.
 <p>
-The life cycle of a <strong>socat</strong> instance typically consists of four phases.
+The life cycle of a <strong >socat</strong> instance typically consists of four phases.
 <p>
-In the <em>init</em> phase, the command line options are parsed and logging is
+In the <em >init</em> phase, the command line options are parsed and logging is
 initialized. 
 <p>
-During the <em>open</em> phase, <strong>socat</strong> opens the first address and afterwards the
+During the <em >open</em> phase, <strong >socat</strong> opens the first address and afterwards the
 second address. These steps are usually blocking; thus, especially for complex address types like socks,
 connection requests or authentication dialogs must be completed before the next
 step is started.
 <p>
-In the <em>transfer</em> phase, <strong>socat</strong> watches both streams' read and write file
+In the <em >transfer</em> phase, <strong >socat</strong> watches both streams' read and write file
 descriptors via 
-<code>select()</code>
-, and, when data is available on one side <em>and</em>
+<code >select()</code>
+, and, when data is available on one side <em >and</em>
 can be written to the other side, socat reads it, performs newline
 character conversions if required, and writes the data to the write file
 descriptor of the other stream, then continues waiting for more data in both
 directions.
 <p>
-When one of the streams effectively reaches EOF, the <em>closing</em> phase
-begins. <strong>Socat</strong> transfers the EOF condition to the other stream,
+When one of the streams effectively reaches EOF, the <em >closing</em> phase
+begins. <strong >Socat</strong> transfers the EOF condition to the other stream,
 i.e. tries to shutdown only its write stream, giving it a chance to
-terminate gracefully. For a defined time <strong>socat</strong> continues to transfer data in
+terminate gracefully. For a defined time <strong >socat</strong> continues to transfer data in
 the other direction, but then closes all remaining channels and terminates.
 <p>
 <a name="OPTIONS"></a>
-<h2>OPTIONS</h2>
+<h2 >OPTIONS</h2>
 <p>
-<strong>Socat</strong> provides some command line options that modify the behaviour of the
+<strong >Socat</strong> provides some command line options that modify the behaviour of the
 program. They have nothing to do with so called
 <a href="socat.html#ADDRESS_OPTIONS">address options</a> that are used as parts of <a href="socat.html#ADDRESS_SPECIFICATIONS">address specifications</a>.
 <p>
-<dl>
-<p><dt><strong><strong><code>-V</code></strong></strong><dd>
+startdit()
+<dt ><strong><strong ><code >-V</code></strong></strong></dt>
    Print version and available feature information to stdout, and exit.
-<p><dt><strong><strong><code>-h | -?</code></strong></strong><dd>
+<dt ><strong><strong ><code >-h | -?</code></strong></strong></dt>
    Print a help text to stdout describing command line options and available address
    types, and exit.
-<p><dt><strong><strong><code>-hh | -??</code></strong></strong><dd>
+<dt ><strong><strong ><code >-hh | -??</code></strong></strong></dt>
    Like -h, plus a list of the short names of all available address options. Some options are
    platform dependend, so this output is helpful for checking the particular
    implementation. 
-<p><dt><strong><strong><code>-hhh | -???</code></strong></strong><dd>
+<dt ><strong><strong ><code >-hhh | -???</code></strong></strong></dt>
    Like -hh, plus a list of all available address option names.
-<a name="option_d"></a><p><dt><strong><strong><code>-d</code></strong></strong><dd>
+<a name="option_d"></a><dt ><strong><strong ><code >-d</code></strong></strong></dt>
    Without this option, only fatal and error messages are generated; applying
    this option also prints warning messages. See <a href="socat.html#DIAGNOSTICS">DIAGNOSTICS</a>
    for more information. 
-<a name="option_d_d"></a><p><dt><strong><strong><code>-d -d</code></strong></strong><dd> Prints fatal, error, warning, and notice messages.
-<p><dt><strong><strong><code>-d -d -d</code></strong></strong><dd> Prints fatal, error, warning, notice, and info messages.
-<p><dt><strong><strong><code>-d -d -d -d</code></strong></strong><dd> Prints fatal, error, warning, notice, info, and debug
+<a name="option_d_d"></a><dt ><strong><strong ><code >-d -d</code></strong></strong></dt> Prints fatal, error, warning, and notice messages.
+<dt ><strong><strong ><code >-d -d -d</code></strong></strong></dt> Prints fatal, error, warning, notice, and info messages.
+<dt ><strong><strong ><code >-d -d -d -d</code></strong></strong></dt> Prints fatal, error, warning, notice, info, and debug
    messages. 
-<p><dt><strong><strong><code>-D</code></strong></strong><dd>
+<dt ><strong><strong ><code >-D</code></strong></strong></dt>
    Logs information about file descriptors before starting the transfer phase.
-<p><dt><strong><strong><code>-ly[&lt;facility&gt;]</code></strong></strong><dd>
+<dt ><strong><strong ><code >-ly[&lt;facility&gt;]</code></strong></strong></dt>
    Writes messages to syslog instead of stderr; severity as defined with -d
    option. With optional <a href="socat.html#TYPE_FACILITY">&lt;facility&gt;</a>, the syslog type can
    be selected, default is "daemon". Third party libraries might not obey this
    option.
-<p><dt><strong><strong><code>-lf</code></strong><code> &lt;logfile&gt;</code></strong><dd>
+<dt ><strong><strong ><code >-lf</code></strong><code > &lt;logfile&gt;</code></strong></dt>
    Writes messages to &lt;logfile&gt; [<a href="socat.html#TYPE_FILENAME">filename</a>] instead of
    stderr. Some third party libraries, in particular libwrap, might not obey
    this option.
-<p><dt><strong><strong><code>-ls</code></strong></strong><dd>
+<dt ><strong><strong ><code >-ls</code></strong></strong></dt>
    Writes messages to stderr (this is the default). Some third party libraries 
    might not obey this option, in particular libwrap appears to only log to
    syslog. 
-<a name="option_lp"></a><p><dt><strong><strong><code>-lp</code></strong><code>&lt;progname&gt;</code></strong><dd>
+<a name="option_lp"></a><dt ><strong><strong ><code >-lp</code></strong><code >&lt;progname&gt;</code></strong></dt>
    Overrides the program name printed in error messages and used for
    constructing environment variable names.
-<p><dt><strong><strong><code>-lu</code></strong></strong><dd>
+<dt ><strong><strong ><code >-lu</code></strong></strong></dt>
    Extends the timestamp of error messages to microsecond resolution. Does not
    work when logging to syslog.
-<a name="option_lm"></a><p><dt><strong><strong><code>-lm[&lt;facility&gt;]</code></strong></strong><dd>
-   Mixed log mode. During startup messages are printed to stderr; when <strong>socat</strong> 
+<a name="option_lm"></a><dt ><strong><strong ><code >-lm[&lt;facility&gt;]</code></strong></strong></dt>
+   Mixed log mode. During startup messages are printed to stderr; when <strong >socat</strong> 
    starts the transfer phase loop or daemon mode (i.e. after opening all
    streams and before starting data transfer, or, with listening sockets with
    fork option, before the first accept call), it switches logging to syslog. 
    With optional <a href="socat.html#TYPE_FACILITY">&lt;facility&gt;</a>, the syslog type can be
    selected, default is "daemon". 
-<a name="option_lh"></a><p><dt><strong><strong><code>-lh</code></strong></strong><dd>
+<a name="option_lh"></a><dt ><strong><strong ><code >-lh</code></strong></strong></dt>
    Adds hostname to log messages. Uses the value from environment variable
-   HOSTNAME or the value retrieved with <code>uname()</code> if HOSTNAME is not set.
-<p><dt><strong><strong><code>-v</code></strong></strong><dd>
+   HOSTNAME or the value retrieved with <code >uname()</code> if HOSTNAME is not set.
+<dt ><strong><strong ><code >-v</code></strong></strong></dt>
    Writes the transferred data not only to their target streams, but also to
    stderr. The output format is text with some conversions for readability, and
    prefixed with "&gt; " or "&lt; " indicating flow directions.
-<p><dt><strong><strong><code>-x</code></strong></strong><dd>
+<dt ><strong><strong ><code >-x</code></strong></strong></dt>
    Writes the transferred data not only to their target streams, but also to
    stderr. The output format is hexadecimal, prefixed with "&gt; " or "&lt; "
    indicating flow directions. Can be combined with 
-<code>-v</code>
+<code >-v</code>
 .
-<a name="option_b"></a><p><dt><strong><strong><code>-b</code></strong><code>&lt;size&gt;</code></strong><dd>
+<a name="option_b"></a><dt ><strong><strong ><code >-b</code></strong><code >&lt;size&gt;</code></strong></dt>
    Sets the data transfer block &lt;size&gt; [<a href="socat.html#TYPE_SIZE_T">size_t</a>].
    At most &lt;size&gt; bytes are transferred per step. Default is 8192 bytes. 
-<a name="option_s"></a><p><dt><strong><strong><code>-s</code></strong></strong><dd>
-   By default, <strong>socat</strong> terminates when an error occurred to prevent the process
+<a name="option_s"></a><dt ><strong><strong ><code >-s</code></strong></strong></dt>
+   By default, <strong >socat</strong> terminates when an error occurred to prevent the process
    from running when some option could not be applied. With this
-   option, <strong>socat</strong> is sloppy with errors and tries to continue. Even with this
+   option, <strong >socat</strong> is sloppy with errors and tries to continue. Even with this
    option, socat will exit on fatals, and will abort connection attempts when
    security checks failed.
-<a name="option_t"></a><p><dt><strong><strong><code>-t</code></strong><code>&lt;timeout&gt;</code></strong><dd>
+<a name="option_t"></a><dt ><strong><strong ><code >-t</code></strong><code >&lt;timeout&gt;</code></strong></dt>
    When one channel has reached EOF, the write part of the other channel is shut
-   down. Then, <strong>socat</strong> waits &lt;timeout&gt; [<a href="socat.html#TYPE_TIMEVAL">timeval</a>] seconds
+   down. Then, <strong >socat</strong> waits &lt;timeout&gt; [<a href="socat.html#TYPE_TIMEVAL">timeval</a>] seconds
    before terminating. Default is 0.5 seconds. This timeout only applies to
    addresses where write and read part can be closed independently. When during
    the timeout interval the read part gives EOF, socat terminates without
    awaiting the timeout.
-<a name="option_T"></a><p><dt><strong><strong><code>-T</code></strong><code>&lt;timeout&gt;</code></strong><dd>
+<a name="option_T"></a><dt ><strong><strong ><code >-T</code></strong><code >&lt;timeout&gt;</code></strong></dt>
    Total inactivity timeout: when socat is already in the transfer loop and
    nothing has happened for &lt;timeout&gt; [<a href="socat.html#TYPE_TIMEVAL">timeval</a>] seconds
    (no data arrived, no interrupt occurred...) then it terminates.
    Useful with protocols like UDP that cannot transfer EOF.
-<a name="option_u"></a><p><dt><strong><strong><code>-u</code></strong></strong><dd>
+<a name="option_u"></a><dt ><strong><strong ><code >-u</code></strong></strong></dt>
    Uses unidirectional mode. The first address is only used for reading, and the
    second address is only used for writing (<a href="socat.html#EXAMPLE_option_u">example</a>). 
-<a name="option_U"></a><p><dt><strong><strong><code>-U</code></strong></strong><dd>
+<a name="option_U"></a><dt ><strong><strong ><code >-U</code></strong></strong></dt>
    Uses unidirectional mode in reverse direction. The first address is only
    used for writing, and the second address is only used for reading. 
-<a name="option_g"></a><p><dt><strong><strong><code>-g</code></strong></strong><dd>
+<a name="option_g"></a><dt ><strong><strong ><code >-g</code></strong></strong></dt>
    During address option parsing, don't check if the option is considered
    useful in the given address environment. Use it if you want to force, e.g.,
    appliance of a socket option to a serial device.
-<a name="option_L"></a><p><dt><strong><strong><code>-L</code></strong><code>&lt;lockfile&gt;</code></strong><dd>
+<a name="option_L"></a><dt ><strong><strong ><code >-L</code></strong><code >&lt;lockfile&gt;</code></strong></dt>
    If lockfile exists, exits with error. If lockfile does not exist, creates it
    and continues, unlinks lockfile on exit.
-<a name="option_W"></a><p><dt><strong><strong><code>-W</code></strong><code>&lt;lockfile&gt;</code></strong><dd>
+<a name="option_W"></a><dt ><strong><strong ><code >-W</code></strong><code >&lt;lockfile&gt;</code></strong></dt>
    If lockfile exists, waits until it disappears. When lockfile does not exist,
    creates it and continues, unlinks lockfile on exit.
-<a name="option_4"></a><p><dt><strong><strong><code>-4</code></strong></strong><dd>
+<a name="option_4"></a><dt ><strong><strong ><code >-4</code></strong></strong></dt>
    Use IP version 4 in case that the addresses do not implicitly or explicitly
    specify a version; this is the default.
-<a name="option_6"></a><p><dt><strong><strong><code>-6</code></strong></strong><dd>
+<a name="option_6"></a><dt ><strong><strong ><code >-6</code></strong></strong></dt>
    Use IP version 6 in case that the addresses do not implicitly or explicitly
    specify a version.
-</dl>
+enddit()
 <p>
 <a name="ADDRESS_SPECIFICATIONS"></a>
-<h2>ADDRESS SPECIFICATIONS</h2>
+<h2 >ADDRESS SPECIFICATIONS</h2>
 <p>
-With the address command line arguments, the user gives <strong>socat</strong> instructions and
+With the address command line arguments, the user gives <strong >socat</strong> instructions and
 the necessary information for establishing the byte streams. 
 <p>
 An address specification usually consists of an address type
@@ -229,10 +242,10 @@
 belonging to one of these address groups may be used (except with <a href="socat.html#option_g">option -g</a>). 
 <p>
 <a name="ADDRESS_DUAL"></a>
-Address specifications following the above schema are also called <em>single</em>
+Address specifications following the above schema are also called <em >single</em>
 address specifications.
-Two single addresses can be combined with "!!" to form a <em>dual</em> type
-address for one channel. Here, the first address is used by <strong>socat</strong> for reading
+Two single addresses can be combined with "!!" to form a <em >dual</em> type
+address for one channel. Here, the first address is used by <strong >socat</strong> for reading
 data, and the 
 second address for writing data. There is no way to specify an option only once
 for being applied to both single addresses.
@@ -251,59 +264,59 @@
 specially. All those characters and strings can be escaped with \ or within ""
 <p>
 <a name="ADDRESS_TYPES"></a>
-<h2>ADDRESS TYPES</h2>
+<h2 >ADDRESS TYPES</h2>
 <p>
 This section describes the available address types with their keywords,
 parameters, and semantics.
 <p>
-<dl>
-<a name="ADDRESS_CREAT"></a><p><dt><strong><strong><code>CREATE:&lt;filename&gt;</code></strong></strong><dd>
+startdit()
+<a name="ADDRESS_CREAT"></a><dt ><strong><strong ><code >CREATE:&lt;filename&gt;</code></strong></strong></dt>
    Opens <a href="socat.html#TYPE_FILENAME">&lt;filename&gt;</a> with 
-<code>creat()</code>
+<code >creat()</code>
  and uses the file
    descriptor for writing. 
    This address type requires write-only context, because a file opened with
    
-<code>creat</code>
- cannot be read from. <br>
+<code >creat</code>
+ cannot be read from. <br/>
    Flags like O_LARGEFILE cannot be applied. If you need them use
    <a href="socat.html#ADDRESS_OPEN">OPEN</a> with options
-   <a href="socat.html#OPTION_O_CREAT">create</a>,<a href="socat.html#OPTION_O_TRUNC">create</a>. <br>
+   <a href="socat.html#OPTION_O_CREAT">create</a>,<a href="socat.html#OPTION_O_TRUNC">create</a>. <br/>
    &lt;filename&gt; must be a valid existing or not existing path.
    If &lt;filename&gt; is a named pipe, 
-<code>creat()</code>
+<code >creat()</code>
  might block;
-   if &lt;filename&gt; refers to a socket, this is an error.<br> 
-   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_REG">REG</a>,<a href="socat.html#GROUP_NAMED">NAMED</a> <br>
+   if &lt;filename&gt; refers to a socket, this is an error.<br/> 
+   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_REG">REG</a>,<a href="socat.html#GROUP_NAMED">NAMED</a> <br/>
    Useful options:
    <a href="socat.html#OPTION_MODE">mode</a>,
    <a href="socat.html#OPTION_USER">user</a>,
    <a href="socat.html#OPTION_GROUP">group</a>,
    <a href="socat.html#OPTION_UNLINK_EARLY">unlink-early</a>,
    <a href="socat.html#OPTION_UNLINK_LATE">unlink-late</a>,
-   <a href="socat.html#OPTION_APPEND">append</a><br>
+   <a href="socat.html#OPTION_APPEND">append</a><br/>
    See also: <a href="socat.html#ADDRESS_OPEN">OPEN</a>, <a href="socat.html#ADDRESS_GOPEN">GOPEN</a>
-<a name="ADDRESS_EXEC"></a><p><dt><strong><strong><code>EXEC:&lt;command-line&gt;</code></strong></strong><dd>
+<a name="ADDRESS_EXEC"></a><dt ><strong><strong ><code >EXEC:&lt;command-line&gt;</code></strong></strong></dt>
    Forks a sub process that establishes communication with its parent process
    and invokes the specified program with 
-<code>execvp()</code>
+<code >execvp()</code>
 .
    <a href="socat.html#TYPE_COMMAND_LINE">&lt;command-line&gt;</a> is a simple command
    with arguments separated by single spaces. If the program name
    contains a '/', the part after the last '/' is taken as ARGV[0]. If the
    program name is a relative 
    path, the 
-<code>execvp()</code>
+<code >execvp()</code>
  semantics for finding the program via
    
-<code>$PATH</code>
+<code >$PATH</code>
  
-   apply. After successful program start, <strong>socat</strong> writes data to stdin of the
+   apply. After successful program start, <strong >socat</strong> writes data to stdin of the
    process and reads from its stdout using a UNIX domain socket generated by
    
-<code>socketpair()</code>
- per default. (<a href="socat.html#EXAMPLE_ADDRESS_EXEC">example</a>) <br>  
-   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_EXEC">EXEC</a>,<a href="socat.html#GROUP_FORK">FORK</a>,<a href="socat.html#GROUP_TERMIOS">TERMIOS</a> <br>
+<code >socketpair()</code>
+ per default. (<a href="socat.html#EXAMPLE_ADDRESS_EXEC">example</a>) <br/>  
+   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_EXEC">EXEC</a>,<a href="socat.html#GROUP_FORK">FORK</a>,<a href="socat.html#GROUP_TERMIOS">TERMIOS</a> <br/>
    Useful options:
    <a href="socat.html#OPTION_PATH">path</a>,
    <a href="socat.html#OPTION_FDIN">fdin</a>,
@@ -319,50 +332,50 @@
    <a href="socat.html#OPTION_PIPES">pipes</a>,
    <a href="socat.html#OPTION_LOGIN">login</a>,
    <a href="socat.html#OPTION_SIGINT">sigint</a>,
-   <a href="socat.html#OPTION_SIGQUIT">sigquit</a><br>
+   <a href="socat.html#OPTION_SIGQUIT">sigquit</a><br/>
    See also: <a href="socat.html#ADDRESS_SYSTEM">SYSTEM</a>
-<a name="ADDRESS_FD"></a><p><dt><strong><strong><code>FD:&lt;fdnum&gt;</code></strong></strong><dd>
+<a name="ADDRESS_FD"></a><dt ><strong><strong ><code >FD:&lt;fdnum&gt;</code></strong></strong></dt>
    Uses the file descriptor <a href="socat.html#TYPE_FDNUM">&lt;fdnum&gt;</a>. It must already exist as
-   valid UN*X file descriptor.<br>
-   Option groups: <a href="socat.html#GROUP_FD">FD</a> (<a href="socat.html#GROUP_TERMIOS">TERMIOS</a>,<a href="socat.html#GROUP_REG">REG</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>) <br>
+   valid UN*X file descriptor.<br/>
+   Option groups: <a href="socat.html#GROUP_FD">FD</a> (<a href="socat.html#GROUP_TERMIOS">TERMIOS</a>,<a href="socat.html#GROUP_REG">REG</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>) <br/>
    See also:
    <a href="socat.html#ADDRESS_STDIO">STDIO</a>,
    <a href="socat.html#ADDRESS_STDIN">STDIN</a>,
    <a href="socat.html#ADDRESS_STDOUT">STDOUT</a>,
    <a href="socat.html#ADDRESS_STDERR">STDERR</a> 
-<a name="ADDRESS_GOPEN"></a><p><dt><strong><strong><code>GOPEN:&lt;filename&gt;</code></strong></strong><dd>
+<a name="ADDRESS_GOPEN"></a><dt ><strong><strong ><code >GOPEN:&lt;filename&gt;</code></strong></strong></dt>
    (Generic open) This address type tries to handle any file system entry
    except directories usefully. <a href="socat.html#TYPE_FILENAME">&lt;filename&gt;</a> may be a
    relative or absolute path. If it already exists, its type is checked. 
-   In case of a UNIX domain socket, <strong>socat</strong> connects; if connecting fails,
-   <strong>socat</strong> assumes a datagram socket and uses 
-<code>sendto()</code>
+   In case of a UNIX domain socket, <strong >socat</strong> connects; if connecting fails,
+   <strong >socat</strong> assumes a datagram socket and uses 
+<code >sendto()</code>
  calls.
-   If the entry is not a socket, <strong>socat</strong> opens it applying the 
-<code>O_APPEND</code>
+   If the entry is not a socket, <strong >socat</strong> opens it applying the 
+<code >O_APPEND</code>
 
    flag. 
    If it does not exist, it is opened with flag
    
-<code>O_CREAT</code>
- as a regular file (<a href="socat.html#EXAMPLE_ADDRESS_GOPEN">example</a>).<br>
-   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_REG">REG</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_NAMED">NAMED</a>,<a href="socat.html#GROUP_OPEN">OPEN</a> <br>
+<code >O_CREAT</code>
+ as a regular file (<a href="socat.html#EXAMPLE_ADDRESS_GOPEN">example</a>).<br/>
+   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_REG">REG</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_NAMED">NAMED</a>,<a href="socat.html#GROUP_OPEN">OPEN</a> <br/>
    See also:
    <a href="socat.html#ADDRESS_OPEN">OPEN</a>,
    <a href="socat.html#ADDRESS_CREAT">CREATE</a>,
    <a href="socat.html#ADDRESS_UNIX_CONNECT">UNIX-CONNECT</a>
 <p>
-<a name="ADDRESS_IP_SENDTO"></a><p><dt><strong><strong><code>IP-SENDTO:&lt;host&gt;:&lt;protocol&gt;</code></strong></strong><dd>
+<a name="ADDRESS_IP_SENDTO"></a><dt ><strong><strong ><code >IP-SENDTO:&lt;host&gt;:&lt;protocol&gt;</code></strong></strong></dt>
    Opens a raw IP socket. Depending on host specification or option <a href="socat.html#OPTION_PROTOCOL_FAMILY">pf</a>, IP protocol version
    4 or 6 is used. It uses <a href="socat.html#TYPE_PROTOCOL">&lt;protocol&gt;</a> to send packets
    to &lt;host&gt; [<a href="socat.html#TYPE_IP_ADDRESS">IP address</a>] and receives packets from
    host, ignores packets from other hosts. 
    Protocol 255 uses the raw socket with the IP header being part of the
-   data.<br>
-   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP4">IP4</a>,<a href="socat.html#GROUP_IP6">IP6</a> <br>
+   data.<br/>
+   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP4">IP4</a>,<a href="socat.html#GROUP_IP6">IP6</a> <br/>
    Useful options:
    <a href="socat.html#OPTION_PROTOCOL_FAMILY">pf</a>,
-   <a href="socat.html#OPTION_TTL">ttl</a> <br>
+   <a href="socat.html#OPTION_TTL">ttl</a> <br/>
    See also:
    <a href="socat.html#ADDRESS_IP4_SENDTO">IP4-SENDTO</a>,
    <a href="socat.html#ADDRESS_IP6_SENDTO">IP6-SENDTO</a>,
@@ -370,31 +383,31 @@
    <a href="socat.html#ADDRESS_IP_RECV">IP-RECV</a>,
    <a href="socat.html#ADDRESS_UDP_SENDTO">UDP-SENDTO</a>,
    <a href="socat.html#ADDRESS_UNIX_SENDTO">UNIX-SENDTO</a>
-<a name="ADDRESS_INTERFACE"></a><p><dt><strong><strong><code>INTERFACE:&lt;interface&gt;</code></strong></strong><dd>
+<a name="ADDRESS_INTERFACE"></a><dt ><strong><strong ><code >INTERFACE:&lt;interface&gt;</code></strong></strong></dt>
    Communicates with a network connected on an interface using raw packets
    including link level data. <a href="socat.html#TYPE_INTERFACE">&lt;interface&gt;</a> is the name of
    the network interface. Currently only available on Linux.
-   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a> <br>
+   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a> <br/>
    Useful options:
    <a href="socat.html#OPTION_PROTOCOL_FAMILY">pf</a>,
-   <a href="socat.html#OPTION_SO_TYPE">type</a><br>
+   <a href="socat.html#OPTION_SO_TYPE">type</a><br/>
    See also: <a href="socat.html#ADDRESS_IP_RECV">ip-recv</a>
-<a name="ADDRESS_IP4_SENDTO"></a><p><dt><strong><strong><code>IP4-SENDTO:&lt;host&gt;:&lt;protocol&gt;</code></strong></strong><dd>
-   Like <a href="socat.html#ADDRESS_IP_SENDTO">IP-SENDTO</a>, but always uses IPv4.<br>
-   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP4">IP4</a> <br>
-<a name="ADDRESS_IP6_SENDTO"></a><p><dt><strong><strong><code>IP6-SENDTO:&lt;host&gt;:&lt;protocol&gt;</code></strong></strong><dd>
-   Like <a href="socat.html#ADDRESS_IP_SENDTO">IP-SENDTO</a>, but always uses IPv6.<br>
-   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP6">IP6</a> <br>
+<a name="ADDRESS_IP4_SENDTO"></a><dt ><strong><strong ><code >IP4-SENDTO:&lt;host&gt;:&lt;protocol&gt;</code></strong></strong></dt>
+   Like <a href="socat.html#ADDRESS_IP_SENDTO">IP-SENDTO</a>, but always uses IPv4.<br/>
+   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP4">IP4</a> <br/>
+<a name="ADDRESS_IP6_SENDTO"></a><dt ><strong><strong ><code >IP6-SENDTO:&lt;host&gt;:&lt;protocol&gt;</code></strong></strong></dt>
+   Like <a href="socat.html#ADDRESS_IP_SENDTO">IP-SENDTO</a>, but always uses IPv6.<br/>
+   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP6">IP6</a> <br/>
 <p>
-<a name="ADDRESS_IP_DATAGRAM"></a><p><dt><strong><strong><code>IP-DATAGRAM:&lt;address&gt;:&lt;protocol&gt;</code></strong></strong><dd>
+<a name="ADDRESS_IP_DATAGRAM"></a><dt ><strong><strong ><code >IP-DATAGRAM:&lt;address&gt;:&lt;protocol&gt;</code></strong></strong></dt>
    Sends outgoing data to the specified address which may in particular be a
    broadcast or multicast address. Packets arriving on the local socket are
    checked if their source addresses match
    <a href="socat.html#OPTION_RANGE">RANGE</a> or <a href="socat.html#OPTION_TCPWRAPPERS">TCPWRAP</a>
    options. This address type can for example be used for implementing
-   symmetric or asymmetric broadcast or multicast communications.<br>
+   symmetric or asymmetric broadcast or multicast communications.<br/>
    Option groups: <a href="socat.html#GROUP_FD">FD</a>, <a href="socat.html#GROUP_SOCKET">SOCKET</a>,
-      <a href="socat.html#GROUP_IP4">IP4</a>, <a href="socat.html#GROUP_IP6">IP6</a>, <a href="socat.html#GROUP_RANGE">RANGE</a> <br>
+      <a href="socat.html#GROUP_IP4">IP4</a>, <a href="socat.html#GROUP_IP6">IP6</a>, <a href="socat.html#GROUP_RANGE">RANGE</a> <br/>
    Useful options:
    <a href="socat.html#OPTION_BIND">bind</a>,
    <a href="socat.html#OPTION_RANGE">range</a>,
@@ -406,7 +419,7 @@
    <a href="socat.html#OPTION_IP_ADD_MEMBERSHIP">ip-add-membership</a>,
    <a href="socat.html#OPTION_TTL">ttl</a>,
    <a href="socat.html#OPTION_TOS">tos</a>,
-   <a href="socat.html#OPTION_PROTOCOL_FAMILY">pf</a><br>
+   <a href="socat.html#OPTION_PROTOCOL_FAMILY">pf</a><br/>
    See also:
    <a href="socat.html#ADDRESS_IP4_DATAGRAM">IP4-DATAGRAM</a>,
    <a href="socat.html#ADDRESS_IP6_DATAGRAM">IP6-DATAGRAM</a>,
@@ -414,34 +427,34 @@
    <a href="socat.html#ADDRESS_IP_RECVFROM">IP-RECVFROM</a>,
    <a href="socat.html#ADDRESS_IP_RECV">IP-RECV</a>,
    <a href="socat.html#ADDRESS_UDP_DATAGRAM">UDP-DATAGRAM</a>
-<a name="ADDRESS_IP4_DATAGRAM"></a><p><dt><strong><strong><code>IP4-DATAGRAM:&lt;host&gt;:&lt;protocol&gt;</code></strong></strong><dd>
+<a name="ADDRESS_IP4_DATAGRAM"></a><dt ><strong><strong ><code >IP4-DATAGRAM:&lt;host&gt;:&lt;protocol&gt;</code></strong></strong></dt>
    Like <a href="socat.html#ADDRESS_IP_DATAGRAM">IP-DATAGRAM</a>, but always uses IPv4.
-   (<a href="socat.html#EXAMPLE_ADDRESS_IP4_BROADCAST_CLIENT">example</a>)<br>
-   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP4">IP4</a>,<a href="socat.html#GROUP_RANGE">RANGE</a> <br>
-<a name="ADDRESS_IP6_DATAGRAM"></a><p><dt><strong><strong><code>IP6-DATAGRAM:&lt;host&gt;:&lt;protocol&gt;</code></strong></strong><dd>
+   (<a href="socat.html#EXAMPLE_ADDRESS_IP4_BROADCAST_CLIENT">example</a>)<br/>
+   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP4">IP4</a>,<a href="socat.html#GROUP_RANGE">RANGE</a> <br/>
+<a name="ADDRESS_IP6_DATAGRAM"></a><dt ><strong><strong ><code >IP6-DATAGRAM:&lt;host&gt;:&lt;protocol&gt;</code></strong></strong></dt>
    Like <a href="socat.html#ADDRESS_IP_DATAGRAM">IP-DATAGRAM</a>, but always uses IPv6. Please
-   note that IPv6 does not know broadcasts.<br>
-   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP6">IP6</a>,<a href="socat.html#GROUP_RANGE">RANGE</a> <br>
+   note that IPv6 does not know broadcasts.<br/>
+   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP6">IP6</a>,<a href="socat.html#GROUP_RANGE">RANGE</a> <br/>
 <p>
-<a name="ADDRESS_IP_RECVFROM"></a><p><dt><strong><strong><code>IP-RECVFROM:&lt;protocol&gt;</code></strong></strong><dd>
+<a name="ADDRESS_IP_RECVFROM"></a><dt ><strong><strong ><code >IP-RECVFROM:&lt;protocol&gt;</code></strong></strong></dt>
    Opens a raw IP socket of <a href="socat.html#TYPE_PROTOCOL">&lt;protocol&gt;</a>. Depending on option <a href="socat.html#OPTION_PROTOCOL_FAMILY">pf</a>, IP protocol version
    4 or 6 is used. It receives one packet from an unspecified peer and may send one or more answer packets to that peer.
    This mode is particularly useful with fork option where each arriving packet - from arbitrary peers - is handled by its own sub process.
    This allows a behaviour similar to typical UDP based servers like ntpd or
-   named.<br>
+   named.<br/>
    Please note that the reply packets might be fetched as incoming traffic when
    sender and receiver IP address are identical because there is no port number
-   to distinguish the sockets.<br>
+   to distinguish the sockets.<br/>
    This address works well with IP-SENDTO address peers (see above).
    Protocol 255 uses the raw socket with the IP header being part of the
-   data.<br>
-   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP4">IP4</a>,<a href="socat.html#GROUP_IP6">IP6</a>,<a href="socat.html#GROUP_CHILD">CHILD</a>,<a href="socat.html#GROUP_RANGE">RANGE</a> <br>
+   data.<br/>
+   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP4">IP4</a>,<a href="socat.html#GROUP_IP6">IP6</a>,<a href="socat.html#GROUP_CHILD">CHILD</a>,<a href="socat.html#GROUP_RANGE">RANGE</a> <br/>
    Useful options:
    <a href="socat.html#OPTION_PROTOCOL_FAMILY">pf</a>,
    <a href="socat.html#OPTION_FORK">fork</a>,
    <a href="socat.html#OPTION_RANGE">range</a>,
    <a href="socat.html#OPTION_TTL">ttl</a>,
-   <a href="socat.html#OPTION_SO_BROADCAST">broadcast</a><br>
+   <a href="socat.html#OPTION_SO_BROADCAST">broadcast</a><br/>
    See also:
    <a href="socat.html#ADDRESS_IP4_RECVFROM">IP4-RECVFROM</a>,
    <a href="socat.html#ADDRESS_IP6_RECVFROM">IP6-RECVFROM</a>,
@@ -449,24 +462,24 @@
    <a href="socat.html#ADDRESS_IP_RECV">IP-RECV</a>,
    <a href="socat.html#ADDRESS_UDP_RECVFROM">UDP-RECVFROM</a>,
    <a href="socat.html#ADDRESS_UNIX_RECVFROM">UNIX-RECVFROM</a> 
-<a name="ADDRESS_IP4_RECVFROM"></a><p><dt><strong><strong><code>IP4-RECVFROM:&lt;protocol&gt;</code></strong></strong><dd>
-   Like <a href="socat.html#ADDRESS_IP_RECVFROM">IP-RECVFROM</a>, but always uses IPv4.<br>
-   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP4">IP4</a>,<a href="socat.html#GROUP_CHILD">CHILD</a>,<a href="socat.html#GROUP_RANGE">RANGE</a> <br>
-<a name="ADDRESS_IP6_RECVFROM"></a><p><dt><strong><strong><code>IP6-RECVFROM:&lt;protocol&gt;</code></strong></strong><dd>
-   Like <a href="socat.html#ADDRESS_IP_RECVFROM">IP-RECVFROM</a>, but always uses IPv6.<br>
-   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP6">IP6</a>,<a href="socat.html#GROUP_CHILD">CHILD</a>,<a href="socat.html#GROUP_RANGE">RANGE</a> <br>
+<a name="ADDRESS_IP4_RECVFROM"></a><dt ><strong><strong ><code >IP4-RECVFROM:&lt;protocol&gt;</code></strong></strong></dt>
+   Like <a href="socat.html#ADDRESS_IP_RECVFROM">IP-RECVFROM</a>, but always uses IPv4.<br/>
+   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP4">IP4</a>,<a href="socat.html#GROUP_CHILD">CHILD</a>,<a href="socat.html#GROUP_RANGE">RANGE</a> <br/>
+<a name="ADDRESS_IP6_RECVFROM"></a><dt ><strong><strong ><code >IP6-RECVFROM:&lt;protocol&gt;</code></strong></strong></dt>
+   Like <a href="socat.html#ADDRESS_IP_RECVFROM">IP-RECVFROM</a>, but always uses IPv6.<br/>
+   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP6">IP6</a>,<a href="socat.html#GROUP_CHILD">CHILD</a>,<a href="socat.html#GROUP_RANGE">RANGE</a> <br/>
 <p>
-<a name="ADDRESS_IP_RECV"></a><p><dt><strong><strong><code>IP-RECV:&lt;protocol&gt;</code></strong></strong><dd>
+<a name="ADDRESS_IP_RECV"></a><dt ><strong><strong ><code >IP-RECV:&lt;protocol&gt;</code></strong></strong></dt>
    Opens a raw IP socket of <a href="socat.html#TYPE_PROTOCOL">&lt;protocol&gt;</a>. Depending on option <a href="socat.html#OPTION_PROTOCOL_FAMILY">pf</a>, IP protocol version
    4 or 6 is used. It receives packets from multiple unspecified peers and merges the data.
    No replies are possible.
    It can be, e.g., addressed by socat IP-SENDTO address peers.
    Protocol 255 uses the raw socket with the IP header being part of the
-   data.<br>
-   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP4">IP4</a>,<a href="socat.html#GROUP_IP6">IP6</a>,<a href="socat.html#GROUP_RANGE">RANGE</a> <br>
+   data.<br/>
+   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP4">IP4</a>,<a href="socat.html#GROUP_IP6">IP6</a>,<a href="socat.html#GROUP_RANGE">RANGE</a> <br/>
    Useful options:
    <a href="socat.html#OPTION_PROTOCOL_FAMILY">pf</a>,
-   <a href="socat.html#OPTION_RANGE">range</a><br>
+   <a href="socat.html#OPTION_RANGE">range</a><br/>
    See also:
    <a href="socat.html#ADDRESS_IP4_RECV">IP4-RECV</a>,
    <a href="socat.html#ADDRESS_IP6_RECV">IP6-RECV</a>,
@@ -474,21 +487,21 @@
    <a href="socat.html#ADDRESS_IP_RECVFROM">IP-RECVFROM</a>,
    <a href="socat.html#ADDRESS_UDP_RECV">UDP-RECV</a>,
    <a href="socat.html#ADDRESS_UNIX_RECV">UNIX-RECV</a> 
-<a name="ADDRESS_IP4_RECV"></a><p><dt><strong><strong><code>IP4-RECV:&lt;protocol&gt;</code></strong></strong><dd>
-   Like <a href="socat.html#ADDRESS_IP_RECV">IP-RECV</a>, but always uses IPv4.<br>
-   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP4">IP4</a>,<a href="socat.html#GROUP_RANGE">RANGE</a> <br>
-<a name="ADDRESS_IP6_RECV"></a><p><dt><strong><strong><code>IP6-RECV:&lt;protocol&gt;</code></strong></strong><dd>
-   Like <a href="socat.html#ADDRESS_IP_RECV">IP-RECV</a>, but always uses IPv6.<br>
-   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP6">IP6</a>,<a href="socat.html#GROUP_RANGE">RANGE</a> <br>
+<a name="ADDRESS_IP4_RECV"></a><dt ><strong><strong ><code >IP4-RECV:&lt;protocol&gt;</code></strong></strong></dt>
+   Like <a href="socat.html#ADDRESS_IP_RECV">IP-RECV</a>, but always uses IPv4.<br/>
+   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP4">IP4</a>,<a href="socat.html#GROUP_RANGE">RANGE</a> <br/>
+<a name="ADDRESS_IP6_RECV"></a><dt ><strong><strong ><code >IP6-RECV:&lt;protocol&gt;</code></strong></strong></dt>
+   Like <a href="socat.html#ADDRESS_IP_RECV">IP-RECV</a>, but always uses IPv6.<br/>
+   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP6">IP6</a>,<a href="socat.html#GROUP_RANGE">RANGE</a> <br/>
 <p>
-<a name="ADDRESS_OPEN"></a><p><dt><strong><strong><code>OPEN:&lt;filename&gt;</code></strong></strong><dd>
+<a name="ADDRESS_OPEN"></a><dt ><strong><strong ><code >OPEN:&lt;filename&gt;</code></strong></strong></dt>
    Opens <a href="socat.html#TYPE_FILENAME">&lt;filename&gt;</a> using the 
-<code>open()</code>
+<code >open()</code>
  system call
    (<a href="socat.html#EXAMPLE_ADDRESS_OPEN">example</a>).
-   This operation fails on UNIX domain sockets. <br>
-   Note: This address type is rarely useful in bidirectional mode.<br>
-   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_REG">REG</a>,<a href="socat.html#GROUP_NAMED">NAMED</a>,<a href="socat.html#GROUP_OPEN">OPEN</a> <br>
+   This operation fails on UNIX domain sockets. <br/>
+   Note: This address type is rarely useful in bidirectional mode.<br/>
+   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_REG">REG</a>,<a href="socat.html#GROUP_NAMED">NAMED</a>,<a href="socat.html#GROUP_OPEN">OPEN</a> <br/>
    Useful options:
    <a href="socat.html#OPTION_O_CREAT">creat</a>,
    <a href="socat.html#OPTION_EXCL">excl</a>,
@@ -499,17 +512,17 @@
    <a href="socat.html#OPTION_WRONLY">wronly</a>,
    <a href="socat.html#OPTION_LOCK">lock</a>,
    <a href="socat.html#OPTION_READBYTES">readbytes</a>,
-   <a href="socat.html#OPTION_IGNOREEOF">ignoreeof</a><br>
+   <a href="socat.html#OPTION_IGNOREEOF">ignoreeof</a><br/>
    See also:
    <a href="socat.html#ADDRESS_CREAT">CREATE</a>,
    <a href="socat.html#ADDRESS_GOPEN">GOPEN</a>,
    <a href="socat.html#ADDRESS_UNIX_CONNECT">UNIX-CONNECT</a>
-<a name="ADDRESS_OPENSSL_CONNECT"></a><p><dt><strong><strong><code>OPENSSL:&lt;host&gt;:&lt;port&gt;</code></strong></strong><dd>
+<a name="ADDRESS_OPENSSL_CONNECT"></a><dt ><strong><strong ><code >OPENSSL:&lt;host&gt;:&lt;port&gt;</code></strong></strong></dt>
    Tries to establish a SSL connection to &lt;port&gt; [<a href="socat.html#TYPE_TCP_SERVICE">TCP
    service</a>] on  
    &lt;host&gt; [<a href="socat.html#TYPE_IP_ADDRESS">IP address</a>] using TCP/IP version 4 or 6
    depending on address specification, name resolution, or option
-   <a href="socat.html#OPTION_PROTOCOL_FAMILY">pf</a>.<br>
+   <a href="socat.html#OPTION_PROTOCOL_FAMILY">pf</a>.<br/>
    NOTE: Up to version 1.7.2.4
    the server certificate was only checked for validity against the system
    certificate store or <a href="socat.html#OPTION_OPENSSL_CAFILE">cafile</a> or
@@ -520,8 +533,8 @@
    <a href="socat.html#OPTION_OPENSSL_COMMONNAME">openssl-commonname</a> option.
    Socat tries to match it against the certificates subject commonName,
    and the certifications extension subjectAltName DNS names. Wildcards in the
-   certificate are supported.<br> 
-   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP4">IP4</a>,<a href="socat.html#GROUP_IP6">IP6</a>,<a href="socat.html#GROUP_TCP">TCP</a>,<a href="socat.html#GROUP_OPENSSL">OPENSSL</a>,<a href="socat.html#GROUP_RETRY">RETRY</a> <br>
+   certificate are supported.<br/> 
+   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP4">IP4</a>,<a href="socat.html#GROUP_IP6">IP6</a>,<a href="socat.html#GROUP_TCP">TCP</a>,<a href="socat.html#GROUP_OPENSSL">OPENSSL</a>,<a href="socat.html#GROUP_RETRY">RETRY</a> <br/>
    Useful options:
    <a href="socat.html#OPTION_OPENSSL_CIPHERLIST">cipher</a>,
    <a href="socat.html#OPTION_OPENSSL_VERIFY">verify</a>,
@@ -535,20 +548,20 @@
    <a href="socat.html#OPTION_PROTOCOL_FAMILY">pf</a>,
    <a href="socat.html#OPTION_CONNECT_TIMEOUT">connect-timeout</a>,
    <a href="socat.html#OPTION_SOURCEPORT">sourceport</a>,
-   <a href="socat.html#OPTION_RETRY">retry</a><br>
+   <a href="socat.html#OPTION_RETRY">retry</a><br/>
    See also:
    <a href="socat.html#ADDRESS_OPENSSL_LISTEN">OPENSSL-LISTEN</a>,
    <a href="socat.html#ADDRESS_TCP_CONNECT">TCP</a>
-<a name="ADDRESS_OPENSSL_LISTEN"></a><p><dt><strong><strong><code>OPENSSL-LISTEN:&lt;port&gt;</code></strong></strong><dd>
+<a name="ADDRESS_OPENSSL_LISTEN"></a><dt ><strong><strong ><code >OPENSSL-LISTEN:&lt;port&gt;</code></strong></strong></dt>
    Listens on tcp &lt;port&gt; [<a href="socat.html#TYPE_TCP_SERVICE">TCP service</a>].
    The IP version is 4 or the one specified with
    <a href="socat.html#OPTION_PROTOCOL_FAMILY">pf</a>. When a
-   connection is accepted, this address behaves as SSL server.<br>
-   Note: You probably want to use the <a href="socat.html#OPTION_OPENSSL_CERTIFICATE">certificate</a> option with this address.<br>
+   connection is accepted, this address behaves as SSL server.<br/>
+   Note: You probably want to use the <a href="socat.html#OPTION_OPENSSL_CERTIFICATE">certificate</a> option with this address.<br/>
    NOTE: The client certificate is only checked for validity against
    <a href="socat.html#OPTION_OPENSSL_CAFILE">cafile</a> or <a href="socat.html#OPTION_OPENSSL_CAPATH">capath</a>,
-   but not for match with the client's name or its IP address!<br>
-   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP4">IP4</a>,<a href="socat.html#GROUP_IP6">IP6</a>,<a href="socat.html#GROUP_TCP">TCP</a>,<a href="socat.html#GROUP_LISTEN">LISTEN</a>,<a href="socat.html#GROUP_OPENSSL">OPENSSL</a>,<a href="socat.html#GROUP_CHILD">CHILD</a>,<a href="socat.html#GROUP_RANGE">RANGE</a>,<a href="socat.html#GROUP_RETRY">RETRY</a> <br>
+   but not for match with the client's name or its IP address!<br/>
+   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP4">IP4</a>,<a href="socat.html#GROUP_IP6">IP6</a>,<a href="socat.html#GROUP_TCP">TCP</a>,<a href="socat.html#GROUP_LISTEN">LISTEN</a>,<a href="socat.html#GROUP_OPENSSL">OPENSSL</a>,<a href="socat.html#GROUP_CHILD">CHILD</a>,<a href="socat.html#GROUP_RANGE">RANGE</a>,<a href="socat.html#GROUP_RETRY">RETRY</a> <br/>
    Useful options:
    <a href="socat.html#OPTION_PROTOCOL_FAMILY">pf</a>,
    <a href="socat.html#OPTION_OPENSSL_CIPHERLIST">cipher</a>,
@@ -565,51 +578,51 @@
    <a href="socat.html#OPTION_TCPWRAPPERS">tcpwrap</a>,
    <a href="socat.html#OPTION_SUBSTUSER">su</a>,
    <a href="socat.html#OPTION_REUSEADDR">reuseaddr</a>,
-   <a href="socat.html#OPTION_RETRY">retry</a><br>
+   <a href="socat.html#OPTION_RETRY">retry</a><br/>
    See also:
    <a href="socat.html#ADDRESS_OPENSSL_CONNECT">OPENSSL</a>,
    <a href="socat.html#ADDRESS_TCP_LISTEN">TCP-LISTEN</a>
-<a name="ADDRESS_NAMED_PIPE"></a><p><dt><strong><strong><code>PIPE:&lt;filename&gt;</code></strong></strong><dd>
+<a name="ADDRESS_NAMED_PIPE"></a><dt ><strong><strong ><code >PIPE:&lt;filename&gt;</code></strong></strong></dt>
    If <a href="socat.html#TYPE_FILENAME">&lt;filename&gt;</a> already exists, it is opened.
    If it does not exist, a named pipe is created and opened. Beginning with
    socat version 1.4.3, the named pipe is removed when the address is closed
-   (but see option <a href="socat.html#OPTION_UNLINK_CLOSE">unlink-close</a><br>
+   (but see option <a href="socat.html#OPTION_UNLINK_CLOSE">unlink-close</a><br/>
    Note: When a pipe is used for both reading and writing, it works
-   as echo service.<br>
+   as echo service.<br/>
    Note: When a pipe is used for both reading and writing, and socat tries
    to write more bytes than the pipe can buffer (Linux 2.4: 2048 bytes), socat
    might block. Consider using socat option, e.g., 
-<code>-b 2048</code>
- <br>
-   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_NAMED">NAMED</a>,<a href="socat.html#GROUP_OPEN">OPEN</a> <br>
+<code >-b 2048</code>
+ <br/>
+   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_NAMED">NAMED</a>,<a href="socat.html#GROUP_OPEN">OPEN</a> <br/>
    Useful options:
    <a href="socat.html#OPTION_RDONLY">rdonly</a>,
    <a href="socat.html#OPTION_NONBLOCK">nonblock</a>,
    <a href="socat.html#OPTION_GROUP">group</a>,
    <a href="socat.html#OPTION_USER">user</a>,
    <a href="socat.html#OPTION_MODE">mode</a>,
-   <a href="socat.html#OPTION_UNLINK_EARLY">unlink-early</a><br>
+   <a href="socat.html#OPTION_UNLINK_EARLY">unlink-early</a><br/>
    See also: <a href="socat.html#ADDRESS_UNNAMED_PIPE">unnamed pipe</a>
-<a name="ADDRESS_UNNAMED_PIPE"></a><p><dt><strong><strong><code>PIPE</code></strong></strong><dd>
+<a name="ADDRESS_UNNAMED_PIPE"></a><dt ><strong><strong ><code >PIPE</code></strong></strong></dt>
    Creates an unnamed pipe and uses it for reading and writing. It works as an
    echo, because everything written 
-   to it appeares immediately as read data.<br>
+   to it appeares immediately as read data.<br/>
    Note: When socat tries to write more bytes than the pipe can queue (Linux
    2.4: 2048 bytes), socat might block. Consider, e.g., using
    option 
-<code>-b 2048</code>
- <br>
-   Option groups: <a href="socat.html#GROUP_FD">FD</a> <br>
+<code >-b 2048</code>
+ <br/>
+   Option groups: <a href="socat.html#GROUP_FD">FD</a> <br/>
    See also: <a href="socat.html#ADDRESS_NAMED_PIPE">named pipe</a>
-<a name="ADDRESS_PROXY_CONNECT"></a><p><dt><strong><strong><code>PROXY:&lt;proxy&gt;:&lt;hostname&gt;:&lt;port&gt;</code></strong></strong><dd>
+<a name="ADDRESS_PROXY_CONNECT"></a><dt ><strong><strong ><code >PROXY:&lt;proxy&gt;:&lt;hostname&gt;:&lt;port&gt;</code></strong></strong></dt>
    Connects to an HTTP proxy server on port 8080 using TCP/IP  version 4 or 6
    depending on address specification, name resolution, or option
    <a href="socat.html#OPTION_PROTOCOL_FAMILY">pf</a>, and sends a CONNECT
    request for hostname:port. If the proxy grants access and succeeds to
    connect to the target, data transfer between socat and the target can
    start. Note that the traffic need not be HTTP but can be an arbitrary
-   protocol. <br>
-   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP4">IP4</a>,<a href="socat.html#GROUP_IP6">IP6</a>,<a href="socat.html#GROUP_TCP">TCP</a>,<a href="socat.html#GROUP_HTTP">HTTP</a>,<a href="socat.html#GROUP_RETRY">RETRY</a> <br>
+   protocol. <br/>
+   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP4">IP4</a>,<a href="socat.html#GROUP_IP6">IP6</a>,<a href="socat.html#GROUP_TCP">TCP</a>,<a href="socat.html#GROUP_HTTP">HTTP</a>,<a href="socat.html#GROUP_RETRY">RETRY</a> <br/>
    Useful options:
    <a href="socat.html#OPTION_PROXYPORT">proxyport</a>,
    <a href="socat.html#OPTION_IGNORECR">ignorecr</a>,
@@ -620,43 +633,43 @@
    <a href="socat.html#OPTION_CONNECT_TIMEOUT">connect-timeout</a>,
    <a href="socat.html#OPTION_MSS">mss</a>,
    <a href="socat.html#OPTION_SOURCEPORT">sourceport</a>,
-   <a href="socat.html#OPTION_RETRY">retry</a> <br>
+   <a href="socat.html#OPTION_RETRY">retry</a> <br/>
    See also: <a href="socat.html#ADDRESS_SOCKS4">SOCKS</a>, <a href="socat.html#ADDRESS_TCP_CONNECT">TCP</a>
-<a name="ADDRESS_PTY"></a><p><dt><strong><strong><code>PTY</code></strong></strong><dd>
+<a name="ADDRESS_PTY"></a><dt ><strong><strong ><code >PTY</code></strong></strong></dt>
    Generates a pseudo terminal (pty) and uses its master side. Another process
    may open the pty's slave side using it like a serial line or terminal.
    (<a href="socat.html#EXAMPLE_ADDRESS_PTY">example</a>). If
    both the ptmx and the openpty mechanisms are available, ptmx is used
-   (POSIX).<br>
-   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_NAMED">NAMED</a>,<a href="socat.html#GROUP_PTY">PTY</a>,<a href="socat.html#GROUP_TERMIOS">TERMIOS</a> <br>
+   (POSIX).<br/>
+   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_NAMED">NAMED</a>,<a href="socat.html#GROUP_PTY">PTY</a>,<a href="socat.html#GROUP_TERMIOS">TERMIOS</a> <br/>
    Useful options:
    <a href="socat.html#OPTION_SYMBOLIC_LINK">link</a>,
    <a href="socat.html#OPTION_OPENPTY">openpty</a>,
    <a href="socat.html#OPTION_PTY_WAIT_SLAVE">wait-slave</a>,
    <a href="socat.html#OPTION_MODE">mode</a>,
    <a href="socat.html#OPTION_USER">user</a>,
-   <a href="socat.html#OPTION_GROUP">group</a><br>
+   <a href="socat.html#OPTION_GROUP">group</a><br/>
    See also:
    <a href="socat.html#ADDRESS_UNIX_LISTEN">UNIX-LISTEN</a>,
    <a href="socat.html#ADDRESS_NAMED_PIPE">PIPE</a>,
    <a href="socat.html#ADDRESS_EXEC">EXEC</a>, <a href="socat.html#ADDRESS_SYSTEM">SYSTEM</a>
-<a name="ADDRESS_READLINE"></a><p><dt><strong><strong><code>READLINE</code></strong></strong><dd>
+<a name="ADDRESS_READLINE"></a><dt ><strong><strong ><code >READLINE</code></strong></strong></dt>
    Uses GNU readline and history on stdio to allow editing and reusing input
    lines (<a href="socat.html#EXAMPLE_ADDRESS_READLINE">example</a>). This requires the GNU readline and 
    history libraries. Note that stdio should be a (pseudo) terminal device,
-   otherwise readline does not seem to work.<br>
-   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_READLINE">READLINE</a>,<a href="socat.html#GROUP_TERMIOS">TERMIOS</a> <br>
+   otherwise readline does not seem to work.<br/>
+   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_READLINE">READLINE</a>,<a href="socat.html#GROUP_TERMIOS">TERMIOS</a> <br/>
    Useful options:
    <a href="socat.html#OPTION_HISTORY">history</a>,
-   <a href="socat.html#OPTION_NOECHO">noecho</a><br>
+   <a href="socat.html#OPTION_NOECHO">noecho</a><br/>
    See also:
    <a href="socat.html#ADDRESS_STDIO">STDIO</a>
-<a name="ADDRESS_SCTP_CONNECT"></a><p><dt><strong><strong><code>SCTP-CONNECT:&lt;host&gt;:&lt;port&gt;</code></strong></strong><dd>
+<a name="ADDRESS_SCTP_CONNECT"></a><dt ><strong><strong ><code >SCTP-CONNECT:&lt;host&gt;:&lt;port&gt;</code></strong></strong></dt>
    Establishes an SCTP stream connection to the specified &lt;host&gt; [<a href="socat.html#TYPE_IP_ADDRESS">IP
    address</a>] and &lt;port&gt; [<a href="socat.html#TYPE_TCP_SERVICE">TCP service</a>]
    using IP version 4 or 6 depending on address specification, name
-   resolution, or option <a href="socat.html#OPTION_PROTOCOL_FAMILY">pf</a>.<br>
-   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP4">IP4</a>,<a href="socat.html#GROUP_IP6">IP6</a>,<a href="socat.html#GROUP_SCTP">SCTP</a>,<a href="socat.html#GROUP_CHILD">CHILD</a>,<a href="socat.html#GROUP_RETRY">RETRY</a> <br>
+   resolution, or option <a href="socat.html#OPTION_PROTOCOL_FAMILY">pf</a>.<br/>
+   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP4">IP4</a>,<a href="socat.html#GROUP_IP6">IP6</a>,<a href="socat.html#GROUP_SCTP">SCTP</a>,<a href="socat.html#GROUP_CHILD">CHILD</a>,<a href="socat.html#GROUP_RETRY">RETRY</a> <br/>
    Useful options:
    <a href="socat.html#OPTION_BIND">bind</a>,
    <a href="socat.html#OPTION_PROTOCOL_FAMILY">pf</a>,
@@ -668,26 +681,26 @@
    <a href="socat.html#OPTION_NONBLOCK">nonblock</a>,
    <a href="socat.html#OPTION_SOURCEPORT">sourceport</a>,
    <a href="socat.html#OPTION_RETRY">retry</a>,
-   <a href="socat.html#OPTION_READBYTES">readbytes</a><br>
+   <a href="socat.html#OPTION_READBYTES">readbytes</a><br/>
    See also:
    <a href="socat.html#ADDRESS_SCTP4_CONNECT">SCTP4-CONNECT</a>,
    <a href="socat.html#ADDRESS_SCTP6_CONNECT">SCTP6-CONNECT</a>,
    <a href="socat.html#ADDRESS_SCTP_LISTEN">SCTP-LISTEN</a>,
    <a href="socat.html#ADDRESS_TCP_CONNECT">TCP-CONNECT</a>
-<a name="ADDRESS_SCTP4_CONNECT"></a><p><dt><strong><strong><code>SCTP4-CONNECT:&lt;host&gt;:&lt;port&gt;</code></strong></strong><dd>
-   Like <a href="socat.html#ADDRESS_SCTP_CONNECT">SCTP-CONNECT</a>, but only supports IPv4 protocol.<br>
-   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP4">IP4</a>,<a href="socat.html#GROUP_SCTP">SCTP</a>,<a href="socat.html#GROUP_CHILD">CHILD</a>,<a href="socat.html#GROUP_RETRY">RETRY</a> <br>
-<a name="ADDRESS_SCTP6_CONNECT"></a><p><dt><strong><strong><code>SCTP6-CONNECT:&lt;host&gt;:&lt;port&gt;</code></strong></strong><dd>
-   Like <a href="socat.html#ADDRESS_SCTP_CONNECT">SCTP-CONNECT</a>, but only supports IPv6 protocol.<br>
-   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP6">IP6</a>,<a href="socat.html#GROUP_SCTP">SCTP</a>,<a href="socat.html#GROUP_CHILD">CHILD</a>,<a href="socat.html#GROUP_RETRY">RETRY</a> <br>
-<a name="ADDRESS_SCTP_LISTEN"></a><p><dt><strong><strong><code>SCTP-LISTEN:&lt;port&gt;</code></strong></strong><dd>
+<a name="ADDRESS_SCTP4_CONNECT"></a><dt ><strong><strong ><code >SCTP4-CONNECT:&lt;host&gt;:&lt;port&gt;</code></strong></strong></dt>
+   Like <a href="socat.html#ADDRESS_SCTP_CONNECT">SCTP-CONNECT</a>, but only supports IPv4 protocol.<br/>
+   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP4">IP4</a>,<a href="socat.html#GROUP_SCTP">SCTP</a>,<a href="socat.html#GROUP_CHILD">CHILD</a>,<a href="socat.html#GROUP_RETRY">RETRY</a> <br/>
+<a name="ADDRESS_SCTP6_CONNECT"></a><dt ><strong><strong ><code >SCTP6-CONNECT:&lt;host&gt;:&lt;port&gt;</code></strong></strong></dt>
+   Like <a href="socat.html#ADDRESS_SCTP_CONNECT">SCTP-CONNECT</a>, but only supports IPv6 protocol.<br/>
+   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP6">IP6</a>,<a href="socat.html#GROUP_SCTP">SCTP</a>,<a href="socat.html#GROUP_CHILD">CHILD</a>,<a href="socat.html#GROUP_RETRY">RETRY</a> <br/>
+<a name="ADDRESS_SCTP_LISTEN"></a><dt ><strong><strong ><code >SCTP-LISTEN:&lt;port&gt;</code></strong></strong></dt>
    Listens on &lt;port&gt; [<a href="socat.html#TYPE_TCP_SERVICE">TCP service</a>] and accepts an
    SCTP connection. The IP version is 4 or the one specified with
    address option <a href="socat.html#OPTION_PROTOCOL_FAMILY">pf</a>, socat option
    (<a href="socat.html#option_4">-4</a>, <a href="socat.html#option_6">-6</a>), or environment variable <a href="socat.html#ENV_SOCAT_DEFAULT_LISTEN_IP">SOCAT_DEFAULT_LISTEN_IP</a>.
    Note that opening
-   this address usually blocks until a client connects.<br>
-   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_LISTEN">LISTEN</a>,<a href="socat.html#GROUP_CHILD">CHILD</a>,<a href="socat.html#GROUP_RANGE">RANGE</a>,<a href="socat.html#GROUP_IP4">IP4</a>,<a href="socat.html#GROUP_IP6">IP6</a>,<a href="socat.html#GROUP_SCTP">SCTP</a>,<a href="socat.html#GROUP_RETRY">RETRY</a> <br>
+   this address usually blocks until a client connects.<br/>
+   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_LISTEN">LISTEN</a>,<a href="socat.html#GROUP_CHILD">CHILD</a>,<a href="socat.html#GROUP_RANGE">RANGE</a>,<a href="socat.html#GROUP_IP4">IP4</a>,<a href="socat.html#GROUP_IP6">IP6</a>,<a href="socat.html#GROUP_SCTP">SCTP</a>,<a href="socat.html#GROUP_RETRY">RETRY</a> <br/>
    Useful options:
    <a href="socat.html#OPTION_CRNL">crnl</a>,
    <a href="socat.html#OPTION_FORK">fork</a>,
@@ -702,86 +715,86 @@
    <a href="socat.html#OPTION_SUBSTUSER">su</a>,
    <a href="socat.html#OPTION_REUSEADDR">reuseaddr</a>,
    <a href="socat.html#OPTION_RETRY">retry</a>,
-   <a href="socat.html#OPTION_COOL_WRITE">cool-write</a><br>
+   <a href="socat.html#OPTION_COOL_WRITE">cool-write</a><br/>
    See also:
    <a href="socat.html#ADDRESS_SCTP4_LISTEN">SCTP4-LISTEN</a>,
    <a href="socat.html#ADDRESS_SCTP6_LISTEN">SCTP6-LISTEN</a>,
    <a href="socat.html#ADDRESS_TCP_LISTEN">TCP-LISTEN</a>,
    <a href="socat.html#ADDRESS_SCTP_CONNECT">SCTP-CONNECT</a>
-<a name="ADDRESS_SCTP4_LISTEN"></a><p><dt><strong><strong><code>SCTP4-LISTEN:&lt;port&gt;</code></strong></strong><dd>
+<a name="ADDRESS_SCTP4_LISTEN"></a><dt ><strong><strong ><code >SCTP4-LISTEN:&lt;port&gt;</code></strong></strong></dt>
    Like <a href="socat.html#ADDRESS_SCTP_LISTEN">SCTP-LISTEN</a>, but only supports IPv4
-   protocol.<br> 
-   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_LISTEN">LISTEN</a>,<a href="socat.html#GROUP_CHILD">CHILD</a>,<a href="socat.html#GROUP_RANGE">RANGE</a>,<a href="socat.html#GROUP_IP4">IP4</a>,<a href="socat.html#GROUP_SCTP">SCTP</a>,<a href="socat.html#GROUP_RETRY">RETRY</a> <br>
-<a name="ADDRESS_SCTP6_LISTEN"></a><p><dt><strong><strong><code>SCTP6-LISTEN:&lt;port&gt;</code></strong></strong><dd>
+   protocol.<br/> 
+   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_LISTEN">LISTEN</a>,<a href="socat.html#GROUP_CHILD">CHILD</a>,<a href="socat.html#GROUP_RANGE">RANGE</a>,<a href="socat.html#GROUP_IP4">IP4</a>,<a href="socat.html#GROUP_SCTP">SCTP</a>,<a href="socat.html#GROUP_RETRY">RETRY</a> <br/>
+<a name="ADDRESS_SCTP6_LISTEN"></a><dt ><strong><strong ><code >SCTP6-LISTEN:&lt;port&gt;</code></strong></strong></dt>
    Like <a href="socat.html#ADDRESS_SCTP_LISTEN">SCTP-LISTEN</a>, but only supports IPv6
-   protocol.<br> 
-   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_LISTEN">LISTEN</a>,<a href="socat.html#GROUP_CHILD">CHILD</a>,<a href="socat.html#GROUP_RANGE">RANGE</a>,<a href="socat.html#GROUP_IP6">IP6</a>,<a href="socat.html#GROUP_SCTP">SCTP</a>,<a href="socat.html#GROUP_RETRY">RETRY</a> <br>
-<a name="ADDRESS_SOCKET_CONNECT"></a><p><dt><strong><strong><code>SOCKET-CONNECT:&lt;domain&gt;:&lt;protocol&gt;:&lt;remote-address&gt;</code></strong></strong><dd>
+   protocol.<br/> 
+   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_LISTEN">LISTEN</a>,<a href="socat.html#GROUP_CHILD">CHILD</a>,<a href="socat.html#GROUP_RANGE">RANGE</a>,<a href="socat.html#GROUP_IP6">IP6</a>,<a href="socat.html#GROUP_SCTP">SCTP</a>,<a href="socat.html#GROUP_RETRY">RETRY</a> <br/>
+<a name="ADDRESS_SOCKET_CONNECT"></a><dt ><strong><strong ><code >SOCKET-CONNECT:&lt;domain&gt;:&lt;protocol&gt;:&lt;remote-address&gt;</code></strong></strong></dt>
    Creates a stream socket using the first and second given socket parameters
-   and <code>SOCK_STREAM</code> (see man socket(2)) and connects to the remote-address.
+   and <code >SOCK_STREAM</code> (see man socket(2)) and connects to the remote-address.
    The two socket parameters have to be specified by <a href="socat.html#TYPE_INT">int</a>
    numbers. Consult your OS documentation and include files to find the
    appropriate values. The remote-address must be the <a href="socat.html#TYPE_DATA">data</a>
    representation of a sockaddr structure without sa_family and (BSD) sa_len
-   components.<br>
+   components.<br/>
    Please note that you can - beyond the options of the specified groups - also
    use options of higher level protocols when you apply socat option
-   <a href="socat.html#option_g">-g</a>.<br>
-   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_CHILD">CHILD</a>,<a href="socat.html#GROUP_RETRY">RETRY</a><br>
+   <a href="socat.html#option_g">-g</a>.<br/>
+   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_CHILD">CHILD</a>,<a href="socat.html#GROUP_RETRY">RETRY</a><br/>
    Useful options:
    <a href="socat.html#OPTION_BIND">bind</a>,
    <a href="socat.html#OPTION_SETSOCKOPT_INT">setsockopt-int</a>,
    <a href="socat.html#OPTION_SETSOCKOPT_BIN">setsockopt-bin</a>,
    <a href="socat.html#OPTION_SETSOCKOPT_STRING">setsockopt-string</a>
-   <br>
+   <br/>
    See also:
    <a href="socat.html#ADDRESS_TCP_CONNECT">TCP</a>,
    <a href="socat.html#ADDRESS_UDP_CONNECT">UDP-CONNECT</a>,
    <a href="socat.html#ADDRESS_UNIX_CONNECT">UNIX-CONNECT</a>,
    <a href="socat.html#ADDRESS_SOCKET_LISTEN">SOCKET-LISTEN</a>,
    <a href="socat.html#ADDRESS_SOCKET_SENDTO">SOCKET-SENDTO</a>
-<a name="ADDRESS_SOCKET_DATAGRAM"></a><p><dt><strong><strong><code>SOCKET-DATAGRAM:&lt;domain&gt;:&lt;type&gt;:&lt;protocol&gt;:&lt;remote-address&gt;</code></strong></strong><dd>
+<a name="ADDRESS_SOCKET_DATAGRAM"></a><dt ><strong><strong ><code >SOCKET-DATAGRAM:&lt;domain&gt;:&lt;type&gt;:&lt;protocol&gt;:&lt;remote-address&gt;</code></strong></strong></dt>
    Creates a datagram socket using the first three given socket parameters (see
    man socket(2)) and sends outgoing data to the remote-address. The three
    socket parameters have to be specified by <a href="socat.html#TYPE_INT">int</a>
    numbers. Consult your OS documentation and include files to find the
    appropriate values. The remote-address must be the <a href="socat.html#TYPE_DATA">data</a>
    representation of a sockaddr structure without sa_family and (BSD) sa_len
-   components.<br>
+   components.<br/>
    Please note that you can - beyond the options of the specified groups - also
    use options of higher level protocols when you apply socat option
-   <a href="socat.html#option_g">-g</a>.<br>
-   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_RANGE">RANGE</a><br>
+   <a href="socat.html#option_g">-g</a>.<br/>
+   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_RANGE">RANGE</a><br/>
    Useful options:
    <a href="socat.html#OPTION_BIND">bind</a>,
    <a href="socat.html#OPTION_RANGE">range</a>,
    <a href="socat.html#OPTION_SETSOCKOPT_INT">setsockopt-int</a>,
    <a href="socat.html#OPTION_SETSOCKOPT_BIN">setsockopt-bin</a>,
    <a href="socat.html#OPTION_SETSOCKOPT_STRING">setsockopt-string</a>
-   <br>
+   <br/>
    See also:
    <a href="socat.html#ADDRESS_UDP_DATAGRAM">UDP-DATAGRAM</a>,
    <a href="socat.html#ADDRESS_IP_DATAGRAM">IP-DATAGRAM</a>,
    <a href="socat.html#ADDRESS_SOCKET_SENDTO">SOCKET-SENDTO</a>,
    <a href="socat.html#ADDRESS_SOCKET_RECV">SOCKET-RECV</a>,
    <a href="socat.html#ADDRESS_SOCKET_RECVFROM">SOCKET-RECVFROM</a>
-<a name="ADDRESS_SOCKET_LISTEN"></a><p><dt><strong><strong><code>SOCKET-LISTEN:&lt;domain&gt;:&lt;protocol&gt;:&lt;local-address&gt;</code></strong></strong><dd>
+<a name="ADDRESS_SOCKET_LISTEN"></a><dt ><strong><strong ><code >SOCKET-LISTEN:&lt;domain&gt;:&lt;protocol&gt;:&lt;local-address&gt;</code></strong></strong></dt>
    Creates a stream socket using the first and second given socket parameters
-   and <code>SOCK_STREAM</code> (see man socket(2)) and waits for incoming connections
+   and <code >SOCK_STREAM</code> (see man socket(2)) and waits for incoming connections
    on local-address. The two socket parameters have to be specified by
    <a href="socat.html#TYPE_INT">int</a> numbers. Consult your OS documentation and include files
    to find the appropriate values. The local-address must be the
    <a href="socat.html#TYPE_DATA">data</a> representation of a sockaddr structure without
-   sa_family and (BSD) sa_len components.<br>
+   sa_family and (BSD) sa_len components.<br/>
    Please note that you can - beyond the options of the specified groups - also
    use options of higher level protocols when you apply socat option
-   <a href="socat.html#option_g">-g</a>.<br>
-   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_LISTEN">LISTEN</a>,<a href="socat.html#GROUP_RANGE">RANGE</a>,<a href="socat.html#GROUP_CHILD">CHILD</a>,<a href="socat.html#GROUP_RETRY">RETRY</a><br>
+   <a href="socat.html#option_g">-g</a>.<br/>
+   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_LISTEN">LISTEN</a>,<a href="socat.html#GROUP_RANGE">RANGE</a>,<a href="socat.html#GROUP_CHILD">CHILD</a>,<a href="socat.html#GROUP_RETRY">RETRY</a><br/>
    Useful options:
    <a href="socat.html#OPTION_SETSOCKOPT_INT">setsockopt-int</a>,
    <a href="socat.html#OPTION_SETSOCKOPT_BIN">setsockopt-bin</a>,
    <a href="socat.html#OPTION_SETSOCKOPT_STRING">setsockopt-string</a>
-   <br>
+   <br/>
    See also:
    <a href="socat.html#ADDRESS_TCP_LISTEN">TCP</a>,
    <a href="socat.html#ADDRESS_UDP_LISTEN">UDP-CONNECT</a>,
@@ -789,20 +802,20 @@
    <a href="socat.html#ADDRESS_SOCKET_CONNECT">SOCKET-LISTEN</a>,
    <a href="socat.html#ADDRESS_SOCKET_RECVFROM">SOCKET-SENDTO</a>,
    <a href="socat.html#ADDRESS_SOCKET_RECV">SOCKET-SENDTO</a>
-<a name="ADDRESS_SOCKET_RECV"></a><p><dt><strong><strong><code>SOCKET-RECV:&lt;domain&gt;:&lt;type&gt;:&lt;protocol&gt;:&lt;local-address&gt;</code></strong></strong><dd>
+<a name="ADDRESS_SOCKET_RECV"></a><dt ><strong><strong ><code >SOCKET-RECV:&lt;domain&gt;:&lt;type&gt;:&lt;protocol&gt;:&lt;local-address&gt;</code></strong></strong></dt>
    Creates a socket using the three given socket parameters (see man socket(2))
    and binds it to &lt;local-address&gt;. Receives arriving data. The three
    parameters have to be specified by <a href="socat.html#TYPE_INT">int</a> numbers. Consult your
    OS documentation and include files to find the appropriate values. The
    local-address must be the <a href="socat.html#TYPE_DATA">data</a> representation of a sockaddr
-   structure without sa_family and (BSD) sa_len components.<br>
-   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_RANGE">RANGE</a><br>
+   structure without sa_family and (BSD) sa_len components.<br/>
+   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_RANGE">RANGE</a><br/>
    Useful options:
    <a href="socat.html#OPTION_RANGE">range</a>,
    <a href="socat.html#OPTION_SETSOCKOPT_INT">setsockopt-int</a>,
    <a href="socat.html#OPTION_SETSOCKOPT_BIN">setsockopt-bin</a>,
    <a href="socat.html#OPTION_SETSOCKOPT_STRING">setsockopt-string</a>
-   <br>
+   <br/>
    See also:
    <a href="socat.html#ADDRESS_UDP_RECV">UDP-RECV</a>,
    <a href="socat.html#ADDRESS_IP_RECV">IP-RECV</a>,
@@ -810,22 +823,22 @@
    <a href="socat.html#ADDRESS_SOCKET_DATAGRAM">SOCKET-DATAGRAM</a>,
    <a href="socat.html#ADDRESS_SOCKET_SENDTO">SOCKET-SENDTO</a>,
    <a href="socat.html#ADDRESS_SOCKET_RECVFROM">SOCKET-RECVFROM</a>
-<a name="ADDRESS_SOCKET_RECVFROM"></a><p><dt><strong><strong><code>SOCKET-RECVFROM:&lt;domain&gt;:&lt;type&gt;:&lt;protocol&gt;:&lt;local-address&gt;</code></strong></strong><dd>
+<a name="ADDRESS_SOCKET_RECVFROM"></a><dt ><strong><strong ><code >SOCKET-RECVFROM:&lt;domain&gt;:&lt;type&gt;:&lt;protocol&gt;:&lt;local-address&gt;</code></strong></strong></dt>
    Creates a socket using the three given socket parameters (see man socket(2))
    and binds it to &lt;local-address&gt;. Receives arriving data and sends replies
    back to the sender. The first three parameters have to be specified as
    <a href="socat.html#TYPE_INT">int</a> numbers. Consult your OS documentation and include files
    to find the appropriate values. The local-address must be the
    <a href="socat.html#TYPE_DATA">data</a> representation of a sockaddr structure without
-   sa_family and (BSD) sa_len components.<br>
-   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_CHILD">CHILD</a>,<a href="socat.html#GROUP_RANGE">RANGE</a><br>
+   sa_family and (BSD) sa_len components.<br/>
+   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_CHILD">CHILD</a>,<a href="socat.html#GROUP_RANGE">RANGE</a><br/>
    Useful options:
    <a href="socat.html#OPTION_FORK">fork</a>,
    <a href="socat.html#OPTION_RANGE">range</a>,
    <a href="socat.html#OPTION_SETSOCKOPT_INT">setsockopt-int</a>,
    <a href="socat.html#OPTION_SETSOCKOPT_BIN">setsockopt-bin</a>,
    <a href="socat.html#OPTION_SETSOCKOPT_STRING">setsockopt-string</a>
-   <br>
+   <br/>
    See also:
    <a href="socat.html#ADDRESS_UDP_RECVFROM">UDP-RECVFROM</a>,
    <a href="socat.html#ADDRESS_IP_RECVFROM">IP-RECVFROM</a>,
@@ -833,21 +846,21 @@
    <a href="socat.html#ADDRESS_SOCKET_DATAGRAM">SOCKET-DATAGRAM</a>,
    <a href="socat.html#ADDRESS_SOCKET_SENDTO">SOCKET-SENDTO</a>,
    <a href="socat.html#ADDRESS_SOCKET_RECV">SOCKET-RECV</a>
-<a name="ADDRESS_SOCKET_SENDTO"></a><p><dt><strong><strong><code>SOCKET-SENDTO:&lt;domain&gt;:&lt;type&gt;:&lt;protocol&gt;:&lt;remote-address&gt;</code></strong></strong><dd>
+<a name="ADDRESS_SOCKET_SENDTO"></a><dt ><strong><strong ><code >SOCKET-SENDTO:&lt;domain&gt;:&lt;type&gt;:&lt;protocol&gt;:&lt;remote-address&gt;</code></strong></strong></dt>
    Creates a socket using the three given socket parameters (see man
    socket(2)). Sends outgoing data to the given address and receives replies.
    The three parameters have to be specified as <a href="socat.html#TYPE_INT">int</a>
    numbers. Consult your OS documentation and include files to find the
    appropriate values. The remote-address must be the <a href="socat.html#TYPE_DATA">data</a>
    representation of a sockaddr structure without sa_family and (BSD) sa_len
-   components.<br>
-   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a><br>
+   components.<br/>
+   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a><br/>
    Useful options:
    <a href="socat.html#OPTION_BIND">bind</a>,
    <a href="socat.html#OPTION_SETSOCKOPT_INT">setsockopt-int</a>,
    <a href="socat.html#OPTION_SETSOCKOPT_BIN">setsockopt-bin</a>,
    <a href="socat.html#OPTION_SETSOCKOPT_STRING">setsockopt-string</a>
-   <br>
+   <br/>
    See also:
    <a href="socat.html#ADDRESS_UDP_SENDTO">UDP-SENDTO</a>,
    <a href="socat.html#ADDRESS_IP_SENDTO">IP-SENDTO</a>,
@@ -855,58 +868,58 @@
    <a href="socat.html#ADDRESS_SOCKET_DATAGRAM">SOCKET-DATAGRAM</a>,
    <a href="socat.html#ADDRESS_SOCKET_RECV">SOCKET-RECV</a>
    <a href="socat.html#ADDRESS_SOCKET_RECVFROM">SOCKET-RECVFROM</a>
-<a name="ADDRESS_SOCKS4"></a><p><dt><strong><strong><code>SOCKS4:&lt;socks-server&gt;:&lt;host&gt;:&lt;port&gt;</code></strong></strong><dd>
+<a name="ADDRESS_SOCKS4"></a><dt ><strong><strong ><code >SOCKS4:&lt;socks-server&gt;:&lt;host&gt;:&lt;port&gt;</code></strong></strong></dt>
    Connects via &lt;socks-server&gt; [<a href="socat.html#TYPE_IP_ADDRESS">IP address</a>]
    to &lt;host&gt; [<a href="socat.html#TYPE_IPV4_ADDRESS">IPv4 address</a>]
    on &lt;port&gt; [<a href="socat.html#TYPE_TCP_SERVICE">TCP service</a>],
    using socks version 4 protocol over IP version 4 or 6 depending on address specification, name resolution, or option
-   <a href="socat.html#OPTION_PROTOCOL_FAMILY">pf</a> (<a href="socat.html#EXAMPLE_ADDRESS_SOCKS4">example</a>).<br>
-   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP4">IP4</a>,<a href="socat.html#GROUP_IP6">IP6</a>,<a href="socat.html#GROUP_TCP">TCP</a>,<a href="socat.html#GROUP_SOCKS">SOCKS4</a>,<a href="socat.html#GROUP_RETRY">RETRY</a> <br>
+   <a href="socat.html#OPTION_PROTOCOL_FAMILY">pf</a> (<a href="socat.html#EXAMPLE_ADDRESS_SOCKS4">example</a>).<br/>
+   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP4">IP4</a>,<a href="socat.html#GROUP_IP6">IP6</a>,<a href="socat.html#GROUP_TCP">TCP</a>,<a href="socat.html#GROUP_SOCKS">SOCKS4</a>,<a href="socat.html#GROUP_RETRY">RETRY</a> <br/>
    Useful options:
    <a href="socat.html#OPTION_SOCKSUSER">socksuser</a>,
    <a href="socat.html#OPTION_SOCKSPORT">socksport</a>,
    <a href="socat.html#OPTION_SOURCEPORT">sourceport</a>,
    <a href="socat.html#OPTION_PROTOCOL_FAMILY">pf</a>,
-   <a href="socat.html#OPTION_RETRY">retry</a><br>
+   <a href="socat.html#OPTION_RETRY">retry</a><br/>
    See also:
    <a href="socat.html#ADDRESS_SOCKS4A">SOCKS4A</a>,
    <a href="socat.html#ADDRESS_PROXY_CONNECT">PROXY</a>,
    <a href="socat.html#ADDRESS_TCP_CONNECT">TCP</a>
-<a name="ADDRESS_SOCKS4A"></a><p><dt><strong><strong><code>SOCKS4A:&lt;socks-server&gt;:&lt;host&gt;:&lt;port&gt;</code></strong></strong><dd>
+<a name="ADDRESS_SOCKS4A"></a><dt ><strong><strong ><code >SOCKS4A:&lt;socks-server&gt;:&lt;host&gt;:&lt;port&gt;</code></strong></strong></dt>
    like <a href="socat.html#ADDRESS_SOCKS4">SOCKS4</a>, but uses socks protocol version 4a, thus
-   leaving host name resolution to the socks server.<br>
-   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP4">IP4</a>,<a href="socat.html#GROUP_IP6">IP6</a>,<a href="socat.html#GROUP_TCP">TCP</a>,<a href="socat.html#GROUP_SOCKS">SOCKS4</a>,<a href="socat.html#GROUP_RETRY">RETRY</a> <br>
-<a name="ADDRESS_STDERR"></a><p><dt><strong><strong><code>STDERR</code></strong></strong><dd>
-   Uses file descriptor 2.<br>
-   Option groups: <a href="socat.html#GROUP_FD">FD</a> (<a href="socat.html#GROUP_TERMIOS">TERMIOS</a>,<a href="socat.html#GROUP_REG">REG</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>) <br>
+   leaving host name resolution to the socks server.<br/>
+   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP4">IP4</a>,<a href="socat.html#GROUP_IP6">IP6</a>,<a href="socat.html#GROUP_TCP">TCP</a>,<a href="socat.html#GROUP_SOCKS">SOCKS4</a>,<a href="socat.html#GROUP_RETRY">RETRY</a> <br/>
+<a name="ADDRESS_STDERR"></a><dt ><strong><strong ><code >STDERR</code></strong></strong></dt>
+   Uses file descriptor 2.<br/>
+   Option groups: <a href="socat.html#GROUP_FD">FD</a> (<a href="socat.html#GROUP_TERMIOS">TERMIOS</a>,<a href="socat.html#GROUP_REG">REG</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>) <br/>
    See also: <a href="socat.html#ADDRESS_FD">FD</a>
-<a name="ADDRESS_STDIN"></a><p><dt><strong><strong><code>STDIN</code></strong></strong><dd>
-   Uses file descriptor 0.<br>
-   Option groups: <a href="socat.html#GROUP_FD">FD</a> (<a href="socat.html#GROUP_TERMIOS">TERMIOS</a>,<a href="socat.html#GROUP_REG">REG</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>) <br>
+<a name="ADDRESS_STDIN"></a><dt ><strong><strong ><code >STDIN</code></strong></strong></dt>
+   Uses file descriptor 0.<br/>
+   Option groups: <a href="socat.html#GROUP_FD">FD</a> (<a href="socat.html#GROUP_TERMIOS">TERMIOS</a>,<a href="socat.html#GROUP_REG">REG</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>) <br/>
    Useful options:
-   <a href="socat.html#OPTION_READBYTES">readbytes</a><br>
+   <a href="socat.html#OPTION_READBYTES">readbytes</a><br/>
    See also: <a href="socat.html#ADDRESS_FD">FD</a>
-<a name="ADDRESS_STDIO"></a><p><dt><strong><strong><code>STDIO</code></strong></strong><dd>
-   Uses file descriptor 0 for reading, and 1 for writing.<br>
-   Option groups: <a href="socat.html#GROUP_FD">FD</a> (<a href="socat.html#GROUP_TERMIOS">TERMIOS</a>,<a href="socat.html#GROUP_REG">REG</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>) <br>
+<a name="ADDRESS_STDIO"></a><dt ><strong><strong ><code >STDIO</code></strong></strong></dt>
+   Uses file descriptor 0 for reading, and 1 for writing.<br/>
+   Option groups: <a href="socat.html#GROUP_FD">FD</a> (<a href="socat.html#GROUP_TERMIOS">TERMIOS</a>,<a href="socat.html#GROUP_REG">REG</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>) <br/>
    Useful options:
-   <a href="socat.html#OPTION_READBYTES">readbytes</a><br>
+   <a href="socat.html#OPTION_READBYTES">readbytes</a><br/>
    See also: <a href="socat.html#ADDRESS_FD">FD</a>
-<a name="ADDRESS_STDOUT"></a><p><dt><strong><strong><code>STDOUT</code></strong></strong><dd>
-   Uses file descriptor 1.<br>
-   Option groups: <a href="socat.html#GROUP_FD">FD</a> (<a href="socat.html#GROUP_TERMIOS">TERMIOS</a>,<a href="socat.html#GROUP_REG">REG</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>) <br>
+<a name="ADDRESS_STDOUT"></a><dt ><strong><strong ><code >STDOUT</code></strong></strong></dt>
+   Uses file descriptor 1.<br/>
+   Option groups: <a href="socat.html#GROUP_FD">FD</a> (<a href="socat.html#GROUP_TERMIOS">TERMIOS</a>,<a href="socat.html#GROUP_REG">REG</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>) <br/>
    See also: <a href="socat.html#ADDRESS_FD">FD</a>
-<a name="ADDRESS_SYSTEM"></a><p><dt><strong><strong><code>SYSTEM:&lt;shell-command&gt;</code></strong></strong><dd>
+<a name="ADDRESS_SYSTEM"></a><dt ><strong><strong ><code >SYSTEM:&lt;shell-command&gt;</code></strong></strong></dt>
    Forks a sub process that establishes communication with its parent process
    and invokes the specified program with 
-<code>system()</code>
+<code >system()</code>
 . Please note that
    &lt;shell-command&gt; [<a href="socat.html#TYPE_STRING">string</a>] must 
    not contain ',' or "!!", and that shell meta characters may have to be
    protected.
-   After successful program start, <strong>socat</strong> writes data to stdin of the 
-   process and reads from its stdout.<br>
-   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_EXEC">EXEC</a>,<a href="socat.html#GROUP_FORK">FORK</a>,<a href="socat.html#GROUP_TERMIOS">TERMIOS</a> <br>
+   After successful program start, <strong >socat</strong> writes data to stdin of the 
+   process and reads from its stdout.<br/>
+   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_EXEC">EXEC</a>,<a href="socat.html#GROUP_FORK">FORK</a>,<a href="socat.html#GROUP_TERMIOS">TERMIOS</a> <br/>
    Useful options:
    <a href="socat.html#OPTION_PATH">path</a>,
    <a href="socat.html#OPTION_FDIN">fdin</a>,
@@ -921,14 +934,14 @@
    <a href="socat.html#OPTION_SETSID">setsid</a>,
    <a href="socat.html#OPTION_PIPES">pipes</a>,
    <a href="socat.html#OPTION_SIGINT">sigint</a>,
-   <a href="socat.html#OPTION_SIGQUIT">sigquit</a><br>
+   <a href="socat.html#OPTION_SIGQUIT">sigquit</a><br/>
    See also: <a href="socat.html#ADDRESS_EXEC">EXEC</a>
-<a name="ADDRESS_TCP_CONNECT"></a><p><dt><strong><strong><code>TCP:&lt;host&gt;:&lt;port&gt;</code></strong></strong><dd>
+<a name="ADDRESS_TCP_CONNECT"></a><dt ><strong><strong ><code >TCP:&lt;host&gt;:&lt;port&gt;</code></strong></strong></dt>
    Connects to &lt;port&gt; [<a href="socat.html#TYPE_TCP_SERVICE">TCP service</a>] on
    &lt;host&gt; [<a href="socat.html#TYPE_IP_ADDRESS">IP address</a>] using TCP/IP version 4 or 6
    depending on address specification, name resolution, or option
-   <a href="socat.html#OPTION_PROTOCOL_FAMILY">pf</a>.<br> 
-   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP4">IP4</a>,<a href="socat.html#GROUP_IP6">IP6</a>,<a href="socat.html#GROUP_TCP">TCP</a>,<a href="socat.html#GROUP_RETRY">RETRY</a> <br>
+   <a href="socat.html#OPTION_PROTOCOL_FAMILY">pf</a>.<br/> 
+   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP4">IP4</a>,<a href="socat.html#GROUP_IP6">IP6</a>,<a href="socat.html#GROUP_TCP">TCP</a>,<a href="socat.html#GROUP_RETRY">RETRY</a> <br/>
    Useful options:
    <a href="socat.html#OPTION_CRNL">crnl</a>,
    <a href="socat.html#OPTION_BIND">bind</a>,
@@ -941,7 +954,7 @@
    <a href="socat.html#OPTION_NONBLOCK">nonblock</a>,
    <a href="socat.html#OPTION_SOURCEPORT">sourceport</a>,
    <a href="socat.html#OPTION_RETRY">retry</a>,
-   <a href="socat.html#OPTION_READBYTES">readbytes</a><br>
+   <a href="socat.html#OPTION_READBYTES">readbytes</a><br/>
    See also:
    <a href="socat.html#ADDRESS_TCP4_CONNECT">TCP4</a>,
    <a href="socat.html#ADDRESS_TCP6_CONNECT">TCP6</a>,
@@ -949,20 +962,20 @@
    <a href="socat.html#ADDRESS_UDP_CONNECT">UDP</a>,
    <a href="socat.html#ADDRESS_SCTP_CONNECT">SCTP-CONNECT</a>,
    <a href="socat.html#ADDRESS_UNIX_CONNECT">UNIX-CONNECT</a>
-<a name="ADDRESS_TCP4_CONNECT"></a><p><dt><strong><strong><code>TCP4:&lt;host&gt;:&lt;port&gt;</code></strong></strong><dd>
-   Like <a href="socat.html#ADDRESS_TCP_CONNECT">TCP</a>, but only supports IPv4 protocol (<a href="socat.html#EXAMPLE_ADDRESS_TCP4_CONNECT">example</a>).<br>
-   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP4">IP4</a>,<a href="socat.html#GROUP_TCP">TCP</a>,<a href="socat.html#GROUP_RETRY">RETRY</a> <br>
-<a name="ADDRESS_TCP6_CONNECT"></a><p><dt><strong><strong><code>TCP6:&lt;host&gt;:&lt;port&gt;</code></strong></strong><dd>
-   Like <a href="socat.html#ADDRESS_TCP_CONNECT">TCP</a>, but only supports IPv6 protocol.<br>
-   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP6">IP6</a>,<a href="socat.html#GROUP_TCP">TCP</a>,<a href="socat.html#GROUP_RETRY">RETRY</a> <br>
-<a name="ADDRESS_TCP_LISTEN"></a><p><dt><strong><strong><code>TCP-LISTEN:&lt;port&gt;</code></strong></strong><dd>
+<a name="ADDRESS_TCP4_CONNECT"></a><dt ><strong><strong ><code >TCP4:&lt;host&gt;:&lt;port&gt;</code></strong></strong></dt>
+   Like <a href="socat.html#ADDRESS_TCP_CONNECT">TCP</a>, but only supports IPv4 protocol (<a href="socat.html#EXAMPLE_ADDRESS_TCP4_CONNECT">example</a>).<br/>
+   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP4">IP4</a>,<a href="socat.html#GROUP_TCP">TCP</a>,<a href="socat.html#GROUP_RETRY">RETRY</a> <br/>
+<a name="ADDRESS_TCP6_CONNECT"></a><dt ><strong><strong ><code >TCP6:&lt;host&gt;:&lt;port&gt;</code></strong></strong></dt>
+   Like <a href="socat.html#ADDRESS_TCP_CONNECT">TCP</a>, but only supports IPv6 protocol.<br/>
+   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP6">IP6</a>,<a href="socat.html#GROUP_TCP">TCP</a>,<a href="socat.html#GROUP_RETRY">RETRY</a> <br/>
+<a name="ADDRESS_TCP_LISTEN"></a><dt ><strong><strong ><code >TCP-LISTEN:&lt;port&gt;</code></strong></strong></dt>
    Listens on &lt;port&gt; [<a href="socat.html#TYPE_TCP_SERVICE">TCP service</a>] and accepts a
    TCP/IP connection. The IP version is 4 or the one specified with
    address option <a href="socat.html#OPTION_PROTOCOL_FAMILY">pf</a>, socat option
    (<a href="socat.html#option_4">-4</a>, <a href="socat.html#option_6">-6</a>), or environment variable <a href="socat.html#ENV_SOCAT_DEFAULT_LISTEN_IP">SOCAT_DEFAULT_LISTEN_IP</a>.
    Note that opening
-   this address usually blocks until a client connects.<br>
-   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_LISTEN">LISTEN</a>,<a href="socat.html#GROUP_CHILD">CHILD</a>,<a href="socat.html#GROUP_RANGE">RANGE</a>,<a href="socat.html#GROUP_IP4">IP4</a>,<a href="socat.html#GROUP_IP6">IP6</a>,<a href="socat.html#GROUP_TCP">TCP</a>,<a href="socat.html#GROUP_RETRY">RETRY</a> <br>
+   this address usually blocks until a client connects.<br/>
+   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_LISTEN">LISTEN</a>,<a href="socat.html#GROUP_CHILD">CHILD</a>,<a href="socat.html#GROUP_RANGE">RANGE</a>,<a href="socat.html#GROUP_IP4">IP4</a>,<a href="socat.html#GROUP_IP6">IP6</a>,<a href="socat.html#GROUP_TCP">TCP</a>,<a href="socat.html#GROUP_RETRY">RETRY</a> <br/>
    Useful options:
    <a href="socat.html#OPTION_CRNL">crnl</a>,
    <a href="socat.html#OPTION_FORK">fork</a>,
@@ -976,7 +989,7 @@
    <a href="socat.html#OPTION_SUBSTUSER">su</a>,
    <a href="socat.html#OPTION_REUSEADDR">reuseaddr</a>,
    <a href="socat.html#OPTION_RETRY">retry</a>,
-   <a href="socat.html#OPTION_COOL_WRITE">cool-write</a><br>
+   <a href="socat.html#OPTION_COOL_WRITE">cool-write</a><br/>
    See also:
    <a href="socat.html#ADDRESS_TCP4_LISTEN">TCP4-LISTEN</a>,
    <a href="socat.html#ADDRESS_TCP6_LISTEN">TCP6-LISTEN</a>,
@@ -985,70 +998,70 @@
    <a href="socat.html#ADDRESS_UNIX_LISTEN">UNIX-LISTEN</a>,
    <a href="socat.html#ADDRESS_OPENSSL_LISTEN">OPENSSL-LISTEN</a>,
    <a href="socat.html#ADDRESS_TCP_CONNECT">TCP-CONNECT</a>
-<a name="ADDRESS_TCP4_LISTEN"></a><p><dt><strong><strong><code>TCP4-LISTEN:&lt;port&gt;</code></strong></strong><dd>
+<a name="ADDRESS_TCP4_LISTEN"></a><dt ><strong><strong ><code >TCP4-LISTEN:&lt;port&gt;</code></strong></strong></dt>
    Like <a href="socat.html#ADDRESS_TCP_LISTEN">TCP-LISTEN</a>, but only supports IPv4
-   protocol (<a href="socat.html#EXAMPLE_ADDRESS_TCP4_LISTEN">example</a>).<br> 
-   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_LISTEN">LISTEN</a>,<a href="socat.html#GROUP_CHILD">CHILD</a>,<a href="socat.html#GROUP_RANGE">RANGE</a>,<a href="socat.html#GROUP_IP4">IP4</a>,<a href="socat.html#GROUP_TCP">TCP</a>,<a href="socat.html#GROUP_RETRY">RETRY</a> <br>
-<a name="ADDRESS_TCP6_LISTEN"></a><p><dt><strong><strong><code>TCP6-LISTEN:&lt;port&gt;</code></strong></strong><dd>
+   protocol (<a href="socat.html#EXAMPLE_ADDRESS_TCP4_LISTEN">example</a>).<br/> 
+   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_LISTEN">LISTEN</a>,<a href="socat.html#GROUP_CHILD">CHILD</a>,<a href="socat.html#GROUP_RANGE">RANGE</a>,<a href="socat.html#GROUP_IP4">IP4</a>,<a href="socat.html#GROUP_TCP">TCP</a>,<a href="socat.html#GROUP_RETRY">RETRY</a> <br/>
+<a name="ADDRESS_TCP6_LISTEN"></a><dt ><strong><strong ><code >TCP6-LISTEN:&lt;port&gt;</code></strong></strong></dt>
    Like <a href="socat.html#ADDRESS_TCP_LISTEN">TCP-LISTEN</a>, but only supports IPv6
-   protocol.<br>
+   protocol.<br/>
    Additional useful option:
-   <a href="socat.html#OPTION_IPV6_V6ONLY">ipv6only</a><br>
-   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_LISTEN">LISTEN</a>,<a href="socat.html#GROUP_CHILD">CHILD</a>,<a href="socat.html#GROUP_RANGE">RANGE</a>,<a href="socat.html#GROUP_IP6">IP6</a>,<a href="socat.html#GROUP_TCP">TCP</a>,<a href="socat.html#GROUP_RETRY">RETRY</a> <br>
-<a name="ADDRESS_TUN"></a><p><dt><strong><strong><code>TUN[:&lt;if-addr&gt;/&lt;bits&gt;]</code></strong></strong><dd>
+   <a href="socat.html#OPTION_IPV6_V6ONLY">ipv6only</a><br/>
+   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_LISTEN">LISTEN</a>,<a href="socat.html#GROUP_CHILD">CHILD</a>,<a href="socat.html#GROUP_RANGE">RANGE</a>,<a href="socat.html#GROUP_IP6">IP6</a>,<a href="socat.html#GROUP_TCP">TCP</a>,<a href="socat.html#GROUP_RETRY">RETRY</a> <br/>
+<a name="ADDRESS_TUN"></a><dt ><strong><strong ><code >TUN[:&lt;if-addr&gt;/&lt;bits&gt;]</code></strong></strong></dt>
    Creates a Linux TUN/TAP device and optionally assignes it the address and
    netmask given by the parameters. The resulting network interface is almost
    ready for use by other processes; socat serves its "wire side". This address
    requires read and write access to the tunnel cloning device, usually
    
-<code>/dev/net/tun</code>
-, as well as permission to set some <code>ioctl()s</code>.
-   <strong>Option iff-up is required to immediately activate the interface!</strong><br> 
-   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_NAMED">NAMED</a>,<a href="socat.html#GROUP_OPEN">OPEN</a>,<a href="socat.html#GROUP_TUN">TUN</a> <br>
+<code >/dev/net/tun</code>
+, as well as permission to set some <code >ioctl()s</code>.
+   <strong >Option iff-up is required to immediately activate the interface!</strong><br/> 
+   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_NAMED">NAMED</a>,<a href="socat.html#GROUP_OPEN">OPEN</a>,<a href="socat.html#GROUP_TUN">TUN</a> <br/>
    Useful options:
    <a href="socat.html#OPTION_IFF_UP">iff-up</a>,
    <a href="socat.html#OPTION_TUN_DEVICE">tun-device</a>,
    <a href="socat.html#OPTION_TUN_NAME">tun-name</a>,
    <a href="socat.html#OPTION_TUN_TYPE">tun-type</a>,
-   <a href="socat.html#OPTION_IFF_NO_PI">iff-no-pi</a> <br>
+   <a href="socat.html#OPTION_IFF_NO_PI">iff-no-pi</a> <br/>
    See also:
    <a href="socat.html#ADDRESS_IP_RECV">ip-recv</a>
-<a name="ADDRESS_UDP_CONNECT"></a><p><dt><strong><strong><code>UDP:&lt;host&gt;:&lt;port&gt;</code></strong></strong><dd>
+<a name="ADDRESS_UDP_CONNECT"></a><dt ><strong><strong ><code >UDP:&lt;host&gt;:&lt;port&gt;</code></strong></strong></dt>
    Connects to &lt;port&gt; [<a href="socat.html#TYPE_UDP_SERVICE">UDP service</a>] on
    &lt;host&gt; [<a href="socat.html#TYPE_IP_ADDRESS">IP address</a>] using UDP/IP version 4 or 6
    depending on address specification, name resolution, or option
-   <a href="socat.html#OPTION_PROTOCOL_FAMILY">pf</a>.<br>
+   <a href="socat.html#OPTION_PROTOCOL_FAMILY">pf</a>.<br/>
    Please note that,
    due to UDP protocol properties, no real connection is established; data has
    to be sent for `connecting' to the server, and no end-of-file condition can
-   be transported.<br>
-   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP4">IP4</a>,<a href="socat.html#GROUP_IP6">IP6</a> <br>
+   be transported.<br/>
+   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP4">IP4</a>,<a href="socat.html#GROUP_IP6">IP6</a> <br/>
    Useful options:
    <a href="socat.html#OPTION_TTL">ttl</a>,
    <a href="socat.html#OPTION_TOS">tos</a>,
    <a href="socat.html#OPTION_BIND">bind</a>,
    <a href="socat.html#OPTION_SOURCEPORT">sourceport</a>,
-   <a href="socat.html#OPTION_PROTOCOL_FAMILY">pf</a><br>
+   <a href="socat.html#OPTION_PROTOCOL_FAMILY">pf</a><br/>
    See also:
    <a href="socat.html#ADDRESS_UDP4_CONNECT">UDP4</a>,
    <a href="socat.html#ADDRESS_UDP6_CONNECT">UDP6</a>,
    <a href="socat.html#ADDRESS_UDP_LISTEN">UDP-LISTEN</a>,
    <a href="socat.html#ADDRESS_TCP_CONNECT">TCP</a>,
    <a href="socat.html#ADDRESS_IP_SENDTO">IP</a>
-<a name="ADDRESS_UDP4_CONNECT"></a><p><dt><strong><strong><code>UDP4:&lt;host&gt;:&lt;port&gt;</code></strong></strong><dd>
-   Like <a href="socat.html#ADDRESS_UDP_CONNECT">UDP</a>, but only supports IPv4 protocol.<br>
-   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP4">IP4</a> <br>
-<a name="ADDRESS_UDP6_CONNECT"></a><p><dt><strong><strong><code>UDP6:&lt;host&gt;:&lt;port&gt;</code></strong></strong><dd>
-   Like <a href="socat.html#ADDRESS_UDP_CONNECT">UDP</a>, but only supports IPv6 protocol.<br>
-   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP6">IP6</a> <br>
-<a name="ADDRESS_UDP_DATAGRAM"></a><p><dt><strong><strong><code>UDP-DATAGRAM:&lt;address&gt;:&lt;port&gt;</code></strong></strong><dd>
+<a name="ADDRESS_UDP4_CONNECT"></a><dt ><strong><strong ><code >UDP4:&lt;host&gt;:&lt;port&gt;</code></strong></strong></dt>
+   Like <a href="socat.html#ADDRESS_UDP_CONNECT">UDP</a>, but only supports IPv4 protocol.<br/>
+   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP4">IP4</a> <br/>
+<a name="ADDRESS_UDP6_CONNECT"></a><dt ><strong><strong ><code >UDP6:&lt;host&gt;:&lt;port&gt;</code></strong></strong></dt>
+   Like <a href="socat.html#ADDRESS_UDP_CONNECT">UDP</a>, but only supports IPv6 protocol.<br/>
+   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP6">IP6</a> <br/>
+<a name="ADDRESS_UDP_DATAGRAM"></a><dt ><strong><strong ><code >UDP-DATAGRAM:&lt;address&gt;:&lt;port&gt;</code></strong></strong></dt>
    Sends outgoing data to the specified address which may in particular be a
    broadcast or multicast address. Packets arriving on the local socket are
    checked for the correct remote port and if their source addresses match
    <a href="socat.html#OPTION_RANGE">RANGE</a> or <a href="socat.html#OPTION_TCPWRAPPERS">TCPWRAP</a>
    options. This address type can for example be used for implementing
-   symmetric or asymmetric broadcast or multicast communications.<br>
-   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP4">IP4</a>,<a href="socat.html#GROUP_IP6">IP6</a>,<a href="socat.html#GROUP_RANGE">RANGE</a> <br>
+   symmetric or asymmetric broadcast or multicast communications.<br/>
+   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP4">IP4</a>,<a href="socat.html#GROUP_IP6">IP6</a>,<a href="socat.html#GROUP_RANGE">RANGE</a> <br/>
    Useful options:
    <a href="socat.html#OPTION_BIND">bind</a>,
    <a href="socat.html#OPTION_RANGE">range</a>,
@@ -1061,7 +1074,7 @@
    <a href="socat.html#OPTION_TTL">ttl</a>,
    <a href="socat.html#OPTION_TOS">tos</a>,
    <a href="socat.html#OPTION_SOURCEPORT">sourceport</a>,
-   <a href="socat.html#OPTION_PROTOCOL_FAMILY">pf</a><br>
+   <a href="socat.html#OPTION_PROTOCOL_FAMILY">pf</a><br/>
    See also:
    <a href="socat.html#ADDRESS_UDP4_DATAGRAM">UDP4-DATAGRAM</a>,
    <a href="socat.html#ADDRESS_UDP6_DATAGRAM">UDP6-DATAGRAM</a>,
@@ -1071,16 +1084,16 @@
    <a href="socat.html#ADDRESS_UDP_CONNECT">UDP-CONNECT</a>,
    <a href="socat.html#ADDRESS_UDP_LISTEN">UDP-LISTEN</a>,
    <a href="socat.html#ADDRESS_IP_DATAGRAM">IP-DATAGRAM</a>
-<a name="ADDRESS_UDP4_DATAGRAM"></a><p><dt><strong><strong><code>UDP4-DATAGRAM:&lt;address&gt;:&lt;port&gt;</code></strong></strong><dd>
+<a name="ADDRESS_UDP4_DATAGRAM"></a><dt ><strong><strong ><code >UDP4-DATAGRAM:&lt;address&gt;:&lt;port&gt;</code></strong></strong></dt>
    Like <a href="socat.html#ADDRESS_UDP_DATAGRAM">UDP-DATAGRAM</a>, but only supports IPv4
    protocol (<a href="socat.html#EXAMPLE_ADDRESS_UDP4_BROADCAST_CLIENT">example1</a>,
-   <a href="socat.html#EXAMPLE_ADDRESS_UDP4_MULTICAST">example2</a>).<br> 
+   <a href="socat.html#EXAMPLE_ADDRESS_UDP4_MULTICAST">example2</a>).<br/> 
    Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP4">IP4</a>, <a href="socat.html#GROUP_RANGE">RANGE</a>
-<a name="ADDRESS_UDP6_DATAGRAM"></a><p><dt><strong><strong><code>UDP6-DATAGRAM:&lt;address&gt;:&lt;port&gt;</code></strong></strong><dd>
+<a name="ADDRESS_UDP6_DATAGRAM"></a><dt ><strong><strong ><code >UDP6-DATAGRAM:&lt;address&gt;:&lt;port&gt;</code></strong></strong></dt>
    Like <a href="socat.html#ADDRESS_UDP_DATAGRAM">UDP-DATAGRAM</a>, but only supports IPv6
-   protocol.<br> 
+   protocol.<br/> 
    Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP6">IP6</a>,<a href="socat.html#GROUP_RANGE">RANGE</a>
-<a name="ADDRESS_UDP_LISTEN"></a><p><dt><strong><strong><code>UDP-LISTEN:&lt;port&gt;</code></strong></strong><dd>
+<a name="ADDRESS_UDP_LISTEN"></a><dt ><strong><strong ><code >UDP-LISTEN:&lt;port&gt;</code></strong></strong></dt>
    Waits for a UDP/IP packet arriving on &lt;port&gt;
    [<a href="socat.html#TYPE_UDP_SERVICE">UDP service</a>] and `connects' back to sender.
    The accepted IP version is 4 or the one specified with option
@@ -1089,27 +1102,27 @@
    due to UDP protocol properties, no real connection is established; data has
    to arrive from the peer first, and no end-of-file condition can be
    transported. Note that opening  
-   this address usually blocks until a client connects.<br>
-   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_LISTEN">LISTEN</a>,<a href="socat.html#GROUP_CHILD">CHILD</a>,<a href="socat.html#GROUP_RANGE">RANGE</a>,<a href="socat.html#GROUP_IP4">IP4</a>,<a href="socat.html#GROUP_IP6">IP6</a> <br>
+   this address usually blocks until a client connects.<br/>
+   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_LISTEN">LISTEN</a>,<a href="socat.html#GROUP_CHILD">CHILD</a>,<a href="socat.html#GROUP_RANGE">RANGE</a>,<a href="socat.html#GROUP_IP4">IP4</a>,<a href="socat.html#GROUP_IP6">IP6</a> <br/>
    Useful options:
    <a href="socat.html#OPTION_FORK">fork</a>,
    <a href="socat.html#OPTION_BIND">bind</a>,
    <a href="socat.html#OPTION_RANGE">range</a>,
-   <a href="socat.html#OPTION_PROTOCOL_FAMILY">pf</a> <br>
+   <a href="socat.html#OPTION_PROTOCOL_FAMILY">pf</a> <br/>
    See also:
    <a href="socat.html#ADDRESS_UDP_CONNECT">UDP</a>,
    <a href="socat.html#ADDRESS_UDP4_LISTEN">UDP4-LISTEN</a>,
    <a href="socat.html#ADDRESS_UDP6_LISTEN">UDP6-LISTEN</a>,
    <a href="socat.html#ADDRESS_TCP_LISTEN">TCP-LISTEN</a>
-<a name="ADDRESS_UDP4_LISTEN"></a><p><dt><strong><strong><code>UDP4-LISTEN:&lt;port&gt;</code></strong></strong><dd>
+<a name="ADDRESS_UDP4_LISTEN"></a><dt ><strong><strong ><code >UDP4-LISTEN:&lt;port&gt;</code></strong></strong></dt>
    Like <a href="socat.html#ADDRESS_UDP_LISTEN">UDP-LISTEN</a>, but only support IPv4
-   protocol.<br>
-   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_LISTEN">LISTEN</a>,<a href="socat.html#GROUP_CHILD">CHILD</a>,<a href="socat.html#GROUP_RANGE">RANGE</a>,<a href="socat.html#GROUP_IP4">IP4</a> <br>
-<a name="ADDRESS_UDP6_LISTEN"></a><p><dt><strong><strong><code>UDP6-LISTEN:&lt;port&gt;</code></strong></strong><dd>
+   protocol.<br/>
+   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_LISTEN">LISTEN</a>,<a href="socat.html#GROUP_CHILD">CHILD</a>,<a href="socat.html#GROUP_RANGE">RANGE</a>,<a href="socat.html#GROUP_IP4">IP4</a> <br/>
+<a name="ADDRESS_UDP6_LISTEN"></a><dt ><strong><strong ><code >UDP6-LISTEN:&lt;port&gt;</code></strong></strong></dt>
    Like <a href="socat.html#ADDRESS_UDP_LISTEN">UDP-LISTEN</a>, but only support IPv6
-   protocol.<br>
-   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_LISTEN">LISTEN</a>,<a href="socat.html#GROUP_CHILD">CHILD</a>,<a href="socat.html#GROUP_RANGE">RANGE</a>,<a href="socat.html#GROUP_IP6">IP6</a> <br>
-<a name="ADDRESS_UDP_SENDTO"></a><p><dt><strong><strong><code>UDP-SENDTO:&lt;host&gt;:&lt;port&gt;</code></strong></strong><dd>
+   protocol.<br/>
+   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_LISTEN">LISTEN</a>,<a href="socat.html#GROUP_CHILD">CHILD</a>,<a href="socat.html#GROUP_RANGE">RANGE</a>,<a href="socat.html#GROUP_IP6">IP6</a> <br/>
+<a name="ADDRESS_UDP_SENDTO"></a><dt ><strong><strong ><code >UDP-SENDTO:&lt;host&gt;:&lt;port&gt;</code></strong></strong></dt>
    Communicates with the specified peer socket, defined by &lt;port&gt; [<a href="socat.html#TYPE_UDP_SERVICE">UDP
    service</a>] on
    &lt;host&gt; [<a href="socat.html#TYPE_IP_ADDRESS">IP address</a>], using UDP/IP version 4 or 6
@@ -1117,14 +1130,14 @@
    <a href="socat.html#OPTION_PROTOCOL_FAMILY">pf</a>. It sends packets to and receives packets
    from that peer socket only.  
    This address effectively implements a datagram client.
-   It works well with socat UDP-RECVFROM and UDP-RECV address peers.<br>
-   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP4">IP4</a>,<a href="socat.html#GROUP_IP6">IP6</a> <br>
+   It works well with socat UDP-RECVFROM and UDP-RECV address peers.<br/>
+   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP4">IP4</a>,<a href="socat.html#GROUP_IP6">IP6</a> <br/>
    Useful options:
    <a href="socat.html#OPTION_TTL">ttl</a>,
    <a href="socat.html#OPTION_TOS">tos</a>,
    <a href="socat.html#OPTION_BIND">bind</a>,
    <a href="socat.html#OPTION_SOURCEPORT">sourceport</a>,
-   <a href="socat.html#OPTION_PROTOCOL_FAMILY">pf</a><br>
+   <a href="socat.html#OPTION_PROTOCOL_FAMILY">pf</a><br/>
    See also:
    <a href="socat.html#ADDRESS_UDP4_SENDTO">UDP4-SENDTO</a>,
    <a href="socat.html#ADDRESS_UDP6_SENDTO">UDP6-SENDTO</a>,
@@ -1133,16 +1146,16 @@
    <a href="socat.html#ADDRESS_UDP_CONNECT">UDP-CONNECT</a>,
    <a href="socat.html#ADDRESS_UDP_LISTEN">UDP-LISTEN</a>,
    <a href="socat.html#ADDRESS_IP_SENDTO">IP-SENDTO</a>
-<a name="ADDRESS_UDP4_SENDTO"></a><p><dt><strong><strong><code>UDP4-SENDTO:&lt;host&gt;:&lt;port&gt;</code></strong></strong><dd>
+<a name="ADDRESS_UDP4_SENDTO"></a><dt ><strong><strong ><code >UDP4-SENDTO:&lt;host&gt;:&lt;port&gt;</code></strong></strong></dt>
    Like <a href="socat.html#ADDRESS_UDP_SENDTO">UDP-SENDTO</a>, but only supports IPv4
-   protocol.<br> 
+   protocol.<br/> 
    Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP4">IP4</a>
-<a name="ADDRESS_UDP6_SENDTO"></a><p><dt><strong><strong><code>UDP6-SENDTO:&lt;host&gt;:&lt;port&gt;</code></strong></strong><dd>
+<a name="ADDRESS_UDP6_SENDTO"></a><dt ><strong><strong ><code >UDP6-SENDTO:&lt;host&gt;:&lt;port&gt;</code></strong></strong></dt>
    Like <a href="socat.html#ADDRESS_UDP_SENDTO">UDP-SENDTO</a>, but only supports IPv6
-   protocol.<br>
+   protocol.<br/>
    Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP6">IP6</a>
 <p>
-<a name="ADDRESS_UDP_RECVFROM"></a><p><dt><strong><strong><code>UDP-RECVFROM:&lt;port&gt;</code></strong></strong><dd>
+<a name="ADDRESS_UDP_RECVFROM"></a><dt ><strong><strong ><code >UDP-RECVFROM:&lt;port&gt;</code></strong></strong></dt>
    Creates a UDP socket on &lt;port&gt; [<a href="socat.html#TYPE_UDP_SERVICE">UDP service</a>] using
    UDP/IP version 4 or 6 
    depending on option <a href="socat.html#OPTION_PROTOCOL_FAMILY">pf</a>.
@@ -1151,15 +1164,15 @@
    option 
    where each arriving packet - from arbitrary peers - is handled by its own sub
    process. This allows a behaviour similar to typical UDP based servers like ntpd
-   or named. This address works well with socat UDP-SENDTO address peers.<br>
-   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP4">IP4</a>,<a href="socat.html#GROUP_IP6">IP6</a>,<a href="socat.html#GROUP_CHILD">CHILD</a>,<a href="socat.html#GROUP_RANGE">RANGE</a> <br>
+   or named. This address works well with socat UDP-SENDTO address peers.<br/>
+   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP4">IP4</a>,<a href="socat.html#GROUP_IP6">IP6</a>,<a href="socat.html#GROUP_CHILD">CHILD</a>,<a href="socat.html#GROUP_RANGE">RANGE</a> <br/>
    Useful options:
    <a href="socat.html#OPTION_FORK">fork</a>,
    <a href="socat.html#OPTION_TTL">ttl</a>,
    <a href="socat.html#OPTION_TOS">tos</a>,
    <a href="socat.html#OPTION_BIND">bind</a>,
    <a href="socat.html#OPTION_SOURCEPORT">sourceport</a>,
-   <a href="socat.html#OPTION_PROTOCOL_FAMILY">pf</a><br>
+   <a href="socat.html#OPTION_PROTOCOL_FAMILY">pf</a><br/>
    See also:
    <a href="socat.html#ADDRESS_UDP4_RECVFROM">UDP4-RECVFROM</a>,
    <a href="socat.html#ADDRESS_UDP6_RECVFROM">UDP6-RECVFROM</a>,
@@ -1169,26 +1182,26 @@
    <a href="socat.html#ADDRESS_UDP_LISTEN">UDP-LISTEN</a>,
    <a href="socat.html#ADDRESS_IP_RECVFROM">IP-RECVFROM</a>,
    <a href="socat.html#ADDRESS_UNIX_RECVFROM">UNIX-RECVFROM</a>
-<a name="ADDRESS_UDP4_RECVFROM"></a><p><dt><strong><strong><code>UDP4-RECVFROM:&lt;port&gt;</code></strong></strong><dd>
-   Like <a href="socat.html#ADDRESS_UDP_RECVFROM">UDP-RECVFROM</a>, but only supports IPv4 protocol.<br>
+<a name="ADDRESS_UDP4_RECVFROM"></a><dt ><strong><strong ><code >UDP4-RECVFROM:&lt;port&gt;</code></strong></strong></dt>
+   Like <a href="socat.html#ADDRESS_UDP_RECVFROM">UDP-RECVFROM</a>, but only supports IPv4 protocol.<br/>
    Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP4">IP4</a>,<a href="socat.html#GROUP_CHILD">CHILD</a>,<a href="socat.html#GROUP_RANGE">RANGE</a>
-<a name="ADDRESS_UDP6_RECVFROM"></a><p><dt><strong><strong><code>UDP6-RECVFROM:&lt;port&gt;</code></strong></strong><dd>
-   Like <a href="socat.html#ADDRESS_UDP_RECVFROM">UDP-RECVFROM</a>, but only supports IPv6 protocol.<br>
+<a name="ADDRESS_UDP6_RECVFROM"></a><dt ><strong><strong ><code >UDP6-RECVFROM:&lt;port&gt;</code></strong></strong></dt>
+   Like <a href="socat.html#ADDRESS_UDP_RECVFROM">UDP-RECVFROM</a>, but only supports IPv6 protocol.<br/>
    Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP6">IP6</a>,<a href="socat.html#GROUP_CHILD">CHILD</a>,<a href="socat.html#GROUP_RANGE">RANGE</a>
 <p>
-<a name="ADDRESS_UDP_RECV"></a><p><dt><strong><strong><code>UDP-RECV:&lt;port&gt;</code></strong></strong><dd>
+<a name="ADDRESS_UDP_RECV"></a><dt ><strong><strong ><code >UDP-RECV:&lt;port&gt;</code></strong></strong></dt>
    Creates a UDP socket on &lt;port&gt; [<a href="socat.html#TYPE_UDP_SERVICE">UDP service</a>] using UDP/IP version 4 or 6
    depending on option <a href="socat.html#OPTION_PROTOCOL_FAMILY">pf</a>.
    It receives packets from multiple unspecified peers and merges the data.
-   No replies are possible. It works well with, e.g., socat UDP-SENDTO address peers; it behaves similar to a syslog server.<br>
-   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP4">IP4</a>,<a href="socat.html#GROUP_IP6">IP6</a>,<a href="socat.html#GROUP_RANGE">RANGE</a> <br>
+   No replies are possible. It works well with, e.g., socat UDP-SENDTO address peers; it behaves similar to a syslog server.<br/>
+   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP4">IP4</a>,<a href="socat.html#GROUP_IP6">IP6</a>,<a href="socat.html#GROUP_RANGE">RANGE</a> <br/>
    Useful options:
    <a href="socat.html#OPTION_FORK">fork</a>,
    <a href="socat.html#OPTION_PROTOCOL_FAMILY">pf</a>,
    <a href="socat.html#OPTION_BIND">bind</a>,
    <a href="socat.html#OPTION_SOURCEPORT">sourceport</a>,
    <a href="socat.html#OPTION_TTL">ttl</a>,
-   <a href="socat.html#OPTION_TOS">tos</a><br>
+   <a href="socat.html#OPTION_TOS">tos</a><br/>
    See also:
    <a href="socat.html#ADDRESS_UDP4_RECV">UDP4-RECV</a>,
    <a href="socat.html#ADDRESS_UDP6_RECV">UDP6-RECV</a>,
@@ -1198,29 +1211,29 @@
    <a href="socat.html#ADDRESS_UDP_LISTEN">UDP-LISTEN</a>,
    <a href="socat.html#ADDRESS_IP_RECV">IP-RECV</a>,
    <a href="socat.html#ADDRESS_UNIX_RECV">UNIX-RECV</a>
-<a name="ADDRESS_UDP4_RECV"></a><p><dt><strong><strong><code>UDP4-RECV:&lt;port&gt;</code></strong></strong><dd>
-   Like <a href="socat.html#ADDRESS_UDP_RECV">UDP-RECV</a>, but only supports IPv4 protocol.<br>
+<a name="ADDRESS_UDP4_RECV"></a><dt ><strong><strong ><code >UDP4-RECV:&lt;port&gt;</code></strong></strong></dt>
+   Like <a href="socat.html#ADDRESS_UDP_RECV">UDP-RECV</a>, but only supports IPv4 protocol.<br/>
    Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP4">IP4</a>,<a href="socat.html#GROUP_RANGE">RANGE</a>
-<a name="ADDRESS_UDP6_RECV"></a><p><dt><strong><strong><code>UDP6-RECV:&lt;port&gt;</code></strong></strong><dd>
-   Like <a href="socat.html#ADDRESS_UDP_RECV">UDP-RECV</a>, but only supports IPv6 protocol.<br>
+<a name="ADDRESS_UDP6_RECV"></a><dt ><strong><strong ><code >UDP6-RECV:&lt;port&gt;</code></strong></strong></dt>
+   Like <a href="socat.html#ADDRESS_UDP_RECV">UDP-RECV</a>, but only supports IPv6 protocol.<br/>
    Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_IP6">IP6</a>,<a href="socat.html#GROUP_RANGE">RANGE</a>
 <p>
-<a name="ADDRESS_UNIX_CONNECT"></a><p><dt><strong><strong><code>UNIX-CONNECT:&lt;filename&gt;</code></strong></strong><dd>
+<a name="ADDRESS_UNIX_CONNECT"></a><dt ><strong><strong ><code >UNIX-CONNECT:&lt;filename&gt;</code></strong></strong></dt>
    Connects to <a href="socat.html#TYPE_FILENAME">&lt;filename&gt;</a> assuming it is a UNIX domain
    socket.
    If &lt;filename&gt; does not exist, this is an error;
    if &lt;filename&gt; is not a UNIX domain socket, this is an error;
    if &lt;filename&gt; is a UNIX domain socket, but no process is listening, this is
-   an error.<br> 
-   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_NAMED">NAMED</a>,<a href="socat.html#GROUP_RETRY">RETRY</a>,<a href="socat.html#GROUP_SOCK_UNIX">UNIX</a> <br>)
+   an error.<br/> 
+   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_NAMED">NAMED</a>,<a href="socat.html#GROUP_RETRY">RETRY</a>,<a href="socat.html#GROUP_SOCK_UNIX">UNIX</a> <br/>)
    Useful options:
-   <a href="socat.html#OPTION_BIND">bind</a><br>
+   <a href="socat.html#OPTION_BIND">bind</a><br/>
    See also:
    <a href="socat.html#ADDRESS_UNIX_LISTEN">UNIX-LISTEN</a>,
    <a href="socat.html#ADDRESS_UNIX_SENDTO">UNIX-SENDTO</a>,
    <a href="socat.html#ADDRESS_TCP_CONNECT">TCP</a>
 <p>
-<a name="ADDRESS_UNIX_LISTEN"></a><p><dt><strong><strong><code>UNIX-LISTEN:&lt;filename&gt;</code></strong></strong><dd>
+<a name="ADDRESS_UNIX_LISTEN"></a><dt ><strong><strong ><code >UNIX-LISTEN:&lt;filename&gt;</code></strong></strong></dt>
    Listens on <a href="socat.html#TYPE_FILENAME">&lt;filename&gt;</a> using a UNIX domain stream
    socket and accepts a connection.
    If &lt;filename&gt; exists and is not a socket, this is an error.
@@ -1228,32 +1241,32 @@
    fails (use option <a href="socat.html#OPTION_UNLINK_EARLY">unlink-early</a>!).
    Note that opening this address usually blocks until a client connects.
    Beginning with socat version 1.4.3, the file system entry is removed when
-   this address is closed (but see option <a href="socat.html#OPTION_UNLINK_CLOSE">unlink-close</a>) (<a href="socat.html#EXAMPLE_ADDRESS_UNIX_LISTEN">example</a>).<br>
-   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_NAMED">NAMED</a>,<a href="socat.html#GROUP_LISTEN">LISTEN</a>,<a href="socat.html#GROUP_CHILD">CHILD</a>,<a href="socat.html#GROUP_RETRY">RETRY</a>,<a href="socat.html#GROUP_SOCK_UNIX">UNIX</a> <br>
+   this address is closed (but see option <a href="socat.html#OPTION_UNLINK_CLOSE">unlink-close</a>) (<a href="socat.html#EXAMPLE_ADDRESS_UNIX_LISTEN">example</a>).<br/>
+   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_NAMED">NAMED</a>,<a href="socat.html#GROUP_LISTEN">LISTEN</a>,<a href="socat.html#GROUP_CHILD">CHILD</a>,<a href="socat.html#GROUP_RETRY">RETRY</a>,<a href="socat.html#GROUP_SOCK_UNIX">UNIX</a> <br/>
    Useful options:
    <a href="socat.html#OPTION_FORK">fork</a>,
    <a href="socat.html#OPTION_UMASK">umask</a>,
    <a href="socat.html#OPTION_MODE">mode</a>,
    <a href="socat.html#OPTION_USER">user</a>,
    <a href="socat.html#OPTION_GROUP">group</a>,
-   <a href="socat.html#OPTION_UNLINK_EARLY">unlink-early</a><br> 
+   <a href="socat.html#OPTION_UNLINK_EARLY">unlink-early</a><br/> 
    See also:
    <a href="socat.html#ADDRESS_UNIX_CONNECT">UNIX-CONNECT</a>,
    <a href="socat.html#ADDRESS_UNIX_RECVFROM">UNIX-RECVFROM</a>,
    <a href="socat.html#ADDRESS_UNIX_RECV">UNIX-RECV</a>,
    <a href="socat.html#ADDRESS_TCP4_LISTEN">TCP-LISTEN</a>
 <p>
-<a name="ADDRESS_UNIX_SENDTO"></a><p><dt><strong><strong><code>UNIX-SENDTO:&lt;filename&gt;</code></strong></strong><dd>
+<a name="ADDRESS_UNIX_SENDTO"></a><dt ><strong><strong ><code >UNIX-SENDTO:&lt;filename&gt;</code></strong></strong></dt>
    Communicates with the specified peer socket, defined by [<a href="socat.html#TYPE_FILENAME">&lt;filename&gt;</a>] assuming it is a UNIX domain datagram socket.
    It sends packets to and receives packets from that peer socket only.
    Please note that it might be necessary to <a href="socat.html#OPTION_BIND">bind</a> the
-   local socket to an address (e.g. <code>/tmp/sock1</code>, which must not exist
+   local socket to an address (e.g. <code >/tmp/sock1</code>, which must not exist
    before).
    This address type works well with socat UNIX-RECVFROM and UNIX-RECV address
-   peers.<br> 
-   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_NAMED">NAMED</a>,<a href="socat.html#GROUP_SOCK_UNIX">UNIX</a><br>
+   peers.<br/> 
+   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_NAMED">NAMED</a>,<a href="socat.html#GROUP_SOCK_UNIX">UNIX</a><br/>
    Useful options:
-   <a href="socat.html#OPTION_BIND">bind</a><br>
+   <a href="socat.html#OPTION_BIND">bind</a><br/>
    See also:
    <a href="socat.html#ADDRESS_UNIX_RECVFROM">UNIX-RECVFROM</a>,
    <a href="socat.html#ADDRESS_UNIX_RECV">UNIX-RECV</a>,
@@ -1261,14 +1274,14 @@
    <a href="socat.html#ADDRESS_UDP_SENDTO">UDP-SENDTO</a>,
    <a href="socat.html#ADDRESS_IP_SENDTO">IP-SENDTO</a>
 <p>
-<a name="ADDRESS_UNIX_RECVFROM"></a><p><dt><strong><strong><code>UNIX-RECVFROM:&lt;filename&gt;</code></strong></strong><dd>
+<a name="ADDRESS_UNIX_RECVFROM"></a><dt ><strong><strong ><code >UNIX-RECVFROM:&lt;filename&gt;</code></strong></strong></dt>
    Creates a UNIX domain datagram socket [<a href="socat.html#TYPE_FILENAME">&lt;filename&gt;</a>].
    Receives one packet and may send one or more answer packets to that peer.
    This mode is particularly useful with fork option where each arriving packet - from arbitrary peers - is handled by its own sub process.
-   This address works well with socat UNIX-SENDTO address peers.<br>
-   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_NAMED">NAMED</a>,<a href="socat.html#GROUP_CHILD">CHILD</a>,<a href="socat.html#GROUP_SOCK_UNIX">UNIX</a> <br>
+   This address works well with socat UNIX-SENDTO address peers.<br/>
+   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_NAMED">NAMED</a>,<a href="socat.html#GROUP_CHILD">CHILD</a>,<a href="socat.html#GROUP_SOCK_UNIX">UNIX</a> <br/>
    Useful options:
-   <a href="socat.html#OPTION_FORK">fork</a><br>
+   <a href="socat.html#OPTION_FORK">fork</a><br/>
    See also:
    <a href="socat.html#ADDRESS_UNIX_SENDTO">UNIX-SENDTO</a>,
    <a href="socat.html#ADDRESS_UNIX_RECV">UNIX-RECV</a>,
@@ -1276,12 +1289,12 @@
    <a href="socat.html#ADDRESS_UDP_RECVFROM">UDP-RECVFROM</a>,
    <a href="socat.html#ADDRESS_IP_RECVFROM">IP-RECVFROM</a>
 <p>
-<a name="ADDRESS_UNIX_RECV"></a><p><dt><strong><strong><code>UNIX-RECV:&lt;filename&gt;</code></strong></strong><dd>
+<a name="ADDRESS_UNIX_RECV"></a><dt ><strong><strong ><code >UNIX-RECV:&lt;filename&gt;</code></strong></strong></dt>
    Creates a UNIX domain datagram socket [<a href="socat.html#TYPE_FILENAME">&lt;filename&gt;</a>].
    Receives packets from multiple unspecified peers and merges the data.
    No replies are possible. It can be, e.g., addressed by socat UNIX-SENDTO address peers.
    It behaves similar to a syslog server.
-   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_NAMED">NAMED</a>,<a href="socat.html#GROUP_SOCK_UNIX">UNIX</a> <br>
+   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_NAMED">NAMED</a>,<a href="socat.html#GROUP_SOCK_UNIX">UNIX</a> <br/>
    See also:
    <a href="socat.html#ADDRESS_UNIX_SENDTO">UNIX-SENDTO</a>,
    <a href="socat.html#ADDRESS_UNIX_RECVFROM">UNIX-RECVFROM</a>,
@@ -1289,35 +1302,66 @@
    <a href="socat.html#ADDRESS_UDP_RECV">UDP-RECV</a>,
    <a href="socat.html#ADDRESS_IP_RECV">IP-RECV</a>
 <p>
-<a name="ADDRESS_UNIX_CLIENT"></a><p><dt><strong><strong><code>UNIX-CLIENT:&lt;filename&gt;</code></strong></strong><dd>
+<a name="ADDRESS_UNIX_CLIENT"></a><dt ><strong><strong ><code >UNIX-CLIENT:&lt;filename&gt;</code></strong></strong></dt>
    Communicates with the specified peer socket, defined by
    [<a href="socat.html#TYPE_FILENAME">&lt;filename&gt;</a>] assuming it is a UNIX domain socket.
    It first tries to connect and, if that fails, assumes it is a datagram
-   socket, thus supporting both types.<br>
-   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_NAMED">NAMED</a>,<a href="socat.html#GROUP_SOCK_UNIX">UNIX</a> <br>
+   socket, thus supporting both types.<br/>
+   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_NAMED">NAMED</a>,<a href="socat.html#GROUP_SOCK_UNIX">UNIX</a> <br/>
    Useful options:
-   <a href="socat.html#OPTION_BIND">bind</a><br>
+   <a href="socat.html#OPTION_BIND">bind</a><br/>
    See also:
    <a href="socat.html#ADDRESS_UNIX_CONNECT">UNIX-CONNECT</a>,
    <a href="socat.html#ADDRESS_UNIX_SENDTO">UNIX-SENDTO</a>,
    <a href="socat.html#ADDRESS_GOPEN">GOPEN</a>
 <p>
-<p><dt><strong><strong><code>ABSTRACT-CONNECT:&lt;string&gt;</code></strong></strong><dd>
-<p><dt><strong><strong><code>ABSTRACT-LISTEN:&lt;string&gt;</code></strong></strong><dd>
-<p><dt><strong><strong><code>ABSTRACT-SENDTO:&lt;string&gt;</code></strong></strong><dd>
-<p><dt><strong><strong><code>ABSTRACT-RECVFROM:&lt;string&gt;</code></strong></strong><dd>
-<p><dt><strong><strong><code>ABSTRACT-RECV:&lt;string&gt;</code></strong></strong><dd>
-<p><dt><strong><strong><code>ABSTRACT-CLIENT:&lt;string&gt;</code></strong></strong><dd>
+<a name="ADDRESS_VSOCK_CONNECT"></a><dt ><strong><strong ><code >VSOCK-CONNECT:&lt;cid&gt;:&lt;port&gt;</code></strong></strong></dt>
+   Establishes a VSOCK stream connection to the specified &lt;cid&gt; [<a href="socat.html#TYPE_VSOCK_ADDRESS">VSOCK
+   cid</a>] and &lt;port&gt; [<a href="socat.html#TYPE_VSOCK_PORT">VSOCK port</a>].<br/>
+   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_CHILD">CHILD</a>,<a href="socat.html#GROUP_RETRY">RETRY</a> <br/>
+   Useful options:
+   <a href="socat.html#OPTION_BIND">bind</a>,
+   <a href="socat.html#OPTION_PROTOCOL_FAMILY">pf</a>,
+   <a href="socat.html#OPTION_CONNECT_TIMEOUT">connect-timeout</a>,
+   <a href="socat.html#OPTION_RETRY">retry</a>,
+   <a href="socat.html#OPTION_READBYTES">readbytes</a><br/>
+   See also:
+   <a href="socat.html#ADDRESS_VSOCK_LISTEN">VSOCK-LISTEN</a>,
+<p>
+<a name="ADDRESS_VSOCK_LISTEN"></a><dt ><strong><strong ><code >VSOCK-LISTEN:&lt;port&gt;</code></strong></strong></dt>
+   Listens on &lt;port&gt; [<a href="socat.html#TYPE_VSOCK_PORT">VSOCK port</a>] and accepts a
+   VSOCK connection.
+   Note that opening this address usually blocks until a client connects.<br/>
+   Option groups: <a href="socat.html#GROUP_FD">FD</a>,<a href="socat.html#GROUP_SOCKET">SOCKET</a>,<a href="socat.html#GROUP_LISTEN">LISTEN</a>,<a href="socat.html#GROUP_CHILD">CHILD</a>,<a href="socat.html#GROUP_RETRY">RETRY</a> <br/>
+   Useful options:
+   <a href="socat.html#OPTION_FORK">fork</a>,
+   <a href="socat.html#OPTION_BIND">bind</a>,
+   <a href="socat.html#OPTION_PROTOCOL_FAMILY">pf</a>,
+   <a href="socat.html#OPTION_MAX_CHILDREN">max-children</a>,
+   <a href="socat.html#OPTION_BACKLOG">backlog</a>,
+   <a href="socat.html#OPTION_SUBSTUSER">su</a>,
+   <a href="socat.html#OPTION_REUSEADDR">reuseaddr</a>,
+   <a href="socat.html#OPTION_RETRY">retry</a>,
+   <a href="socat.html#OPTION_COOL_WRITE">cool-write</a><br/>
+   See also:
+   <a href="socat.html#ADDRESS_VSOCK_CONNECT">VSOCK-CONNECT</a>
+<p>
+<dt ><strong><strong ><code >ABSTRACT-CONNECT:&lt;string&gt;</code></strong></strong></dt>
+<dt ><strong><strong ><code >ABSTRACT-LISTEN:&lt;string&gt;</code></strong></strong></dt>
+<dt ><strong><strong ><code >ABSTRACT-SENDTO:&lt;string&gt;</code></strong></strong></dt>
+<dt ><strong><strong ><code >ABSTRACT-RECVFROM:&lt;string&gt;</code></strong></strong></dt>
+<dt ><strong><strong ><code >ABSTRACT-RECV:&lt;string&gt;</code></strong></strong></dt>
+<dt ><strong><strong ><code >ABSTRACT-CLIENT:&lt;string&gt;</code></strong></strong></dt>
    The ABSTRACT addresses are almost identical to the related UNIX addresses
    except that they do not address file system based sockets but an alternate
    UNIX domain address space. To achieve this the socket address strings are
    prefixed with "\0" internally. This feature is available (only?) on Linux.
    Option groups are the same as with the related UNIX addresses, except that
    the ABSTRACT addresses are not member of the NAMED group.
-</dl>
+enddit()
 <p>
 <a name="ADDRESS_OPTIONS"></a>
-<h2>ADDRESS OPTIONS</h2>
+<h2 >ADDRESS OPTIONS</h2>
 <p>
 Address options can be applied to address specifications to influence the
 process of opening the addresses and the 
@@ -1326,7 +1370,7 @@
 For technical reasons not every option can be
 applied to every address type; e.g., applying a socket option to a regular file
 will fail. To catch most useless combinations as early as in the open phase,
-the concept of <em>option groups</em> was introduced. Each option belongs to one
+the concept of <em >option groups</em> was introduced. Each option belongs to one
 or more option groups. Options can be used only with address types that support
 at least one of their option groups (but see <a href="socat.html#option_g">option -g</a>).
 <p>
@@ -1336,41 +1380,41 @@
 
 Some address options manipulate parameters of system calls;
 e.g., option sync sets the 
-<code>O_SYNC</code>
+<code >O_SYNC</code>
  flag with the 
-<code>open()</code>
+<code >open()</code>
  call. 
 Other options cause a system or library call; e.g., with option `ttl=value'
 the 
-<code>setsockopt(fd, SOL_IP, IP_TTL, value, sizeof(int))</code>
+<code >setsockopt(fd, SOL_IP, IP_TTL, value, sizeof(int))</code>
  call is applied.
 Other
-options set internal <strong>socat</strong> variables that are used during data transfer;
+options set internal <strong >socat</strong> variables that are used during data transfer;
 e.g., `crnl' causes explicit character conversions. 
 A few options have more complex implementations; e.g., su-d
 (substuser-delayed) inquires some user and group infos, stores them, and
 applies them later after a possible 
-<code>chroot()</code>
+<code >chroot()</code>
  call.
 <p>
 If multiple options are given to an address, their sequence in the address specification has (almost) no
-effect on the sequence of their execution/application. Instead, <strong>socat</strong> has
-built in an <em>option phase</em> model that tries to bring the options in a useful
+effect on the sequence of their execution/application. Instead, <strong >socat</strong> has
+built in an <em >option phase</em> model that tries to bring the options in a useful
 order. Some options exist in different forms (e.g., 
 unlink, unlink-early, unlink-late) to control the time of their execution.
 <p>
 If the same option is specified more than once within one address
 specification, with equal or different values, the effect depends on the kind of option. Options
 resulting in function calls like 
-<code>setsockopt()</code>
+<code >setsockopt()</code>
  cause multiple
 invocations. With options that set parameters for a required call like
 
-<code>open()</code>
+<code >open()</code>
  
 or set internal flags, the value of the last option occurrence is effective.
 <p>
-The existence or semantics of many options are system dependent. <strong>Socat</strong>
+The existence or semantics of many options are system dependent. <strong >Socat</strong>
 usually does NOT try to emulate missing libc or kernel features, it just
 provides an 
 interface to the underlying system. So, if an operating system lacks a feature,
@@ -1378,296 +1422,296 @@
 <p>
 The following paragraphs introduce just the more common address options. For
 a more comprehensive reference and to find information about canonical option
-names, alias names, option phases, and platforms see file <strong>xio.help</strong>. 
-<br> <br>
+names, alias names, option phases, and platforms see file <strong >xio.help</strong>. 
+<br/> <br/>
 <p>
-<dl></dl><br>
+startdit()enddit()<br/>
 <p>
-<a name="GROUP_FD"></a><em><strong>FD option group</strong></em>
+<a name="GROUP_FD"></a><em ><strong >FD option group</strong></em>
 <p>
 This option group contains options that are applied to a UN*X
 style file descriptor, no matter how it was generated.
-Because all current <strong>socat</strong> address types are file descriptor based, these
-options may be applied to any address. <br>
+Because all current <strong >socat</strong> address types are file descriptor based, these
+options may be applied to any address. <br/>
 Note: Some of these options are also member of another option group, that
 provides another, non-fd based mechanism.
 For these options, it depends on the actual address type and its option groups 
 which mechanism is used. The second, non-fd based mechanism is prioritized.
-<dl>
-<a name="OPTION_CLOEXEC"></a><p><dt><strong><strong><code>cloexec=&lt;bool&gt;</code></strong></strong><dd>
+startdit()
+<a name="OPTION_CLOEXEC"></a><dt ><strong><strong ><code >cloexec=&lt;bool&gt;</code></strong></strong></dt>
    Sets the 
-<code>FD_CLOEXEC</code>
+<code >FD_CLOEXEC</code>
  flag with the 
-<code>fcntl()</code>
+<code >fcntl()</code>
  system call to value
    <a href="socat.html#TYPE_BOOL">&lt;bool&gt;</a>. If set,
    the file descriptor is closed on 
-<code>exec()</code>
- family function calls. <strong>Socat</strong>
+<code >exec()</code>
+ family function calls. <strong >Socat</strong>
    internally handles 
    this flag for the fds it controls, so in most cases there will be no need to
    apply this option. 
-<a name="OPTION_SETLK_WR"></a><p><dt><strong><strong><code>setlk</code></strong></strong><dd>
+<a name="OPTION_SETLK_WR"></a><dt ><strong><strong ><code >setlk</code></strong></strong></dt>
    Tries to set a discretionary write lock to the whole file using the 
-<code>fcntl(fd,
+<code >fcntl(fd,
    F_SETLK, ...)</code>
  system call. If the file is already locked, this call results
    in an error. 
    On Linux, when the file permissions for group are "S" (g-x,g+s), and the
    file system is locally mounted with the "mand" option, the lock is
    mandatory, i.e. prevents other processes from opening the file.
-<a name="OPTION_SETLKW_WR"></a><p><dt><strong><strong><code>setlkw</code></strong></strong><dd>
+<a name="OPTION_SETLKW_WR"></a><dt ><strong><strong ><code >setlkw</code></strong></strong></dt>
    Tries to set a discretionary waiting write lock to the whole file using the
    
-<code>fcntl(fd, F_SETLKW, ...)</code>
+<code >fcntl(fd, F_SETLKW, ...)</code>
  system call. If the file is already locked,
    this call blocks. 
    See option <a href="socat.html#OPTION_SETLK_WR">setlk</a> for information about making this
    lock mandatory. 
-<a name="OPTION_SETLK_RD"></a><p><dt><strong><strong><code>setlk-rd</code></strong></strong><dd>
+<a name="OPTION_SETLK_RD"></a><dt ><strong><strong ><code >setlk-rd</code></strong></strong></dt>
    Tries to set a discretionary read lock to the whole file using the 
-<code>fcntl(fd,
+<code >fcntl(fd,
    F_SETLK, ...)</code>
  system call. If the file is already write locked, this call
    results in an error. 
    See option <a href="socat.html#OPTION_SETLK_WR">setlk</a> for information about making this
    lock mandatory. 
-<a name="OPTION_SETLKW_RD"></a><p><dt><strong><strong><code>setlkw-rd</code></strong></strong><dd>
+<a name="OPTION_SETLKW_RD"></a><dt ><strong><strong ><code >setlkw-rd</code></strong></strong></dt>
    Tries to set a discretionary waiting read lock to the whole file using the
    
-<code>fcntl(fd, F_SETLKW, ...)</code>
+<code >fcntl(fd, F_SETLKW, ...)</code>
  system call. If the file is already write
    locked, this call blocks. 
    See option <a href="socat.html#OPTION_SETLK_WR">setlk</a> for information about making this
    lock mandatory. 
-<a name="OPTION_FLOCK_EX"></a><p><dt><strong><strong><code>flock-ex</code></strong></strong><dd>
+<a name="OPTION_FLOCK_EX"></a><dt ><strong><strong ><code >flock-ex</code></strong></strong></dt>
    Tries to set a blocking exclusive advisory lock to the file using the
    
-<code>flock(fd, LOCK_EX)</code>
- system call. <strong>Socat</strong> hangs in this call if the file
+<code >flock(fd, LOCK_EX)</code>
+ system call. <strong >Socat</strong> hangs in this call if the file
    is locked by another process.
-<a name="OPTION_FLOCK_EX_NB"></a><p><dt><strong><strong><code>flock-ex-nb</code></strong></strong><dd>
+<a name="OPTION_FLOCK_EX_NB"></a><dt ><strong><strong ><code >flock-ex-nb</code></strong></strong></dt>
    Tries to set a nonblocking exclusive advisory lock to the file using the
    
-<code>flock(fd, LOCK_EX|LOCK_NB)</code>
+<code >flock(fd, LOCK_EX|LOCK_NB)</code>
  system call. If the file is already locked,
    this option results in an error.
-<a name="OPTION_FLOCK_SH"></a><p><dt><strong><strong><code>flock-sh</code></strong></strong><dd>
+<a name="OPTION_FLOCK_SH"></a><dt ><strong><strong ><code >flock-sh</code></strong></strong></dt>
    Tries to set a blocking shared advisory lock to the file using the
    
-<code>flock(fd, LOCK_SH)</code>
- system call. <strong>Socat</strong> hangs in this call if the file
+<code >flock(fd, LOCK_SH)</code>
+ system call. <strong >Socat</strong> hangs in this call if the file
    is locked by another process.
-<a name="OPTION_FLOCK_SH_NB"></a><p><dt><strong><strong><code>flock-sh-nb</code></strong></strong><dd>
+<a name="OPTION_FLOCK_SH_NB"></a><dt ><strong><strong ><code >flock-sh-nb</code></strong></strong></dt>
    Tries to set a nonblocking shared advisory lock to the file using the
    
-<code>flock(fd, LOCK_SH|LOCK_NB)</code>
+<code >flock(fd, LOCK_SH|LOCK_NB)</code>
  system call. If the file is already locked,
    this option results in an error.
-<a name="OPTION_LOCK"></a><p><dt><strong><strong><code>lock</code></strong></strong><dd>
+<a name="OPTION_LOCK"></a><dt ><strong><strong ><code >lock</code></strong></strong></dt>
    Sets a blocking lock on the file. Uses the setlk or flock mechanism
    depending on availability on the particular platform. If both are available,
    the POSIX variant (setlkw) is used.
-<a name="OPTION_USER"></a><p><dt><strong><strong><code>user=&lt;user&gt;</code></strong></strong><dd>
+<a name="OPTION_USER"></a><dt ><strong><strong ><code >user=&lt;user&gt;</code></strong></strong></dt>
    Sets the <a href="socat.html#TYPE_USER">&lt;user&gt;</a> (owner) of the stream.
    If the address is member of the NAMED option group,
-   <strong>socat</strong> uses the 
-<code>chown()</code>
+   <strong >socat</strong> uses the 
+<code >chown()</code>
  system call after opening the
    file or binding to the UNIX domain socket (race condition!).
-   Without filesystem entry, <strong>socat</strong> sets the user of the stream 
+   Without filesystem entry, <strong >socat</strong> sets the user of the stream 
    using the 
-<code>fchown()</code>
+<code >fchown()</code>
  system call.
    These calls might require root privilege. 
-<a name="OPTION_USER_LATE"></a><p><dt><strong><strong><code>user-late=&lt;user&gt;</code></strong></strong><dd>
+<a name="OPTION_USER_LATE"></a><dt ><strong><strong ><code >user-late=&lt;user&gt;</code></strong></strong></dt>
    Sets the owner of the fd to <a href="socat.html#TYPE_USER">&lt;user&gt;</a> with the 
-<code>fchown()</code>
+<code >fchown()</code>
 
    system call after opening 
    or connecting the channel.
    This is useful only on file system entries.
-<a name="OPTION_GROUP"></a><p><dt><strong><strong><code>group=&lt;group&gt;</code></strong></strong><dd>
+<a name="OPTION_GROUP"></a><dt ><strong><strong ><code >group=&lt;group&gt;</code></strong></strong></dt>
    Sets the <a href="socat.html#TYPE_GROUP">&lt;group&gt;</a> of the stream.
    If the address is member of the NAMED option group,
-   <strong>socat</strong> uses the 
-<code>chown()</code>
+   <strong >socat</strong> uses the 
+<code >chown()</code>
  system call after opening the
    file or binding to the UNIX domain socket (race condition!).
-   Without filesystem entry, <strong>socat</strong> sets the group of the stream 
+   Without filesystem entry, <strong >socat</strong> sets the group of the stream 
    with the 
-<code>fchown()</code>
+<code >fchown()</code>
  system call. 
    These calls might require group membership or root privilege. 
-<a name="OPTION_GROUP_LATE"></a><p><dt><strong><strong><code>group-late=&lt;group&gt;</code></strong></strong><dd>
+<a name="OPTION_GROUP_LATE"></a><dt ><strong><strong ><code >group-late=&lt;group&gt;</code></strong></strong></dt>
    Sets the group of the fd to <a href="socat.html#TYPE_GROUP">&lt;group&gt;</a> with the
    
-<code>fchown()</code>
+<code >fchown()</code>
  system call after opening 
    or connecting the channel.
    This is useful only on file system entries. 
-<a name="OPTION_MODE"></a><p><dt><strong><strong><code>mode=&lt;mode&gt;</code></strong></strong><dd>
+<a name="OPTION_MODE"></a><dt ><strong><strong ><code >mode=&lt;mode&gt;</code></strong></strong></dt>
    Sets the &lt;mode&gt; [<a href="socat.html#TYPE_MODE_T">mode_t</a>] (permissions) of the stream.
    If the address is member of the NAMED option group and
    uses the 
-<code>open()</code>
+<code >open()</code>
  or 
-<code>creat()</code>
+<code >creat()</code>
  call, the mode is applied with these.
    If the address is member of the NAMED option group without using these
-   system calls, <strong>socat</strong> uses the 
-<code>chmod()</code>
+   system calls, <strong >socat</strong> uses the 
+<code >chmod()</code>
  system call after opening the
    filesystem entry or binding to the UNIX domain socket (race condition!).
-   Otherwise, <strong>socat</strong> sets the mode of the stream
+   Otherwise, <strong >socat</strong> sets the mode of the stream
    using 
-<code>fchmod()</code>
+<code >fchmod()</code>
 . 
    These calls might require ownership or root privilege.
-<a name="OPTION_PERM_LATE"></a><p><dt><strong><strong><code>perm-late=&lt;mode&gt;</code></strong></strong><dd>
+<a name="OPTION_PERM_LATE"></a><dt ><strong><strong ><code >perm-late=&lt;mode&gt;</code></strong></strong></dt>
    Sets the permissions of the fd to value &lt;mode&gt;
    [<a href="socat.html#TYPE_MODE_T">mode_t</a>] using the 
-<code>fchmod()</code>
+<code >fchmod()</code>
  system call after
    opening or connecting the channel.
    This is useful only on file system entries. 
-<a name="OPTION_APPEND"></a><p><dt><strong><strong><code>append=&lt;bool&gt;</code></strong></strong><dd>
+<a name="OPTION_APPEND"></a><dt ><strong><strong ><code >append=&lt;bool&gt;</code></strong></strong></dt>
    Always writes data to the actual end of file.
    If the address is member of the OPEN option group, 
-   <strong>socat</strong> uses the 
-<code>O_APPEND</code>
+   <strong >socat</strong> uses the 
+<code >O_APPEND</code>
  flag with the 
-<code>open()</code>
+<code >open()</code>
  system call
    (<a href="socat.html#EXAMPLE_OPTION_APPEND">example</a>).
-   Otherwise, <strong>socat</strong> applies the 
-<code>fcntl(fd, F_SETFL, O_APPEND)</code>
+   Otherwise, <strong >socat</strong> applies the 
+<code >fcntl(fd, F_SETFL, O_APPEND)</code>
  call.
-<a name="OPTION_NONBLOCK"></a><p><dt><strong><strong><code>nonblock=&lt;bool&gt;</code></strong></strong><dd>
+<a name="OPTION_NONBLOCK"></a><dt ><strong><strong ><code >nonblock=&lt;bool&gt;</code></strong></strong></dt>
    Tries to open or use file in nonblocking mode. Its only effects are that the
    
-<code>connect()</code>
+<code >connect()</code>
  call of TCP addresses does not block, and that opening a
    named pipe for reading does not block.
    If the address is member of the OPEN option group,
-   <strong>socat</strong> uses the 
-<code>O_NONBLOCK</code>
+   <strong >socat</strong> uses the 
+<code >O_NONBLOCK</code>
  flag with the 
-<code>open()</code>
+<code >open()</code>
  system call.
-   Otherwise, <strong>socat</strong> applies the 
-<code>fcntl(fd, F_SETFL, O_NONBLOCK)</code>
+   Otherwise, <strong >socat</strong> applies the 
+<code >fcntl(fd, F_SETFL, O_NONBLOCK)</code>
  call.
  
 
-<a name="OPTION_O_BINARY"></a><p><dt><strong><strong><code>binary</code></strong></strong><dd>
+<a name="OPTION_O_BINARY"></a><dt ><strong><strong ><code >binary</code></strong></strong></dt>
    Opens the file in binary mode to avoid implicit line terminator
    conversions (Cygwin).
-<a name="OPTION_O_TEXT"></a><p><dt><strong><strong><code>text</code></strong></strong><dd>
+<a name="OPTION_O_TEXT"></a><dt ><strong><strong ><code >text</code></strong></strong></dt>
    Opens the file in text mode to force implicit line terminator conversions
    (Cygwin).
-<a name="OPTION_O_NOINHERIT"></a><p><dt><strong><strong><code>noinherit</code></strong></strong><dd>
+<a name="OPTION_O_NOINHERIT"></a><dt ><strong><strong ><code >noinherit</code></strong></strong></dt>
    Does not keep this file open in a spawned process (Cygwin).
-<a name="OPTION_COOL_WRITE"></a><p><dt><strong><strong><code>cool-write</code></strong></strong><dd>
+<a name="OPTION_COOL_WRITE"></a><dt ><strong><strong ><code >cool-write</code></strong></strong></dt>
    Takes it easy when write fails with EPIPE or ECONNRESET and logs the message
-   with <em>notice</em> level instead of <em>error</em>.
+   with <em >notice</em> level instead of <em >error</em>.
    This prevents the log file from being filled with useless error messages
    when socat is used as a high volume server or proxy where clients often
-   abort the connection.<br>
+   abort the connection.<br/>
    This option is experimental.
-<a name="OPTION_END_CLOSE"></a><p><dt><strong><strong><code>end-close</code></strong></strong><dd>
+<a name="OPTION_END_CLOSE"></a><dt ><strong><strong ><code >end-close</code></strong></strong></dt>
    Changes the (address dependent) method of ending a connection to just close
    the file descriptors. This is useful when the connection is to be reused by
-   or shared with other processes (<a href="socat.html#EXAMPLE_END_CLOSE">example</a>).<br>
-   Normally, socket connections will be ended with <code>shutdown(2)</code> which
+   or shared with other processes (<a href="socat.html#EXAMPLE_END_CLOSE">example</a>).<br/>
+   Normally, socket connections will be ended with <code >shutdown(2)</code> which
    terminates the socket even if it is shared by multiple processes. 
-   <code>close(2)</code> "unlinks" the socket from the process but keeps it active as
-   long as there are still links from other processes.<br>
+   <code >close(2)</code> "unlinks" the socket from the process but keeps it active as
+   long as there are still links from other processes.<br/>
    Similarly, when an address of type EXEC or SYSTEM is ended, socat usually
    will explicitly kill the sub process. With this option, it will just close
    the file descriptors.
-<a name="OPTION_SHUT_NONE"></a><p><dt><strong><strong><code>shut-none</code></strong></strong><dd>
+<a name="OPTION_SHUT_NONE"></a><dt ><strong><strong ><code >shut-none</code></strong></strong></dt>
    Changes the (address dependent) method of shutting down the write part of a
    connection to not do anything.
-<a name="OPTION_SHUT_DOWN"></a><p><dt><strong><strong><code>shut-down</code></strong></strong><dd>
+<a name="OPTION_SHUT_DOWN"></a><dt ><strong><strong ><code >shut-down</code></strong></strong></dt>
    Changes the (address dependent) method of shutting down the write part of a
    connection to shutdown(fd, SHUT_WR). Is only useful with sockets.
-<a name="OPTION_SHUT_CLOSE"></a><p><dt><strong><strong><code>shut-close</code></strong></strong><dd>
+<a name="OPTION_SHUT_CLOSE"></a><dt ><strong><strong ><code >shut-close</code></strong></strong></dt>
    Changes the (address dependent) method of shutting down the write part of a
    connection to close(fd).
-<a name="OPTION_SHUT_NULL"></a><p><dt><strong><strong><code>shut-null</code></strong></strong><dd>
-   When one address indicates EOF, <strong>socat</strong> will send a zero sized packet to the
+<a name="OPTION_SHUT_NULL"></a><dt ><strong><strong ><code >shut-null</code></strong></strong></dt>
+   When one address indicates EOF, <strong >socat</strong> will send a zero sized packet to the
    write channel of the other address to transfer the EOF condition. This is
    useful with UDP and other datagram protocols. Has been tested against
    netcat and socat with option <a href="socat.html#OPTION_NULL_EOF">null-eof</a>.
-<a name="OPTION_NULL_EOF"></a><p><dt><strong><strong><code>null-eof</code></strong></strong><dd>
-   Normally <strong>socat</strong> will ignore empty (zero size payload) packets arriving on
-   datagram sockets, so it survives port scans. With this option <strong>socat</strong>
+<a name="OPTION_NULL_EOF"></a><dt ><strong><strong ><code >null-eof</code></strong></strong></dt>
+   Normally <strong >socat</strong> will ignore empty (zero size payload) packets arriving on
+   datagram sockets, so it survives port scans. With this option <strong >socat</strong>
    interprets empty datagram packets as EOF indicator (see
    <a href="socat.html#OPTION_SHUT_NULL">shut-null</a>).
-<a name="OPTION_IOCTL_VOID"></a><p><dt><strong><strong><code>ioctl-void=&lt;request&gt;</code></strong></strong><dd>
-   Calls <code>ioctl()</code> with the request value as second argument and NULL as
+<a name="OPTION_IOCTL_VOID"></a><dt ><strong><strong ><code >ioctl-void=&lt;request&gt;</code></strong></strong></dt>
+   Calls <code >ioctl()</code> with the request value as second argument and NULL as
    third argument. This option allows utilizing ioctls that are not
    explicitly implemented in socat.
-<a name="OPTION_IOCTL_INT"></a><p><dt><strong><strong><code>ioctl-int=&lt;request&gt;:&lt;value&gt;</code></strong></strong><dd>
-   Calls <code>ioctl()</code> with the request value as second argument and the integer
+<a name="OPTION_IOCTL_INT"></a><dt ><strong><strong ><code >ioctl-int=&lt;request&gt;:&lt;value&gt;</code></strong></strong></dt>
+   Calls <code >ioctl()</code> with the request value as second argument and the integer
    value as third argument.
-<a name="OPTION_IOCTL_INTP"></a><p><dt><strong><strong><code>ioctl-intp=&lt;request&gt;:&lt;value&gt;</code></strong></strong><dd>
-   Calls <code>ioctl()</code> with the request value as second argument and a pointer to
+<a name="OPTION_IOCTL_INTP"></a><dt ><strong><strong ><code >ioctl-intp=&lt;request&gt;:&lt;value&gt;</code></strong></strong></dt>
+   Calls <code >ioctl()</code> with the request value as second argument and a pointer to
    the integer value as third argument.
-<a name="OPTION_IOCTL_BIN"></a><p><dt><strong><strong><code>ioctl-bin=&lt;request&gt;:&lt;value&gt;</code></strong></strong><dd>
-   Calls <code>ioctl()</code> with the request value as second argument and a pointer to
+<a name="OPTION_IOCTL_BIN"></a><dt ><strong><strong ><code >ioctl-bin=&lt;request&gt;:&lt;value&gt;</code></strong></strong></dt>
+   Calls <code >ioctl()</code> with the request value as second argument and a pointer to
    the given data value as third argument. This data must be specified in
    <a href="socat.html#TYPE_DATA">&lt;dalan&gt;</a> form.
-<a name="OPTION_IOCTL_STRING"></a><p><dt><strong><strong><code>ioctl-string=&lt;request&gt;:&lt;value&gt;</code></strong></strong><dd>
-   Calls <code>ioctl()</code> with the request value as second argument and a pointer to
+<a name="OPTION_IOCTL_STRING"></a><dt ><strong><strong ><code >ioctl-string=&lt;request&gt;:&lt;value&gt;</code></strong></strong></dt>
+   Calls <code >ioctl()</code> with the request value as second argument and a pointer to
    the given string as third argument.
    <a href="socat.html#TYPE_DATA">&lt;dalan&gt;</a> form.
-</dl>
+enddit()
 <p>
-<dl></dl><br>
+startdit()enddit()<br/>
 <p>
-<a name="GROUP_NAMED"></a><em><strong>NAMED option group</strong></em>
+<a name="GROUP_NAMED"></a><em ><strong >NAMED option group</strong></em>
 <p>
-These options work on file system entries.<br>
+These options work on file system entries.<br/>
 See also options <a href="socat.html#OPTION_USER">user</a>, <a href="socat.html#OPTION_GROUP">group</a>, and
 <a href="socat.html#OPTION_MODE">mode</a>.
 <p>
-<dl>
-<a name="OPTION_USER_EARLY"></a><p><dt><strong><strong><code>user-early=&lt;user&gt;</code></strong></strong><dd>
+startdit()
+<a name="OPTION_USER_EARLY"></a><dt ><strong><strong ><code >user-early=&lt;user&gt;</code></strong></strong></dt>
    Changes the <a href="socat.html#TYPE_USER">&lt;user&gt;</a> (owner) of the file system entry before
    accessing it, using the 
    
-<code>chown()</code>
+<code >chown()</code>
  system call. This call might require root privilege.
-<a name="OPTION_GROUP_EARLY"></a><p><dt><strong><strong><code>group-early=&lt;group&gt;</code></strong></strong><dd>
+<a name="OPTION_GROUP_EARLY"></a><dt ><strong><strong ><code >group-early=&lt;group&gt;</code></strong></strong></dt>
    Changes the <a href="socat.html#TYPE_GROUP">&lt;group&gt;</a> of the file system entry before
    accessing it, using the 
    
-<code>chown()</code>
+<code >chown()</code>
  system call. This call might require group membership or root
    privilege. 
-<a name="OPTION_PERM_EARLY"></a><p><dt><strong><strong><code>perm-early=&lt;mode&gt;</code></strong></strong><dd>
+<a name="OPTION_PERM_EARLY"></a><dt ><strong><strong ><code >perm-early=&lt;mode&gt;</code></strong></strong></dt>
    Changes the &lt;mode&gt; [<a href="socat.html#TYPE_MODE_T">mode_t</a>] of the file system entry
    before accessing it, using the 
    
-<code>chmod()</code>
+<code >chmod()</code>
  system call. This call might require ownership or root
    privilege. 
-<a name="OPTION_UMASK"></a><p><dt><strong><strong><code>umask=&lt;mode&gt;</code></strong></strong><dd>
+<a name="OPTION_UMASK"></a><dt ><strong><strong ><code >umask=&lt;mode&gt;</code></strong></strong></dt>
    Sets the umask of the process to &lt;mode&gt; [<a href="socat.html#TYPE_MODE_T">mode_t</a>] before
    accessing the file system entry (useful 
    with UNIX domain sockets!). This call might affect all further operations
-   of the <strong>socat</strong> process!  
-<a name="OPTION_UNLINK_EARLY"></a><p><dt><strong><strong><code>unlink-early</code></strong></strong><dd>
+   of the <strong >socat</strong> process!  
+<a name="OPTION_UNLINK_EARLY"></a><dt ><strong><strong ><code >unlink-early</code></strong></strong></dt>
    Unlinks (removes) the file before opening it and even before applying
    user-early etc. 
-<a name="OPTION_UNLINK"></a><p><dt><strong><strong><code>unlink</code></strong></strong><dd>
+<a name="OPTION_UNLINK"></a><dt ><strong><strong ><code >unlink</code></strong></strong></dt>
    Unlinks (removes) the file before accessing it, but after user-early etc.
-<a name="OPTION_UNLINK_LATE"></a><p><dt><strong><strong><code>unlink-late</code></strong></strong><dd>
+<a name="OPTION_UNLINK_LATE"></a><dt ><strong><strong ><code >unlink-late</code></strong></strong></dt>
    Unlinks (removes) the file after opening it to make it inaccessible for
    other processes after a short race condition. 
-<a name="OPTION_UNLINK_CLOSE"></a><p><dt><strong><strong><code>unlink-close</code></strong></strong><dd>
+<a name="OPTION_UNLINK_CLOSE"></a><dt ><strong><strong ><code >unlink-close</code></strong></strong></dt>
    Removes the addresses file system entry when closing the address.
    For <a href="socat.html#ADDRESS_NAMED_PIPE">named pipes</a>,
    <a href="socat.html#ADDRESS_UNIX_LISTEN">listening unix domain sockets</a>,
@@ -1676,195 +1720,195 @@
    <a href="socat.html#ADDRESS_OPEN">opened files</a>,
    <a href="socat.html#ADDRESS_GOPEN">generic opened files</a>, and
    <a href="socat.html#ADDRESS_UNIX_CONNECT">client unix domain sockets</a> the default is 0.
-</dl>
+enddit()
 <p>
-<dl></dl><br>
+startdit()enddit()<br/>
 <p>
-<a name="GROUP_OPEN"></a><em><strong>OPEN option group</strong></em>
+<a name="GROUP_OPEN"></a><em ><strong >OPEN option group</strong></em>
 <p>
 The OPEN group options allow setting flags with the 
-<code>open()</code>
+<code >open()</code>
  system call. 
 E.g., option `creat' sets the 
-<code>O_CREAT</code>
- flag.<br>
+<code >O_CREAT</code>
+ flag.<br/>
 See also options <a href="socat.html#OPTION_APPEND">append</a> and
 <a href="socat.html#OPTION_NONBLOCK">nonblock</a>.
-<dl>
-<a name="OPTION_O_CREAT"></a><p><dt><strong><strong><code>creat=&lt;bool&gt;</code></strong></strong><dd>
+startdit()
+<a name="OPTION_O_CREAT"></a><dt ><strong><strong ><code >creat=&lt;bool&gt;</code></strong></strong></dt>
    Creates the file if it does not exist (<a href="socat.html#EXAMPLE_OPTION_CREAT">example</a>).
-<a name="OPTION_DSYNC"></a><p><dt><strong><strong><code>dsync=&lt;bool&gt;</code></strong></strong><dd>
+<a name="OPTION_DSYNC"></a><dt ><strong><strong ><code >dsync=&lt;bool&gt;</code></strong></strong></dt>
    Blocks 
-<code>write()</code>
+<code >write()</code>
  calls until metainfo is physically written to media.
-<a name="OPTION_EXCL"></a><p><dt><strong><strong><code>excl=&lt;bool&gt;</code></strong></strong><dd>
+<a name="OPTION_EXCL"></a><dt ><strong><strong ><code >excl=&lt;bool&gt;</code></strong></strong></dt>
    With option creat, if file exists this is an error.
-<a name="OPTION_LARGEFILE"></a><p><dt><strong><strong><code>largefile=&lt;bool&gt;</code></strong></strong><dd>
+<a name="OPTION_LARGEFILE"></a><dt ><strong><strong ><code >largefile=&lt;bool&gt;</code></strong></strong></dt>
    On 32 bit systems, allows a file larger than 2^31 bytes.
-<a name="OPTION_O_NOATIME"></a><p><dt><strong><strong><code>noatime</code></strong></strong><dd>
+<a name="OPTION_O_NOATIME"></a><dt ><strong><strong ><code >noatime</code></strong></strong></dt>
    Sets the O_NOATIME options, so reads do not change the access timestamp.
-<a name="OPTION_NOCTTY"></a><p><dt><strong><strong><code>noctty=&lt;bool&gt;</code></strong></strong><dd>
+<a name="OPTION_NOCTTY"></a><dt ><strong><strong ><code >noctty=&lt;bool&gt;</code></strong></strong></dt>
    Does not make this file the controlling terminal.
-<a name="OPTION_NOFOLLOW"></a><p><dt><strong><strong><code>nofollow=&lt;bool&gt;</code></strong></strong><dd>
+<a name="OPTION_NOFOLLOW"></a><dt ><strong><strong ><code >nofollow=&lt;bool&gt;</code></strong></strong></dt>
    Does not follow symbolic links.
-<a name="OPTION_NSHARE"></a><p><dt><strong><strong><code>nshare=&lt;bool&gt;</code></strong></strong><dd>
+<a name="OPTION_NSHARE"></a><dt ><strong><strong ><code >nshare=&lt;bool&gt;</code></strong></strong></dt>
    Does not allow sharing this file with other processes.
-<a name="OPTION_RSHARE"></a><p><dt><strong><strong><code>rshare=&lt;bool&gt;</code></strong></strong><dd>
+<a name="OPTION_RSHARE"></a><dt ><strong><strong ><code >rshare=&lt;bool&gt;</code></strong></strong></dt>
    Does not allow other processes to open this file for writing.
-<a name="OPTION_RSYNC"></a><p><dt><strong><strong><code>rsync=&lt;bool&gt;</code></strong></strong><dd>
+<a name="OPTION_RSYNC"></a><dt ><strong><strong ><code >rsync=&lt;bool&gt;</code></strong></strong></dt>
    Blocks 
-<code>write()</code>
+<code >write()</code>
  until metainfo is physically written to media.
-<a name="OPTION_SYNC"></a><p><dt><strong><strong><code>sync=&lt;bool&gt;</code></strong></strong><dd>
+<a name="OPTION_SYNC"></a><dt ><strong><strong ><code >sync=&lt;bool&gt;</code></strong></strong></dt>
    Blocks 
-<code>write()</code>
+<code >write()</code>
  until data is physically written to media.
 
 
 	
 
-<a name="OPTION_RDONLY"></a><p><dt><strong><strong><code>rdonly=&lt;bool&gt;</code></strong></strong><dd>
+<a name="OPTION_RDONLY"></a><dt ><strong><strong ><code >rdonly=&lt;bool&gt;</code></strong></strong></dt>
    Opens the file for reading only.
 
-<a name="OPTION_WRONLY"></a><p><dt><strong><strong><code>wronly=&lt;bool&gt;</code></strong></strong><dd>
+<a name="OPTION_WRONLY"></a><dt ><strong><strong ><code >wronly=&lt;bool&gt;</code></strong></strong></dt>
    Opens the file for writing only.
-<a name="OPTION_O_TRUNC"></a><p><dt><strong><strong><code>trunc</code></strong></strong><dd>
+<a name="OPTION_O_TRUNC"></a><dt ><strong><strong ><code >trunc</code></strong></strong></dt>
    Truncates the file to size 0 during opening it.
-</dl>
+enddit()
 <p>
-<dl></dl><br>
+startdit()enddit()<br/>
 <p>
-<a name="GROUP_REG"></a><em><strong>REG and BLK option group</strong></em>
+<a name="GROUP_REG"></a><em ><strong >REG and BLK option group</strong></em>
 <p>
 These options are usually applied to a UN*X file descriptor, but their
 semantics make sense only on a file supporting random access.
-<dl>
-<a name="OPTION_SEEK"></a><p><dt><strong><strong><code>seek=&lt;offset&gt;</code></strong></strong><dd>
+startdit()
+<a name="OPTION_SEEK"></a><dt ><strong><strong ><code >seek=&lt;offset&gt;</code></strong></strong></dt>
    Applies the 
-<code>lseek(fd, &lt;offset&gt;, SEEK_SET)</code>
+<code >lseek(fd, &lt;offset&gt;, SEEK_SET)</code>
  (or 
-<code>lseek64</code>
+<code >lseek64</code>
 ) system
    call, thus positioning the file pointer absolutely to &lt;offset&gt;
    [<a href="socat.html#TYPE_OFF">off_t</a> or <a href="socat.html#TYPE_OFF64">off64_t</a>]. Please note that a
    missing value defaults to 1, not 0.
-<a name="OPTION_SEEK_CUR"></a><p><dt><strong><strong><code>seek-cur=&lt;offset&gt;</code></strong></strong><dd>
+<a name="OPTION_SEEK_CUR"></a><dt ><strong><strong ><code >seek-cur=&lt;offset&gt;</code></strong></strong></dt>
    Applies the 
-<code>lseek(fd, &lt;offset&gt;, SEEK_CUR)</code>
+<code >lseek(fd, &lt;offset&gt;, SEEK_CUR)</code>
  (or 
-<code>lseek64</code>
+<code >lseek64</code>
 ) system
    call, thus positioning the file pointer &lt;offset&gt; [<a href="socat.html#TYPE_OFF">off_t</a> or
    <a href="socat.html#TYPE_OFF64">off64_t</a>] bytes relatively to its current position (which
    is usually 0). Please note that a missing value defaults to 1, not 0.
-<a name="OPTION_SEEK_END"></a><p><dt><strong><strong><code>seek-end=&lt;offset&gt;</code></strong></strong><dd>
+<a name="OPTION_SEEK_END"></a><dt ><strong><strong ><code >seek-end=&lt;offset&gt;</code></strong></strong></dt>
    Applies the 
-<code>lseek(fd, &lt;offset&gt;, SEEK_END)</code>
+<code >lseek(fd, &lt;offset&gt;, SEEK_END)</code>
  (or 
-<code>lseek64</code>
+<code >lseek64</code>
 ) system
    call, thus positioning the file pointer &lt;offset&gt; [<a href="socat.html#TYPE_OFF">off_t</a> or
    <a href="socat.html#TYPE_OFF64">off64_t</a>] bytes relatively to the files current end. Please
    note that a missing value defaults to 1, not 0.  
-<a name="OPTION_FTRUNCATE"></a><p><dt><strong><strong><code>ftruncate=&lt;offset&gt;</code></strong></strong><dd>
+<a name="OPTION_FTRUNCATE"></a><dt ><strong><strong ><code >ftruncate=&lt;offset&gt;</code></strong></strong></dt>
    Applies the 
-<code>ftruncate(fd, &lt;offset&gt;)</code>
+<code >ftruncate(fd, &lt;offset&gt;)</code>
 
    (or 
-<code>ftruncate64</code>
+<code >ftruncate64</code>
  if available) system call, thus
    truncating the file at the position &lt;offset&gt; [<a href="socat.html#TYPE_OFF">off_t</a> or 
    <a href="socat.html#TYPE_OFF64">off64_t</a>]. Please note that a missing value defaults to 1,
    not 0.
 <p>
-<a name="OPTION_EXT2_SECRM_FL"></a><p><dt><strong><strong><code>secrm=&lt;bool&gt;</code></strong></strong><dd>
-<a name="OPTION_EXT2_UNRM"></a><p><dt><strong><strong><code>unrm=&lt;bool&gt;</code></strong></strong><dd>
-<a name="OPTION_EXT2_COMPR"></a><p><dt><strong><strong><code>compr=&lt;bool&gt;</code></strong></strong><dd>
-<a name="OPTION_EXT2_SYNC"></a><p><dt><strong><strong><code>ext2-sync=&lt;bool&gt;</code></strong></strong><dd>
-<a name="OPTION_EXT2_IMMUTABLE"></a><p><dt><strong><strong><code>immutable=&lt;bool&gt;</code></strong></strong><dd>
-<a name="OPTION_EXT2_APPEND"></a><p><dt><strong><strong><code>ext2-append=&lt;bool&gt;</code></strong></strong><dd>
-<a name="OPTION_EXT2_NODUMP"></a><p><dt><strong><strong><code>nodump=&lt;bool&gt;</code></strong></strong><dd>
-<a name="OPTION_EXT2_NOATIME"></a><p><dt><strong><strong><code>ext2-noatime=&lt;bool&gt;</code></strong></strong><dd>
-<a name="OPTION_EXT2_JOURNAL_DATA"></a><p><dt><strong><strong><code>journal-data=&lt;bool&gt;</code></strong></strong><dd>
-<a name="OPTION_EXT2_NOTAIL"></a><p><dt><strong><strong><code>notail=&lt;bool&gt;</code></strong></strong><dd>
-<a name="OPTION_EXT2_DIRSYNC"></a><p><dt><strong><strong><code>dirsync=&lt;bool&gt;</code></strong></strong><dd>
+<a name="OPTION_EXT2_SECRM_FL"></a><dt ><strong><strong ><code >secrm=&lt;bool&gt;</code></strong></strong></dt>
+<a name="OPTION_EXT2_UNRM"></a><dt ><strong><strong ><code >unrm=&lt;bool&gt;</code></strong></strong></dt>
+<a name="OPTION_EXT2_COMPR"></a><dt ><strong><strong ><code >compr=&lt;bool&gt;</code></strong></strong></dt>
+<a name="OPTION_EXT2_SYNC"></a><dt ><strong><strong ><code >ext2-sync=&lt;bool&gt;</code></strong></strong></dt>
+<a name="OPTION_EXT2_IMMUTABLE"></a><dt ><strong><strong ><code >immutable=&lt;bool&gt;</code></strong></strong></dt>
+<a name="OPTION_EXT2_APPEND"></a><dt ><strong><strong ><code >ext2-append=&lt;bool&gt;</code></strong></strong></dt>
+<a name="OPTION_EXT2_NODUMP"></a><dt ><strong><strong ><code >nodump=&lt;bool&gt;</code></strong></strong></dt>
+<a name="OPTION_EXT2_NOATIME"></a><dt ><strong><strong ><code >ext2-noatime=&lt;bool&gt;</code></strong></strong></dt>
+<a name="OPTION_EXT2_JOURNAL_DATA"></a><dt ><strong><strong ><code >journal-data=&lt;bool&gt;</code></strong></strong></dt>
+<a name="OPTION_EXT2_NOTAIL"></a><dt ><strong><strong ><code >notail=&lt;bool&gt;</code></strong></strong></dt>
+<a name="OPTION_EXT2_DIRSYNC"></a><dt ><strong><strong ><code >dirsync=&lt;bool&gt;</code></strong></strong></dt>
    These options change non standard file attributes on operating systems and
    file systems that support these features, like Linux with ext2fs,
    ext3fs, or reiserfs. See man 1 chattr for information on these options.
    Please note that there might be a race condition between creating the file
    and applying these options.
-</dl>
+enddit()
 <p>
-<dl></dl><br>
+startdit()enddit()<br/>
 <p>
-<a name="GROUP_PROCESS"></a><em><strong>PROCESS option group</strong></em>
+<a name="GROUP_PROCESS"></a><em ><strong >PROCESS option group</strong></em>
 <p>
 Options of this group change the process properties instead of just affecting
 one data channel.
 For EXEC and SYSTEM addresses and for LISTEN and CONNECT type addresses with
 option FORK, 
 these options apply to the child processes instead of the main socat process.
-<dl>
-<a name="OPTION_CHROOT"></a><p><dt><strong><strong><code>chroot=&lt;directory&gt;</code></strong></strong><dd>
+startdit()
+<a name="OPTION_CHROOT"></a><dt ><strong><strong ><code >chroot=&lt;directory&gt;</code></strong></strong></dt>
    Performs a 
-<code>chroot()</code>
+<code >chroot()</code>
  operation to <a href="socat.html#TYPE_DIRECTORY">&lt;directory&gt;</a>
    after processing the address (<a href="socat.html#EXAMPLE_OPTION_CHROOT">example</a>). This call might require root privilege.
-<a name="OPTION_CHROOT_EARLY"></a><p><dt><strong><strong><code>chroot-early=&lt;directory&gt;</code></strong></strong><dd>
+<a name="OPTION_CHROOT_EARLY"></a><dt ><strong><strong ><code >chroot-early=&lt;directory&gt;</code></strong></strong></dt>
    Performs a 
-<code>chroot()</code>
+<code >chroot()</code>
  operation to <a href="socat.html#TYPE_DIRECTORY">&lt;directory&gt;</a>
    before opening the address. This call might require root privilege.
-<a name="OPTION_SETGID"></a><p><dt><strong><strong><code>setgid=&lt;group&gt;</code></strong></strong><dd>
+<a name="OPTION_SETGID"></a><dt ><strong><strong ><code >setgid=&lt;group&gt;</code></strong></strong></dt>
    Changes the primary <a href="socat.html#TYPE_GROUP">&lt;group&gt;</a> of the process after
    processing the address. This call might require root privilege. Please note
    that this option does not drop other group related privileges.
-<a name="OPTION_SETGID_EARLY"></a><p><dt><strong><strong><code>setgid-early=&lt;group&gt;</code></strong></strong><dd>
+<a name="OPTION_SETGID_EARLY"></a><dt ><strong><strong ><code >setgid-early=&lt;group&gt;</code></strong></strong></dt>
    Like <a href="socat.html#OPTION_SETGID">setgit</a> but is performed before opening the address.
-<a name="OPTION_SETUID"></a><p><dt><strong><strong><code>setuid=&lt;user&gt;</code></strong></strong><dd>
+<a name="OPTION_SETUID"></a><dt ><strong><strong ><code >setuid=&lt;user&gt;</code></strong></strong></dt>
    Changes the <a href="socat.html#TYPE_USER">&lt;user&gt;</a> (owner) of the process after processing
    the address. This call might require root privilege. Please note that this
    option does not drop group related privileges. Check if option
    <a href="socat.html#OPTION_SUBSTUSER">su</a> better fits your needs.
-<a name="OPTION_SETUID_EARLY"></a><p><dt><strong><strong><code>setuid-early=&lt;user&gt;</code></strong></strong><dd>
+<a name="OPTION_SETUID_EARLY"></a><dt ><strong><strong ><code >setuid-early=&lt;user&gt;</code></strong></strong></dt>
    Like <a href="socat.html#OPTION_SETUID">setuid</a> but is performed before opening the
    address.
-<a name="OPTION_SUBSTUSER"></a><p><dt><strong><strong><code>su=&lt;user&gt;</code></strong></strong><dd>
+<a name="OPTION_SUBSTUSER"></a><dt ><strong><strong ><code >su=&lt;user&gt;</code></strong></strong></dt>
    Changes the <a href="socat.html#TYPE_USER">&lt;user&gt;</a> (owner) and groups of the process after
    processing the address (<a href="socat.html#EXAMPLE_OPTION_SUBSTUSER">example</a>). This call might require root privilege. 
-<a name="OPTION_SUBSTUSER_DELAYED"></a><p><dt><strong><strong><code>su-d=&lt;user&gt;</code></strong></strong><dd>
-   Short name for <code>substuser-delayed</code>.
+<a name="OPTION_SUBSTUSER_DELAYED"></a><dt ><strong><strong ><code >su-d=&lt;user&gt;</code></strong></strong></dt>
+   Short name for <code >substuser-delayed</code>.
    
    Changes the <a href="socat.html#TYPE_USER">&lt;user&gt;</a>
    (owner) and groups of the process after processing the address (<a href="socat.html#EXAMPLE_OPTION_SUBSTUSER_DELAYED">example</a>).
-   The user and his groups are retrieved <em>before</em> a possible
+   The user and his groups are retrieved <em >before</em> a possible
    
-<code>chroot()</code>
+<code >chroot()</code>
 . This call might require root privilege. 
-<a name="OPTION_SETPGID"></a><p><dt><strong><strong><code>setpgid=&lt;pid_t&gt;</code></strong></strong><dd>
+<a name="OPTION_SETPGID"></a><dt ><strong><strong ><code >setpgid=&lt;pid_t&gt;</code></strong></strong></dt>
    Makes the process a member of the specified process group
    <a href="socat.html#TYPE_PID_T">&lt;pid_t&gt;</a>. If no value 
    is given, or if the value is 0 or 1, the process becomes leader of a new
    process group. 
-<a name="OPTION_SETSID"></a><p><dt><strong><strong><code>setsid</code></strong></strong><dd>
+<a name="OPTION_SETSID"></a><dt ><strong><strong ><code >setsid</code></strong></strong></dt>
    Makes the process the leader of a new session (<a href="socat.html#EXAMPLE_OPTION_SETSID">example</a>).
-</dl>
+enddit()
 <p>
-<dl></dl><br>
+startdit()enddit()<br/>
 <p>
-<a name="GROUP_READLINE"></a><em><strong>READLINE option group</strong></em>
+<a name="GROUP_READLINE"></a><em ><strong >READLINE option group</strong></em>
 <p>
 These options apply to the readline address type.
-<dl>
-<a name="OPTION_HISTORY"></a><p><dt><strong><strong><code>history=&lt;filename&gt;</code></strong></strong><dd>
+startdit()
+<a name="OPTION_HISTORY"></a><dt ><strong><strong ><code >history=&lt;filename&gt;</code></strong></strong></dt>
    Reads and writes history from/to <a href="socat.html#TYPE_FILENAME">&lt;filename&gt;</a> (<a href="socat.html#EXAMPLE_OPTION_HISTORY">example</a>).
-<a name="OPTION_NOPROMPT"></a><p><dt><strong><strong><code>noprompt</code></strong></strong><dd>
+<a name="OPTION_NOPROMPT"></a><dt ><strong><strong ><code >noprompt</code></strong></strong></dt>
    Since version 1.4.0, socat per default tries to determine a prompt - 
    that is then passed to the readline call - by remembering the last
    incomplete line of the output. With this option, socat does not pass a
    prompt to readline, so it begins line editing in the first column
    of the terminal. 
-<a name="OPTION_NOECHO"></a><p><dt><strong><strong><code>noecho=&lt;pattern&gt;</code></strong></strong><dd>
+<a name="OPTION_NOECHO"></a><dt ><strong><strong ><code >noecho=&lt;pattern&gt;</code></strong></strong></dt>
    Specifies a regular pattern for a prompt that prevents the following input
    line from being displayed on the screen and from being added to the history.
    The prompt is defined as the text that was output to the readline address 
@@ -1872,146 +1916,147 @@
    typed. The pattern is a regular expression, e.g.
    "^[Pp]assword:.*$" or "([Uu]ser:|[Pp]assword:)". See regex(7) for details.
    (<a href="socat.html#EXAMPLE_OPTION_NOECHO">example</a>)
-<a name="OPTION_PROMPT"></a><p><dt><strong><strong><code>prompt=&lt;string&gt;</code></strong></strong><dd>
+<a name="OPTION_PROMPT"></a><dt ><strong><strong ><code >prompt=&lt;string&gt;</code></strong></strong></dt>
    Passes the string as prompt to the readline function. readline prints this
    prompt when stepping through the history. If this string matches a constant
    prompt issued by an interactive program on the other socat address,
    consistent look and feel can be achieved.
-</dl>
+enddit()
 <p>
-<dl></dl><br>
+startdit()enddit()<br/>
 <p>
-<a name="GROUP_APPLICATION"></a><em><strong>APPLICATION option group</strong></em>
+<a name="GROUP_APPLICATION"></a><em ><strong >APPLICATION option group</strong></em>
 <p>
 This group contains options that work at data level.
 Note that these options only apply to the "raw" data transferred by socat,
 but not to protocol data used by addresses like
 <a href="socat.html#ADDRESS_PROXY_CONNECT">PROXY</a>.
-<dl>
-<a name="OPTION_CR"></a><p><dt><strong><strong><code>cr</code></strong></strong><dd>
+startdit()
+<a name="OPTION_CR"></a><dt ><strong><strong ><code >cr</code></strong></strong></dt>
    Converts the default line termination character NL ('\n', 0x0a) to/from CR
    ('\r', 0x0d) when writing/reading on this channel. 
-<a name="OPTION_CRNL"></a><p><dt><strong><strong><code>crnl</code></strong></strong><dd>
+<a name="OPTION_CRNL"></a><dt ><strong><strong ><code >crnl</code></strong></strong></dt>
    Converts the default line termination character NL ('\n', 0x0a) to/from CRNL
    ("\r\n", 0x0d0a) when writing/reading on this channel (<a href="socat.html#EXAMPLE_OPTION_CRNL">example</a>).
    Note: socat simply strips all CR characters.
-<a name="OPTION_IGNOREEOF"></a><p><dt><strong><strong><code>ignoreeof</code></strong></strong><dd>
-   When EOF occurs on this channel, <strong>socat</strong> ignores it and tries to read more
+<a name="OPTION_IGNOREEOF"></a><dt ><strong><strong ><code >ignoreeof</code></strong></strong></dt>
+   When EOF occurs on this channel, <strong >socat</strong> ignores it and tries to read more
    data (like "tail -f") (<a href="socat.html#EXAMPLE_OPTION_IGNOREEOF">example</a>).
-<a name="OPTION_READBYTES"></a><p><dt><strong><strong><code>readbytes=&lt;bytes&gt;</code></strong></strong><dd>
-   <strong>socat</strong> reads only so many bytes from this address (the address provides
+<a name="OPTION_READBYTES"></a><dt ><strong><strong ><code >readbytes=&lt;bytes&gt;</code></strong></strong></dt>
+   <strong >socat</strong> reads only so many bytes from this address (the address provides
    only so many bytes for transfer and pretends to be at EOF afterwards).
    Must be greater than 0.
-<a name="OPTION_LOCKFILE"></a><p><dt><strong><strong><code>lockfile=&lt;filename&gt;</code></strong></strong><dd>
+<a name="OPTION_LOCKFILE"></a><dt ><strong><strong ><code >lockfile=&lt;filename&gt;</code></strong></strong></dt>
    If lockfile exists, exits with error. If lockfile does not exist, creates it
    and continues, unlinks lockfile on exit.
-<a name="OPTION_WAITLOCK"></a><p><dt><strong><strong><code>waitlock=&lt;filename&gt;</code></strong></strong><dd>
+<a name="OPTION_WAITLOCK"></a><dt ><strong><strong ><code >waitlock=&lt;filename&gt;</code></strong></strong></dt>
    If lockfile exists, waits until it disappears. When lockfile does not exist,
    creates it and continues, unlinks lockfile on exit.
-<a name="OPTION_ESCAPE"></a><p><dt><strong><strong><code>escape=&lt;int&gt;</code></strong></strong><dd>
+<a name="OPTION_ESCAPE"></a><dt ><strong><strong ><code >escape=&lt;int&gt;</code></strong></strong></dt>
    Specifies the numeric code of a character that triggers EOF on the input
    stream. It is useful with a terminal in raw mode
    (<a href="socat.html#EXAMPLE_OPTION_ESCAPE">example</a>).
-</dl>
+enddit()
 <p>
-<dl></dl><br>
+startdit()enddit()<br/>
 <p>
-<a name="GROUP_SOCKET"></a><em><strong>SOCKET option group</strong></em>
+<a name="GROUP_SOCKET"></a><em ><strong >SOCKET option group</strong></em>
 <p>
 These options are intended for all kinds of sockets, e.g. IP or UNIX domain. Most are applied with a 
-<code>setsockopt()</code>
+<code >setsockopt()</code>
  call.
-<dl>
-<a name="OPTION_BIND"></a><p><dt><strong><strong><code>bind=&lt;sockname&gt;</code></strong></strong><dd>
+startdit()
+<a name="OPTION_BIND"></a><dt ><strong><strong ><code >bind=&lt;sockname&gt;</code></strong></strong></dt>
    Binds the socket to the given socket address using the 
-<code>bind()</code>
+<code >bind()</code>
  system
    call. The form of &lt;sockname&gt; is socket domain dependent:
    IP4 and IP6 allow the form [hostname|hostaddress][:(service|port)] (<a href="socat.html#EXAMPLE_OPTION_BIND_TCP4">example</a>),
-   UNIX domain sockets require <a href="socat.html#TYPE_FILENAME">&lt;filename&gt;</a>.
-<a name="OPTION_CONNECT_TIMEOUT"></a><p><dt><strong><strong><code>connect-timeout=&lt;seconds&gt;</code></strong></strong><dd>
+   UNIX domain sockets require <a href="socat.html#TYPE_FILENAME">&lt;filename&gt;</a>,
+   VSOCK allow the form [cid][:(port)].
+<a name="OPTION_CONNECT_TIMEOUT"></a><dt ><strong><strong ><code >connect-timeout=&lt;seconds&gt;</code></strong></strong></dt>
    Abort the connection attempt after &lt;seconds&gt; [<a href="socat.html#TYPE_TIMEVAL">timeval</a>]
    with error status.
-<a name="OPTION_SO_BINDTODEVICE"></a><p><dt><strong><strong><code>so-bindtodevice=&lt;interface&gt;</code></strong></strong><dd>
+<a name="OPTION_SO_BINDTODEVICE"></a><dt ><strong><strong ><code >so-bindtodevice=&lt;interface&gt;</code></strong></strong></dt>
    Binds the socket to the given <a href="socat.html#TYPE_INTERFACE">&lt;interface&gt;</a>.
    This option might require root privilege.
-<a name="OPTION_SO_BROADCAST"></a><p><dt><strong><strong><code>broadcast</code></strong></strong><dd>
+<a name="OPTION_SO_BROADCAST"></a><dt ><strong><strong ><code >broadcast</code></strong></strong></dt>
    For datagram sockets, allows sending to broadcast addresses and receiving
    packets addressed to broadcast addresses. 
 
-<a name="OPTION_DEBUG"></a><p><dt><strong><strong><code>debug</code></strong></strong><dd>
+<a name="OPTION_DEBUG"></a><dt ><strong><strong ><code >debug</code></strong></strong></dt>
    Enables socket debugging.
-<a name="OPTION_DONTROUTE"></a><p><dt><strong><strong><code>dontroute</code></strong></strong><dd>
+<a name="OPTION_DONTROUTE"></a><dt ><strong><strong ><code >dontroute</code></strong></strong></dt>
    Only communicates with directly connected peers, does not use routers.
-<a name="OPTION_KEEPALIVE"></a><p><dt><strong><strong><code>keepalive</code></strong></strong><dd>
+<a name="OPTION_KEEPALIVE"></a><dt ><strong><strong ><code >keepalive</code></strong></strong></dt>
    Enables sending keepalives on the socket.
-<a name="OPTION_LINGER"></a><p><dt><strong><strong><code>linger=&lt;seconds&gt;</code></strong></strong><dd>
+<a name="OPTION_LINGER"></a><dt ><strong><strong ><code >linger=&lt;seconds&gt;</code></strong></strong></dt>
    Blocks 
-<code>shutdown()</code>
+<code >shutdown()</code>
  or 
-<code>close()</code>
+<code >close()</code>
  until data transfers have finished
    or the given timeout [<a href="socat.html#TYPE_INT">int</a>] expired. 
 
-<a name="OPTION_OOBINLINE"></a><p><dt><strong><strong><code>oobinline</code></strong></strong><dd>
+<a name="OPTION_OOBINLINE"></a><dt ><strong><strong ><code >oobinline</code></strong></strong></dt>
    Places out-of-band data in the input data stream.
-<a name="OPTION_PRIORITY"></a><p><dt><strong><strong><code>priority=&lt;priority&gt;</code></strong></strong><dd>
+<a name="OPTION_PRIORITY"></a><dt ><strong><strong ><code >priority=&lt;priority&gt;</code></strong></strong></dt>
    Sets the protocol defined &lt;priority&gt; [<a href="socat.html#TYPE_INT">&lt;int&gt;</a>] for outgoing
    packets. 
-<a name="OPTION_RCVBUF"></a><p><dt><strong><strong><code>rcvbuf=&lt;bytes&gt;</code></strong></strong><dd>
+<a name="OPTION_RCVBUF"></a><dt ><strong><strong ><code >rcvbuf=&lt;bytes&gt;</code></strong></strong></dt>
    Sets the size of the receive buffer after the 
-<code>socket()</code>
+<code >socket()</code>
  call to
    &lt;bytes&gt; [<a href="socat.html#TYPE_INT">int</a>].  With TCP
    sockets, this value corresponds to the socket's maximal window size.
-<a name="OPTION_RCVBUF_LATE"></a><p><dt><strong><strong><code>rcvbuf-late=&lt;bytes&gt;</code></strong></strong><dd>
+<a name="OPTION_RCVBUF_LATE"></a><dt ><strong><strong ><code >rcvbuf-late=&lt;bytes&gt;</code></strong></strong></dt>
    Sets the size of the receive buffer when the socket is already
    connected to &lt;bytes&gt; [<a href="socat.html#TYPE_INT">int</a>]. 
    With TCP sockets, this value corresponds to the socket's 
    maximal window size. 
-<a name="OPTION_RCVLOWAT"></a><p><dt><strong><strong><code>rcvlowat=&lt;bytes&gt;</code></strong></strong><dd>
+<a name="OPTION_RCVLOWAT"></a><dt ><strong><strong ><code >rcvlowat=&lt;bytes&gt;</code></strong></strong></dt>
    Specifies the minimum number of received bytes [<a href="socat.html#TYPE_INT">int</a>] until
-   the socket layer will pass the buffered data to <strong>socat</strong>. 
-<a name="OPTION_REUSEADDR"></a><p><dt><strong><strong><code>reuseaddr</code></strong></strong><dd>
+   the socket layer will pass the buffered data to <strong >socat</strong>. 
+<a name="OPTION_REUSEADDR"></a><dt ><strong><strong ><code >reuseaddr</code></strong></strong></dt>
    Allows other sockets to bind to an address even if parts of it (e.g. the
-   local port) are already in use by <strong>socat</strong> (<a href="socat.html#EXAMPLE_OPTION_REUSEADDR">example</a>). 
-<a name="OPTION_SNDBUF"></a><p><dt><strong><strong><code>sndbuf=&lt;bytes&gt;</code></strong></strong><dd>
+   local port) are already in use by <strong >socat</strong> (<a href="socat.html#EXAMPLE_OPTION_REUSEADDR">example</a>). 
+<a name="OPTION_SNDBUF"></a><dt ><strong><strong ><code >sndbuf=&lt;bytes&gt;</code></strong></strong></dt>
    Sets the size of the send buffer after the 
-<code>socket()</code>
+<code >socket()</code>
  call to
    &lt;bytes&gt; [<a href="socat.html#TYPE_INT">int</a>].
-<a name="OPTION_SNDBUF_LATE"></a><p><dt><strong><strong><code>sndbuf-late=&lt;bytes&gt;</code></strong></strong><dd>
+<a name="OPTION_SNDBUF_LATE"></a><dt ><strong><strong ><code >sndbuf-late=&lt;bytes&gt;</code></strong></strong></dt>
    Sets the size of the send buffer when the socket is connected to
    &lt;bytes&gt; [<a href="socat.html#TYPE_INT">int</a>].
-<a name="OPTION_SNDLOWAT"></a><p><dt><strong><strong><code>sndlowat=&lt;bytes&gt;</code></strong></strong><dd>
+<a name="OPTION_SNDLOWAT"></a><dt ><strong><strong ><code >sndlowat=&lt;bytes&gt;</code></strong></strong></dt>
    Specifies the minimum number of bytes in the send buffer until the socket
    layer will send the data to &lt;bytes&gt; [<a href="socat.html#TYPE_INT">int</a>].
-<a name="OPTION_PROTOCOL_FAMILY"></a><p><dt><strong><strong><code>pf=&lt;string&gt;</code></strong></strong><dd>
+<a name="OPTION_PROTOCOL_FAMILY"></a><dt ><strong><strong ><code >pf=&lt;string&gt;</code></strong></strong></dt>
    Forces the use of the specified IP version or protocol. &lt;string&gt; can be
    something like "ip4" or "ip6". The resulting value is
    used as first argument to the 
-<code>socket()</code>
+<code >socket()</code>
  or 
-<code>socketpair()</code>
+<code >socketpair()</code>
  calls.
    This option affects address resolution and the required syntax of bind and
    range options.
-<a name="OPTION_SO_TYPE"></a><p><dt><strong><strong><code>type=&lt;type&gt;</code></strong></strong><dd>
+<a name="OPTION_SO_TYPE"></a><dt ><strong><strong ><code >type=&lt;type&gt;</code></strong></strong></dt>
    Sets the type of the socket, specified as second argument to the
    
-<code>socket()</code>
+<code >socket()</code>
  or 
-<code>socketpair()</code>
+<code >socketpair()</code>
  calls, to &lt;type&gt;
    [<a href="socat.html#TYPE_INT">int</a>]. Address resolution is not affected by this option.
    Under Linux, 1 means stream oriented socket, 2 means datagram socket, and 3
    means raw socket.
-<a name="OPTION_SO_PROTOTYPE"></a><p><dt><strong><strong><code>prototype</code></strong></strong><dd>
+<a name="OPTION_SO_PROTOTYPE"></a><dt ><strong><strong ><code >prototype</code></strong></strong></dt>
    Sets the protocol of the socket, specified as third argument to the
    
-<code>socket()</code>
+<code >socket()</code>
  or 
-<code>socketpair()</code>
+<code >socketpair()</code>
  calls, to &lt;prototype&gt;
    [<a href="socat.html#TYPE_INT">int</a>]. Address resolution is not affected by this option.
    6 means TCP, 17 means UDP.
@@ -2029,285 +2074,285 @@
 
 
 
-<a name="OPTION_REUSEPORT"></a><p><dt><strong><strong><code>reuseport</code></strong></strong><dd>
+<a name="OPTION_REUSEPORT"></a><dt ><strong><strong ><code >reuseport</code></strong></strong></dt>
    Set the 
-<code>SO_REUSEPORT</code>
+<code >SO_REUSEPORT</code>
  socket option.
 
 
 
 
 
-<a name="OPTION_SO_TIMESTAMP"></a><p><dt><strong><strong><code>so-timestamp</code></strong></strong><dd>
+<a name="OPTION_SO_TIMESTAMP"></a><dt ><strong><strong ><code >so-timestamp</code></strong></strong></dt>
    Sets the SO_TIMESTAMP socket option. This enables receiving and logging of
    timestamp ancillary messages.
-<a name="OPTION_SETSOCKOPT_INT"></a><p><dt><strong><strong><code>setsockopt-int=&lt;level&gt;:&lt;optname&gt;:&lt;optval&gt;</code></strong></strong><dd>
-   Invokes <code>setsockopt()</code> for the socket with the given parameters. <code>level</code>
-   [<a href="socat.html#TYPE_INT">int</a>] is used as second argument to <code>setsockopt()</code> and
+<a name="OPTION_SETSOCKOPT_INT"></a><dt ><strong><strong ><code >setsockopt-int=&lt;level&gt;:&lt;optname&gt;:&lt;optval&gt;</code></strong></strong></dt>
+   Invokes <code >setsockopt()</code> for the socket with the given parameters. <code >level</code>
+   [<a href="socat.html#TYPE_INT">int</a>] is used as second argument to <code >setsockopt()</code> and
    specifies the layer, e.g. SOL_TCP for TCP (6 on Linux), or SOL_SOCKET for
-   the socket layer (1 on Linux). <code>optname</code> [<a href="socat.html#TYPE_INT">int</a>] is the
-   third argument to <code>setsockopt()</code> and tells which socket option is to be
+   the socket layer (1 on Linux). <code >optname</code> [<a href="socat.html#TYPE_INT">int</a>] is the
+   third argument to <code >setsockopt()</code> and tells which socket option is to be
    set. For the actual numbers you might have to look up the appropriate include
-   files of your system. The 4th <code>setsockopt()</code> parameter, <code>value</code>
+   files of your system. The 4th <code >setsockopt()</code> parameter, <code >value</code>
    [<a href="socat.html#TYPE_INT">int</a>], is passed to the function per pointer, and for the
    length parameter sizeof(int) is taken implicitely.
-<a name="OPTION_SETSOCKOPT_BIN"></a><p><dt><strong><strong><code>setsockopt-bin=&lt;level&gt;:&lt;optname&gt;:&lt;optval&gt;</code></strong></strong><dd>
-   Like <code>setsockopt-int</code>, but &lt;optval&gt; must be provided in
+<a name="OPTION_SETSOCKOPT_BIN"></a><dt ><strong><strong ><code >setsockopt-bin=&lt;level&gt;:&lt;optname&gt;:&lt;optval&gt;</code></strong></strong></dt>
+   Like <code >setsockopt-int</code>, but &lt;optval&gt; must be provided in
    <a href="socat.html#TYPE_DATA">dalan</a> format and specifies an arbitrary sequence of bytes;
    the length parameter is automatically derived from the data.
-<a name="OPTION_SETSOCKOPT_STRING"></a><p><dt><strong><strong><code>setsockopt-string=&lt;level&gt;:&lt;optname&gt;:&lt;optval&gt;</code></strong></strong><dd>
-   Like <code>setsockopt-int</code>, but &lt;optval&gt; must be a <a href="socat.html#TYPE_STRING">string</a>.
+<a name="OPTION_SETSOCKOPT_STRING"></a><dt ><strong><strong ><code >setsockopt-string=&lt;level&gt;:&lt;optname&gt;:&lt;optval&gt;</code></strong></strong></dt>
+   Like <code >setsockopt-int</code>, but &lt;optval&gt; must be a <a href="socat.html#TYPE_STRING">string</a>.
    This string is passed to the function with trailing null character, and the
    length parameter is automatically derived from the data.
-</dl>
+enddit()
 <p>
-<dl></dl><br>
+startdit()enddit()<br/>
 <p>
-<a name="GROUP_SOCK_UNIX"></a><em><strong>UNIX option group</strong></em>
+<a name="GROUP_SOCK_UNIX"></a><em ><strong >UNIX option group</strong></em>
 <p>
 These options apply to UNIX domain based addresses.
-<dl>
-<a name="OPTION_UNIX_TIGHTSOCKLEN"></a><p><dt><strong><strong><code>unix-tightsocklen=[0|1]</code></strong></strong><dd>
+startdit()
+<a name="OPTION_UNIX_TIGHTSOCKLEN"></a><dt ><strong><strong ><code >unix-tightsocklen=[0|1]</code></strong></strong></dt>
    On socket operations, pass a socket address length that does not include the
    whole 
-<code>struct sockaddr_un</code>
+<code >struct sockaddr_un</code>
  record but (besides other components) only
    the relevant part of the filename or abstract string. Default is 1.
-</dl>
+enddit()
 <p>
 <a name="GROUP_IP4"></a>
-<a name="GROUP_IP"></a><em><strong>IP4 and IP6 option groups</strong></em>
+<a name="GROUP_IP"></a><em ><strong >IP4 and IP6 option groups</strong></em>
 <p>
 These options can be used with IPv4 and IPv6 based sockets.
-<dl>
-<a name="OPTION_TOS"></a><p><dt><strong><strong><code>tos=&lt;tos&gt;</code></strong></strong><dd>
+startdit()
+<a name="OPTION_TOS"></a><dt ><strong><strong ><code >tos=&lt;tos&gt;</code></strong></strong></dt>
    Sets the TOS (type of service) field of outgoing packets to &lt;tos&gt;
    [<a href="socat.html#TYPE_BYTE">byte</a>] (see RFC 791).
-<a name="OPTION_TTL"></a><p><dt><strong><strong><code>ttl=&lt;ttl&gt;</code></strong></strong><dd>
+<a name="OPTION_TTL"></a><dt ><strong><strong ><code >ttl=&lt;ttl&gt;</code></strong></strong></dt>
    Sets the TTL (time to live) field of outgoing packets to &lt;ttl&gt;
    [<a href="socat.html#TYPE_BYTE">byte</a>].
-<a name="OPTION_IPOPTIONS"></a><p><dt><strong><strong><code>ip-options=&lt;data&gt;</code></strong></strong><dd>
+<a name="OPTION_IPOPTIONS"></a><dt ><strong><strong ><code >ip-options=&lt;data&gt;</code></strong></strong></dt>
    Sets IP options like source routing. Must be given in binary form,
    recommended format is a leading "x" followed by an even number of hex
    digits. This option may be used multiple times, data are appended.
    E.g., to connect to host 10.0.0.1 via some gateway using a loose source
    route, use the gateway as address parameter and set a loose source route
    using the option 
-<code>ip-options=x8307040a000001</code>
-.<br>
-   IP options are defined in RFC 791. <br>
+<code >ip-options=x8307040a000001</code>
+.<br/>
+   IP options are defined in RFC 791. <br/>
 
-<a name="OPTION_MTUDISCOVER"></a><p><dt><strong><strong><code>mtudiscover=&lt;0|1|2&gt;</code></strong></strong><dd>
+<a name="OPTION_MTUDISCOVER"></a><dt ><strong><strong ><code >mtudiscover=&lt;0|1|2&gt;</code></strong></strong></dt>
    Takes 0, 1, 2 to never, want, or always use path MTU discover on this
    socket. 
 
 
 
-<a name="OPTION_IP_PKTINFO"></a><p><dt><strong><strong><code>ip-pktinfo</code></strong></strong><dd>
+<a name="OPTION_IP_PKTINFO"></a><dt ><strong><strong ><code >ip-pktinfo</code></strong></strong></dt>
    Sets the IP_PKTINFO socket option. This enables receiving and logging of
    ancillary messages containing destination address and interface (Linux)
    (<a href="socat.html#EXAMPLE_ANCILLARY">example</a>). 
 
-<a name="OPTION_IP_RECVERR"></a><p><dt><strong><strong><code>ip-recverr</code></strong></strong><dd>
+<a name="OPTION_IP_RECVERR"></a><dt ><strong><strong ><code >ip-recverr</code></strong></strong></dt>
    Sets the IP_RECVERR socket option. This enables receiving and logging of
    ancillary messages containing detailed error information.
-<a name="OPTION_IP_RECVOPTS"></a><p><dt><strong><strong><code>ip-recvopts</code></strong></strong><dd>
+<a name="OPTION_IP_RECVOPTS"></a><dt ><strong><strong ><code >ip-recvopts</code></strong></strong></dt>
    Sets the IP_RECVOPTS socket option. This enables receiving and logging of IP
    options ancillary messages (Linux, *BSD).
-<a name="OPTION_IP_RECVTOS"></a><p><dt><strong><strong><code>ip-recvtos</code></strong></strong><dd>
+<a name="OPTION_IP_RECVTOS"></a><dt ><strong><strong ><code >ip-recvtos</code></strong></strong></dt>
    Sets the IP_RECVTOS socket option. This enables receiving and logging of TOS
    (type of service) ancillary messages (Linux).
-<a name="OPTION_IP_RECVTTL"></a><p><dt><strong><strong><code>ip-recvttl</code></strong></strong><dd>
+<a name="OPTION_IP_RECVTTL"></a><dt ><strong><strong ><code >ip-recvttl</code></strong></strong></dt>
    Sets the IP_RECVTTL socket option. This enables receiving and logging of TTL
    (time to live) ancillary messages (Linux, *BSD).
 
-<a name="OPTION_IP_RECVDSTADDR"></a><p><dt><strong><strong><code>ip-recvdstaddr</code></strong></strong><dd>
+<a name="OPTION_IP_RECVDSTADDR"></a><dt ><strong><strong ><code >ip-recvdstaddr</code></strong></strong></dt>
    Sets the IP_RECVDSTADDR socket option. This enables receiving and logging of
    ancillary messages containing destination address (*BSD)
    (<a href="socat.html#EXAMPLE_ANCILLARY">example</a>).
-<a name="OPTION_IP_RECVIF"></a><p><dt><strong><strong><code>ip-recvif</code></strong></strong><dd>
+<a name="OPTION_IP_RECVIF"></a><dt ><strong><strong ><code >ip-recvif</code></strong></strong></dt>
    Sets the IP_RECVIF socket option. This enables receiving and logging of
    interface ancillary messages (*BSD) (<a href="socat.html#EXAMPLE_ANCILLARY">example</a>).
 
 <a name="OPTION_IP_ADD_MEMBERSHIP"></a>
-<p><dt><strong><strong><code>ip-add-membership=&lt;multicast-address:interface-address&gt;</code></strong></strong><dd>
-<p><dt><strong><strong><code>ip-add-membership=&lt;multicast-address:interface-name&gt;</code></strong></strong><dd>
-<p><dt><strong><strong><code>ip-add-membership=&lt;multicast-address:interface-index&gt;</code></strong></strong><dd>
-<p><dt><strong><strong><code>ip-add-membership=&lt;multicast-address:interface-address:interface-name&gt;</code></strong></strong><dd>
-<p><dt><strong><strong><code>ip-add-membership=&lt;multicast-address:interface-address:interface-index&gt;</code></strong></strong><dd>
+<dt ><strong><strong ><code >ip-add-membership=&lt;multicast-address:interface-address&gt;</code></strong></strong></dt>
+<dt ><strong><strong ><code >ip-add-membership=&lt;multicast-address:interface-name&gt;</code></strong></strong></dt>
+<dt ><strong><strong ><code >ip-add-membership=&lt;multicast-address:interface-index&gt;</code></strong></strong></dt>
+<dt ><strong><strong ><code >ip-add-membership=&lt;multicast-address:interface-address:interface-name&gt;</code></strong></strong></dt>
+<dt ><strong><strong ><code >ip-add-membership=&lt;multicast-address:interface-address:interface-index&gt;</code></strong></strong></dt>
    Makes the socket member of the specified multicast group. This is currently
    only implemented for IPv4. The option takes the IP address of the multicast
    group and info about the desired network interface. The most common syntax
    is the first one, while the others are only available on systems that
-   provide <code>struct mreqn</code> (Linux).<br>
+   provide <code >struct mreqn</code> (Linux).<br/>
    The indices of active network interfaces can be shown using the utility
-   <strong>procan</strong>.
+   <strong >procan</strong>.
 <a name="OPTION_IP_MULTICAST_IF"></a>
-<p><dt><strong><strong><code>ip-multicast-if=&lt;hostname&gt;</code></strong></strong><dd>
+<dt ><strong><strong ><code >ip-multicast-if=&lt;hostname&gt;</code></strong></strong></dt>
    Specifies hostname or address of the network interface to be used for
    multicast traffic.
 <a name="OPTION_IP_MULTICAST_LOOP"></a>
-<p><dt><strong><strong><code>ip-multicast-loop=&lt;bool&gt;</code></strong></strong><dd>
+<dt ><strong><strong ><code >ip-multicast-loop=&lt;bool&gt;</code></strong></strong></dt>
    Specifies if outgoing multicast traffic should loop back to the interface.
 <a name="OPTION_IP_MULTICAST_TTL"></a>
-<p><dt><strong><strong><code>ip-multicast-ttl=&lt;byte&gt;</code></strong></strong><dd>
+<dt ><strong><strong ><code >ip-multicast-ttl=&lt;byte&gt;</code></strong></strong></dt>
    Sets the TTL used for outgoing multicast traffic. Default is 1.
-<a name="OPTION_RES_DEBUG"></a><p><dt><strong><strong><code>res-debug</code></strong></strong><dd>
-<a name="OPTION_RES_AAONLY"></a><p><dt><strong><strong><code>res-aaonly</code></strong></strong><dd>
-<a name="OPTION_RES_USEVC"></a><p><dt><strong><strong><code>res-usevc</code></strong></strong><dd>
-<a name="OPTION_RES_PRIMARY"></a><p><dt><strong><strong><code>res-primary</code></strong></strong><dd>
-<a name="OPTION_RES_IGNTC"></a><p><dt><strong><strong><code>res-igntc</code></strong></strong><dd>
-<a name="OPTION_RES_RECURSE"></a><p><dt><strong><strong><code>res-recurse</code></strong></strong><dd>
-<a name="OPTION_RES_DEFNAMES"></a><p><dt><strong><strong><code>res-defnames</code></strong></strong><dd>
-<a name="OPTION_RES_STAYOPEN"></a><p><dt><strong><strong><code>res-stayopen</code></strong></strong><dd>
-<a name="OPTION_RES_DNSRCH"></a><p><dt><strong><strong><code>res-dnsrch</code></strong></strong><dd>
+<a name="OPTION_RES_DEBUG"></a><dt ><strong><strong ><code >res-debug</code></strong></strong></dt>
+<a name="OPTION_RES_AAONLY"></a><dt ><strong><strong ><code >res-aaonly</code></strong></strong></dt>
+<a name="OPTION_RES_USEVC"></a><dt ><strong><strong ><code >res-usevc</code></strong></strong></dt>
+<a name="OPTION_RES_PRIMARY"></a><dt ><strong><strong ><code >res-primary</code></strong></strong></dt>
+<a name="OPTION_RES_IGNTC"></a><dt ><strong><strong ><code >res-igntc</code></strong></strong></dt>
+<a name="OPTION_RES_RECURSE"></a><dt ><strong><strong ><code >res-recurse</code></strong></strong></dt>
+<a name="OPTION_RES_DEFNAMES"></a><dt ><strong><strong ><code >res-defnames</code></strong></strong></dt>
+<a name="OPTION_RES_STAYOPEN"></a><dt ><strong><strong ><code >res-stayopen</code></strong></strong></dt>
+<a name="OPTION_RES_DNSRCH"></a><dt ><strong><strong ><code >res-dnsrch</code></strong></strong></dt>
    These options set the corresponding resolver (name resolution) option flags.
    Append "=0" to clear a default option. See man resolver(5) for more
    information on these options. Note: these options are valid only for the
    address they are applied to.
 <p>
-</dl>
+enddit()
 <p>
-<dl></dl><br>
+startdit()enddit()<br/>
 <p>
-<a name="GROUP_IP6"></a><em><strong>IP6 option group</strong></em>
+<a name="GROUP_IP6"></a><em ><strong >IP6 option group</strong></em>
 <p>
 These options can only be used on IPv6 based sockets. See <a href="socat.html#GROUP_IP">IP
 options</a> for options that can be applied to both IPv4 and IPv6
 sockets.
-<dl>
-<a name="OPTION_IPV6_V6ONLY"></a><p><dt><strong><strong><code>ipv6only=&lt;bool&gt;</code></strong></strong><dd>
+startdit()
+<a name="OPTION_IPV6_V6ONLY"></a><dt ><strong><strong ><code >ipv6only=&lt;bool&gt;</code></strong></strong></dt>
    Sets the IPV6_V6ONLY socket option. If 0, the TCP stack will also accept
    connections using IPv4 protocol on the same port. The default is system
    dependent.
-<a name="OPTION_IPV6_RECVDSTOPTS"></a><p><dt><strong><strong><code>ipv6-recvdstopts</code></strong></strong><dd>
+<a name="OPTION_IPV6_RECVDSTOPTS"></a><dt ><strong><strong ><code >ipv6-recvdstopts</code></strong></strong></dt>
    Sets the IPV6_RECVDSTOPTS socket option. This enables receiving and logging
    of ancillary messages containing the destination options.
-<a name="OPTION_IPV6_RECVHOPLIMIT"></a><p><dt><strong><strong><code>ipv6-recvhoplimit</code></strong></strong><dd>
+<a name="OPTION_IPV6_RECVHOPLIMIT"></a><dt ><strong><strong ><code >ipv6-recvhoplimit</code></strong></strong></dt>
    Sets the IPV6_RECVHOPLIMIT socket option. This enables receiving and logging
    of ancillary messages containing the hoplimit.
-<a name="OPTION_IPV6_RECVHOPOPTS"></a><p><dt><strong><strong><code>ipv6-recvhopopts</code></strong></strong><dd>
+<a name="OPTION_IPV6_RECVHOPOPTS"></a><dt ><strong><strong ><code >ipv6-recvhopopts</code></strong></strong></dt>
    Sets the IPV6_RECVHOPOPTS socket option. This enables receiving and logging
    of ancillary messages containing the hop options.
-<a name="OPTION_IPV6_RECVPKTINFO"></a><p><dt><strong><strong><code>ipv6-recvpktinfo</code></strong></strong><dd>
+<a name="OPTION_IPV6_RECVPKTINFO"></a><dt ><strong><strong ><code >ipv6-recvpktinfo</code></strong></strong></dt>
    Sets the IPV6_RECVPKTINFO socket option. This enables receiving and logging
    of ancillary messages containing destination address and interface.
-<a name="OPTION_IPV6_UNICAST_HOPS"></a><p><dt><strong><strong><code>ipv6-unicast-hops=link(TYPE_INT)(&lt;int&gt;)</code></strong></strong><dd>
+<a name="OPTION_IPV6_UNICAST_HOPS"></a><dt ><strong><strong ><code >ipv6-unicast-hops=link(TYPE_INT)(&lt;int&gt;)</code></strong></strong></dt>
    Sets the IPV6_UNICAST_HOPS socket option. This sets the hop count limit
    (TTL) for outgoing unicast packets.
-<a name="OPTION_IPV6_RECVRTHDR"></a><p><dt><strong><strong><code>ipv6-recvrthdr</code></strong></strong><dd>
+<a name="OPTION_IPV6_RECVRTHDR"></a><dt ><strong><strong ><code >ipv6-recvrthdr</code></strong></strong></dt>
    Sets the IPV6_RECVRTHDR socket option. This enables receiving and logging
    of ancillary messages containing routing information.
-<a name="OPTION_IPV6_TCLASS"></a><p><dt><strong><strong><code>ipv6-tclass</code></strong></strong><dd>
+<a name="OPTION_IPV6_TCLASS"></a><dt ><strong><strong ><code >ipv6-tclass</code></strong></strong></dt>
    Sets the IPV6_TCLASS socket option. This sets the transfer class of outgoing
    packets.
-<a name="OPTION_IPV6_RECVTCLASS"></a><p><dt><strong><strong><code>ipv6-recvtclass</code></strong></strong><dd>
+<a name="OPTION_IPV6_RECVTCLASS"></a><dt ><strong><strong ><code >ipv6-recvtclass</code></strong></strong></dt>
    Sets the IPV6_RECVTCLASS socket option. This enables receiving and logging
    of ancillary messages containing the transfer class.
-</dl>
+enddit()
 <p>
-<dl></dl><br>
+startdit()enddit()<br/>
 <p>
-<a name="GROUP_TCP"></a><em><strong>TCP option group</strong></em>
+<a name="GROUP_TCP"></a><em ><strong >TCP option group</strong></em>
 <p>
 These options may be applied to TCP sockets. They work by invoking 
-<code>setsockopt()</code>
+<code >setsockopt()</code>
  with the appropriate parameters.
-<dl>
-<a name="OPTION_CORK"></a><p><dt><strong><strong><code>cork</code></strong></strong><dd>
+startdit()
+<a name="OPTION_CORK"></a><dt ><strong><strong ><code >cork</code></strong></strong></dt>
    Doesn't send packets smaller than MSS (maximal segment size).
-<a name="OPTION_DEFER-ACCEPT"></a><p><dt><strong><strong><code>defer-accept</code></strong></strong><dd>
+<a name="OPTION_DEFER-ACCEPT"></a><dt ><strong><strong ><code >defer-accept</code></strong></strong></dt>
    While listening, accepts connections only when data from the peer arrived.
-<a name="OPTION_KEEPCNT"></a><p><dt><strong><strong><code>keepcnt=&lt;count&gt;</code></strong></strong><dd>
+<a name="OPTION_KEEPCNT"></a><dt ><strong><strong ><code >keepcnt=&lt;count&gt;</code></strong></strong></dt>
    Sets the number of keepalives before shutting down the socket to
    &lt;count&gt; [<a href="socat.html#TYPE_INT">int</a>].
-<a name="OPTION_KEEPIDLE"></a><p><dt><strong><strong><code>keepidle=&lt;seconds&gt;</code></strong></strong><dd>
+<a name="OPTION_KEEPIDLE"></a><dt ><strong><strong ><code >keepidle=&lt;seconds&gt;</code></strong></strong></dt>
    Sets the idle time before sending the first keepalive to &lt;seconds&gt;
    [<a href="socat.html#TYPE_INT">int</a>].
-<a name="OPTION_KEEPINTVL"></a><p><dt><strong><strong><code>keepintvl=&lt;seconds&gt;</code></strong></strong><dd>
+<a name="OPTION_KEEPINTVL"></a><dt ><strong><strong ><code >keepintvl=&lt;seconds&gt;</code></strong></strong></dt>
    Sets the interval between two keepalives to &lt;seconds&gt;
    [<a href="socat.html#TYPE_INT">int</a>]. 
-<a name="OPTION_LINGER2"></a><p><dt><strong><strong><code>linger2=&lt;seconds&gt;</code></strong></strong><dd>
+<a name="OPTION_LINGER2"></a><dt ><strong><strong ><code >linger2=&lt;seconds&gt;</code></strong></strong></dt>
    Sets the time to keep the socket in FIN-WAIT-2 state to &lt;seconds&gt;
    [<a href="socat.html#TYPE_INT">int</a>].
-<a name="OPTION_MSS"></a><p><dt><strong><strong><code>mss=&lt;bytes&gt;</code></strong></strong><dd>
+<a name="OPTION_MSS"></a><dt ><strong><strong ><code >mss=&lt;bytes&gt;</code></strong></strong></dt>
    Sets the MSS (maximum segment size) after the 
-<code>socket()</code>
+<code >socket()</code>
  call to &lt;bytes&gt;
    [<a href="socat.html#TYPE_INT">int</a>]. This
    value is then proposed to the peer with the SYN or SYN/ACK packet
    (<a href="socat.html#EXAMPLE_OPTION_MSS">example</a>). 
-<a name="OPTION_MSS_LATE"></a><p><dt><strong><strong><code>mss-late=&lt;bytes&gt;</code></strong></strong><dd>
+<a name="OPTION_MSS_LATE"></a><dt ><strong><strong ><code >mss-late=&lt;bytes&gt;</code></strong></strong></dt>
    Sets the MSS of the socket after connection has been established to &lt;bytes&gt;
    [<a href="socat.html#TYPE_INT">int</a>].
-<a name="OPTION_NODELAY"></a><p><dt><strong><strong><code>nodelay</code></strong></strong><dd>
+<a name="OPTION_NODELAY"></a><dt ><strong><strong ><code >nodelay</code></strong></strong></dt>
    Turns off the Nagle algorithm for measuring the RTT (round trip time).
-<a name="OPTION_RFC1323"></a><p><dt><strong><strong><code>rfc1323</code></strong></strong><dd>
+<a name="OPTION_RFC1323"></a><dt ><strong><strong ><code >rfc1323</code></strong></strong></dt>
    Enables RFC1323 TCP options: TCP window scale, round-trip time measurement
    (RTTM), and protect against wrapped sequence numbers (PAWS) (AIX).
-<a name="OPTION_STDURG"></a><p><dt><strong><strong><code>stdurg</code></strong></strong><dd>
+<a name="OPTION_STDURG"></a><dt ><strong><strong ><code >stdurg</code></strong></strong></dt>
    Enables RFC1122 compliant urgent pointer handling (AIX).
-<a name="OPTION_SYNCNT"></a><p><dt><strong><strong><code>syncnt=&lt;count&gt;</code></strong></strong><dd>
+<a name="OPTION_SYNCNT"></a><dt ><strong><strong ><code >syncnt=&lt;count&gt;</code></strong></strong></dt>
    Sets the maximal number of SYN retransmits during connect to &lt;count&gt;
    [<a href="socat.html#TYPE_INT">int</a>].
 
 
-<a name="OPTION_TCP_MD5SIG"></a><p><dt><strong><strong><code>md5sig</code></strong></strong><dd>
+<a name="OPTION_TCP_MD5SIG"></a><dt ><strong><strong ><code >md5sig</code></strong></strong></dt>
    Enables generation of MD5 digests on the packets (FreeBSD).
-<a name="OPTION_TCP_NOOPT"></a><p><dt><strong><strong><code>noopt</code></strong></strong><dd>
+<a name="OPTION_TCP_NOOPT"></a><dt ><strong><strong ><code >noopt</code></strong></strong></dt>
    Disables use of TCP options (FreeBSD, MacOSX).
-<a name="OPTION_TCP_NOPUSH"></a><p><dt><strong><strong><code>nopush</code></strong></strong><dd>
+<a name="OPTION_TCP_NOPUSH"></a><dt ><strong><strong ><code >nopush</code></strong></strong></dt>
    sets the TCP_NOPUSH socket option (FreeBSD, MacOSX).
-<a name="OPTION_TCP_SACK_DISABLE"></a><p><dt><strong><strong><code>sack-disable</code></strong></strong><dd>
+<a name="OPTION_TCP_SACK_DISABLE"></a><dt ><strong><strong ><code >sack-disable</code></strong></strong></dt>
    Disables use the selective acknowledge feature (OpenBSD).
-<a name="OPTION_TCP_SIGNATURE_ENABLE"></a><p><dt><strong><strong><code>signature-enable</code></strong></strong><dd>
+<a name="OPTION_TCP_SIGNATURE_ENABLE"></a><dt ><strong><strong ><code >signature-enable</code></strong></strong></dt>
    Enables generation of MD5 digests on the packets (OpenBSD).
-<a name="OPTION_TCP_ABORT_THRESHOLD"></a><p><dt><strong><strong><code>abort-threshold=&lt;milliseconds&gt;</code></strong></strong><dd>
+<a name="OPTION_TCP_ABORT_THRESHOLD"></a><dt ><strong><strong ><code >abort-threshold=&lt;milliseconds&gt;</code></strong></strong></dt>
    Sets the time to wait for an answer of the peer on an established connection
    (HP-UX).
-<a name="OPTION_TCP_CONN_ABORT_THRESHOLD"></a><p><dt><strong><strong><code>conn-abort-threshold=&lt;milliseconds&gt;</code></strong></strong><dd>
+<a name="OPTION_TCP_CONN_ABORT_THRESHOLD"></a><dt ><strong><strong ><code >conn-abort-threshold=&lt;milliseconds&gt;</code></strong></strong></dt>
    Sets the time to wait for an answer of the server during the initial connect
    (HP-UX).
-<a name="OPTION_TCP_KEEPINIT"></a><p><dt><strong><strong><code>keepinit</code></strong></strong><dd>
+<a name="OPTION_TCP_KEEPINIT"></a><dt ><strong><strong ><code >keepinit</code></strong></strong></dt>
    Sets the time to wait for an answer of the server during connect() before
    giving up. Value in half seconds, default is 150 (75s) (Tru64).
-<a name="OPTION_TCP_PAWS"></a><p><dt><strong><strong><code>paws</code></strong></strong><dd>
+<a name="OPTION_TCP_PAWS"></a><dt ><strong><strong ><code >paws</code></strong></strong></dt>
    Enables the "protect against wrapped sequence numbers" feature (Tru64).
-<a name="OPTION_TCP_SACKENA"></a><p><dt><strong><strong><code>sackena</code></strong></strong><dd>
+<a name="OPTION_TCP_SACKENA"></a><dt ><strong><strong ><code >sackena</code></strong></strong></dt>
    Enables selective acknowledge (Tru64).
-<a name="OPTION_TCP_TSOPTENA"></a><p><dt><strong><strong><code>tsoptena</code></strong></strong><dd>
+<a name="OPTION_TCP_TSOPTENA"></a><dt ><strong><strong ><code >tsoptena</code></strong></strong></dt>
    Enables the time stamp option that allows RTT recalculation on existing
    connections (Tru64).
-</dl>
+enddit()
 <p>
-<dl></dl><br>
+startdit()enddit()<br/>
 <p>
-<a name="GROUP_SCTP"></a><em><strong>SCTP option group</strong></em>
+<a name="GROUP_SCTP"></a><em ><strong >SCTP option group</strong></em>
 <p>
 These options may be applied to SCTP stream sockets.
-<dl>
-<a name="OPTION_SCTP_NODELAY"></a><p><dt><strong><strong><code>sctp-nodelay</code></strong></strong><dd>
+startdit()
+<a name="OPTION_SCTP_NODELAY"></a><dt ><strong><strong ><code >sctp-nodelay</code></strong></strong></dt>
    Sets the SCTP_NODELAY socket option that disables the Nagle algorithm.
-<a name="OPTION_SCTP_MAXSEG"></a><p><dt><strong><strong><code>sctp-maxseg=&lt;bytes&gt;</code></strong></strong><dd>
+<a name="OPTION_SCTP_MAXSEG"></a><dt ><strong><strong ><code >sctp-maxseg=&lt;bytes&gt;</code></strong></strong></dt>
    Sets the SCTP_MAXSEG socket option to &lt;bytes&gt; [<a href="socat.html#TYPE_INT">int</a>].  This
    value is then proposed to the peer with the SYN or SYN/ACK packet. 
-</dl>
+enddit()
 <p>
-<dl></dl><br>
+startdit()enddit()<br/>
 <p>
-<em><strong>UDP, TCP, and SCTP option groups</strong></em>
+<em ><strong >UDP, TCP, and SCTP option groups</strong></em>
 <p>
 Here we find options that are related to the network port mechanism and thus
 can be used with UDP, TCP, and SCTP client and server addresses.
-<dl>
-<a name="OPTION_SOURCEPORT"></a><p><dt><strong><strong><code>sourceport=&lt;port&gt;</code></strong></strong><dd>
+startdit()
+<a name="OPTION_SOURCEPORT"></a><dt ><strong><strong ><code >sourceport=&lt;port&gt;</code></strong></strong></dt>
    For outgoing (client) TCP and UDP connections, it sets the source
    <a href="socat.html#TYPE_PORT">&lt;port&gt;</a> using an extra 
-<code>bind()</code>
+<code >bind()</code>
  call.
    With TCP or UDP listen addresses, socat immediately shuts down the
    connection if the client does not use this sourceport (<a href="socat.html#EXAMPLE_OPTION_SOURCEPORT">example</a>).
-<a name="OPTION_LOWPORT"></a><p><dt><strong><strong><code>lowport</code></strong></strong><dd>
+<a name="OPTION_LOWPORT"></a><dt ><strong><strong ><code >lowport</code></strong></strong></dt>
    Outgoing (client) TCP and UDP connections with this option use
    an unused random source port between 640 and 1023 incl. On UNIX class operating
    systems, this requires root privilege, and thus indicates that the
@@ -2315,67 +2360,67 @@
    TCP and UDP listen addresses with this option immediately shut down the
    connection if the client does not use a sourceport &lt;= 1023.
    This mechanism can provide limited authorization under some circumstances.
-</dl>
+enddit()
 <p>
-<dl></dl><br>
+startdit()enddit()<br/>
 <p>
-<a name="GROUP_SOCKS"></a><em><strong>SOCKS option group</strong></em>
+<a name="GROUP_SOCKS"></a><em ><strong >SOCKS option group</strong></em>
 <p>
 When using SOCKS type addresses, some socks specific options can be set.
-<dl>
-<a name="OPTION_SOCKSPORT"></a><p><dt><strong><strong><code>socksport=&lt;tcp service&gt;</code></strong></strong><dd>
+startdit()
+<a name="OPTION_SOCKSPORT"></a><dt ><strong><strong ><code >socksport=&lt;tcp service&gt;</code></strong></strong></dt>
    Overrides the default "socks" service or port 1080 for the socks server
    port with <a href="socat.html#TYPE_TCP_SERVICE">&lt;TCP service&gt;</a>.
-<a name="OPTION_SOCKSUSER"></a><p><dt><strong><strong><code>socksuser=&lt;user&gt;</code></strong></strong><dd>
+<a name="OPTION_SOCKSUSER"></a><dt ><strong><strong ><code >socksuser=&lt;user&gt;</code></strong></strong></dt>
    Sends the &lt;user&gt; [<a href="socat.html#TYPE_STRING">string</a>] in the username field to the
    socks server. Default is the actual user name ($LOGNAME or $USER) (<a href="socat.html#EXAMPLE_OPTION_SOCKSUSER">example</a>).
-</dl>
+enddit()
 <p>
-<dl></dl><br>
+startdit()enddit()<br/>
 <p>
-<a name="GROUP_HTTP"></a><em><strong>HTTP option group</strong></em>
+<a name="GROUP_HTTP"></a><em ><strong >HTTP option group</strong></em>
 <p>
 Options that can be provided with HTTP type addresses. The only HTTP address
 currently implemented is <a href="socat.html#ADDRESS_PROXY_CONNECT">proxy-connect</a>.
 <p>
-<dl>
-<a name="OPTION_PROXYPORT"></a><p><dt><strong><strong><code>proxyport=&lt;TCP service&gt;</code></strong></strong><dd>
+startdit()
+<a name="OPTION_PROXYPORT"></a><dt ><strong><strong ><code >proxyport=&lt;TCP service&gt;</code></strong></strong></dt>
    Overrides the default HTTP proxy port 8080 with
    <a href="socat.html#TYPE_TCP_SERVICE">&lt;TCP service&gt;</a>.
-<a name="OPTION_IGNORECR"></a><p><dt><strong><strong><code>ignorecr</code></strong></strong><dd>
+<a name="OPTION_IGNORECR"></a><dt ><strong><strong ><code >ignorecr</code></strong></strong></dt>
    The HTTP protocol requires the use of CR+NL as line terminator. When a proxy
    server violates this standard, socat might not understand its answer. 
    This option directs socat to interprete NL as line terminator and
    to ignore CR in the answer. Nevertheless, socat sends CR+NL to the proxy.
-<a name="OPTION_PROXY_AUTHORIZATION"></a><p><dt><strong><strong><code>proxyauth=&lt;username&gt;:&lt;password&gt;</code></strong></strong><dd>
+<a name="OPTION_PROXY_AUTHORIZATION"></a><dt ><strong><strong ><code >proxyauth=&lt;username&gt;:&lt;password&gt;</code></strong></strong></dt>
    Provide "basic" authentication to the proxy server. The argument to the
    option is used with a "Proxy-Authorization: Base" header in base64 encoded
-   form.<br> 
+   form.<br/> 
    Note: username and password are visible for every user on the local machine
    in the process list; username and password are transferred to the proxy
    server unencrypted (base64 encoded) and might be sniffed.
-<a name="OPTION_PROXY_RESOLVE"></a><p><dt><strong><strong><code>resolve</code></strong></strong><dd>
+<a name="OPTION_PROXY_RESOLVE"></a><dt ><strong><strong ><code >resolve</code></strong></strong></dt>
    Per default, socat sends to the proxy a CONNECT request containing the
    target hostname. With this option, socat resolves the hostname locally and
    sends the IP address. Please note that, according to RFC 2396, only name
    resolution to IPv4 addresses is implemented.
-</dl>
+enddit()
 <p>
-<dl></dl><br>
+startdit()enddit()<br/>
 <p>
-<a name="GROUP_RANGE"></a><em><strong>RANGE option group</strong></em>
+<a name="GROUP_RANGE"></a><em ><strong >RANGE option group</strong></em>
 <p>
 These options check if a connecting client should be granted access. They can
 be applied to listening and receiving network sockets. tcp-wrappers options
 fall into this group.
-<dl>
-<a name="OPTION_RANGE"></a><p><dt><strong><strong><code>range=&lt;address-range&gt;</code></strong></strong><dd>
-   After accepting a connection, tests if the peer is within <em>range</em>. For
+startdit()
+<a name="OPTION_RANGE"></a><dt ><strong><strong ><code >range=&lt;address-range&gt;</code></strong></strong></dt>
+   After accepting a connection, tests if the peer is within <em >range</em>. For
    IPv4 addresses, address-range takes the form address/bits, e.g.
    10.0.0.0/8, or address:mask, e.g. 10.0.0.0:255.0.0.0 (<a href="socat.html#EXAMPLE_OPTION_RANGE">example</a>); for IPv6, it is [ip6-address]/bits, e.g. [::1]/128.
-   If the client address does not match, <strong>socat</strong> refuses the connection attempt, issues a warning, and keeps
+   If the client address does not match, <strong >socat</strong> refuses the connection attempt, issues a warning, and keeps
    listening/receiving.
-<a name="OPTION_TCPWRAPPERS"></a><p><dt><strong><strong><code>tcpwrap[=&lt;name&gt;]</code></strong></strong><dd>
+<a name="OPTION_TCPWRAPPERS"></a><dt ><strong><strong ><code >tcpwrap[=&lt;name&gt;]</code></strong></strong></dt>
    Uses Wietse Venema's libwrap (tcpd) library to determine
    if the client is allowed to connect. The configuration files are
    /etc/hosts.allow and /etc/hosts.deny per default, see "man 5 hosts_access"
@@ -2384,90 +2429,90 @@
    If omitted, the basename of socats invocation (argv[0]) is passed. 
    If both tcpwrap and range options are applied to an address, both
    conditions must be fulfilled to allow the connection.
-<a name="OPTION_TCPWRAP_HOSTS_ALLOW_TABLE"></a><p><dt><strong><strong><code>allow-table=&lt;filename&gt;</code></strong></strong><dd>
+<a name="OPTION_TCPWRAP_HOSTS_ALLOW_TABLE"></a><dt ><strong><strong ><code >allow-table=&lt;filename&gt;</code></strong></strong></dt>
    Takes the specified file instead of /etc/hosts.allow.
-<a name="OPTION_TCPWRAP_HOSTS_DENY_TABLE"></a><p><dt><strong><strong><code>deny-table=&lt;filename&gt;</code></strong></strong><dd>
+<a name="OPTION_TCPWRAP_HOSTS_DENY_TABLE"></a><dt ><strong><strong ><code >deny-table=&lt;filename&gt;</code></strong></strong></dt>
    Takes the specified file instead of /etc/hosts.deny.
-<a name="OPTION_TCPWRAP_ETC"></a><p><dt><strong><strong><code>tcpwrap-etc=&lt;directoryname&gt;</code></strong></strong><dd>
+<a name="OPTION_TCPWRAP_ETC"></a><dt ><strong><strong ><code >tcpwrap-etc=&lt;directoryname&gt;</code></strong></strong></dt>
    Looks for hosts.allow and hosts.deny in the specified directory. Is
    overridden by options <a href="socat.html#OPTION_TCPWRAP_HOSTS_ALLOW_TABLE">hosts-allow</a>
    and <a href="socat.html#OPTION_TCPWRAP_HOSTS_DENY_TABLE">hosts-deny</a>.
-</dl>
+enddit()
 <p>
-<dl></dl><br>
+startdit()enddit()<br/>
 <p>
-<a name="GROUP_LISTEN"></a><em><strong>LISTEN option group</strong></em>
+<a name="GROUP_LISTEN"></a><em ><strong >LISTEN option group</strong></em>
 <p>
 Options specific to listening sockets.
-<dl>
-<a name="OPTION_BACKLOG"></a><p><dt><strong><strong><code>backlog=&lt;count&gt;</code></strong></strong><dd>
+startdit()
+<a name="OPTION_BACKLOG"></a><dt ><strong><strong ><code >backlog=&lt;count&gt;</code></strong></strong></dt>
    Sets the backlog value passed with the 
-<code>listen()</code>
+<code >listen()</code>
  system call to &lt;count&gt;
    [<a href="socat.html#TYPE_INT">int</a>]. Default is 5. 
-<a name="OPTION_MAX_CHILDREN"></a><p><dt><strong><strong><code>max-children=&lt;count&gt;</code></strong></strong><dd>
+<a name="OPTION_MAX_CHILDREN"></a><dt ><strong><strong ><code >max-children=&lt;count&gt;</code></strong></strong></dt>
    Limits the number of concurrent child processes [<a href="socat.html#TYPE_INT">int</a>].
     Default is no limit. 
-</dl>
-<dl></dl><br>
+enddit()
+startdit()enddit()<br/>
 <p>
-<a name="GROUP_CHILD"></a><em><strong>CHILD option group</strong></em>
+<a name="GROUP_CHILD"></a><em ><strong >CHILD option group</strong></em>
 <p>
 Options for addresses with multiple connections via child processes.
-<dl>
-<a name="OPTION_FORK"></a><p><dt><strong><strong><code>fork</code></strong></strong><dd>
+startdit()
+<a name="OPTION_FORK"></a><dt ><strong><strong ><code >fork</code></strong></strong></dt>
    After establishing a connection, handles its channel in a child process and
    keeps the parent process attempting to produce more connections, either by
-   listening or by connecting in a loop (<a href="socat.html#EXAMPLE_OPTION_FORK">example</a>).<br>
+   listening or by connecting in a loop (<a href="socat.html#EXAMPLE_OPTION_FORK">example</a>).<br/>
    OPENSSL-CONNECT and OPENSSL-LISTEN differ in when they actually fork off the
    child:
-   OPENSSL-LISTEN forks <em>before</em> the SSL handshake, while OPENSSL-CONNECT
-   forks <em>afterwards</em>.
-   RETRY and FOREVER options are not inherited by the child process.<br>
+   OPENSSL-LISTEN forks <em >before</em> the SSL handshake, while OPENSSL-CONNECT
+   forks <em >afterwards</em>.
+   RETRY and FOREVER options are not inherited by the child process.<br/>
    On some operating systems (e.g. FreeBSD) this option does not work for
-   UDP-LISTEN addresses.<br>
-</dl>
+   UDP-LISTEN addresses.<br/>
+enddit()
 <p>
-<dl></dl><br>
+startdit()enddit()<br/>
 <p>
-<a name="GROUP_EXEC"></a><em><strong>EXEC option group</strong></em>
+<a name="GROUP_EXEC"></a><em ><strong >EXEC option group</strong></em>
 <p>
 Options for addresses that invoke a program.
-<dl>
-<a name="OPTION_PATH"></a><p><dt><strong><strong><code>path=&lt;string&gt;</code></strong></strong><dd>
+startdit()
+<a name="OPTION_PATH"></a><dt ><strong><strong ><code >path=&lt;string&gt;</code></strong></strong></dt>
    Overrides the PATH environment variable for searching the program with
    <a href="socat.html#TYPE_STRING">&lt;string&gt;</a>. This
    
-<code>$PATH</code>
+<code >$PATH</code>
  value is effective in the child process too.
-<a name="OPTION_LOGIN"></a><p><dt><strong><strong><code>login</code></strong></strong><dd>
+<a name="OPTION_LOGIN"></a><dt ><strong><strong ><code >login</code></strong></strong></dt>
    Prefixes 
-<code>argv[0]</code>
+<code >argv[0]</code>
  for the 
-<code>execvp()</code>
+<code >execvp()</code>
  call with '-', thus making a
    shell behave as login shell.
-</dl>
+enddit()
 <p>
-<dl></dl><br>
+startdit()enddit()<br/>
 <p>
-<a name="GROUP_FORK"></a><em><strong>FORK option group</strong></em>
+<a name="GROUP_FORK"></a><em ><strong >FORK option group</strong></em>
 <p>
-EXEC or SYSTEM addresses invoke a program using a child process and transfer data between <strong>socat</strong> and the program. The interprocess communication mechanism can be influenced with the following options. Per
+EXEC or SYSTEM addresses invoke a program using a child process and transfer data between <strong >socat</strong> and the program. The interprocess communication mechanism can be influenced with the following options. Per
 default, a 
-<code>socketpair()</code>
+<code >socketpair()</code>
  is created and assigned to stdin and stdout of
-the child process, while stderr is inherited from the <strong>socat</strong> process, and the
+the child process, while stderr is inherited from the <strong >socat</strong> process, and the
 child process uses file descriptors 0 and 1 for communicating with the main
 socat process.
-<dl>
-<a name="OPTION_NOFORK"></a><p><dt><strong><strong><code>nofork</code></strong></strong><dd>
+startdit()
+<a name="OPTION_NOFORK"></a><dt ><strong><strong ><code >nofork</code></strong></strong></dt>
    Does not fork a subprocess for executing the program, instead calls execvp()
    or system() directly from the actual socat instance. This avoids the
    overhead of another process between the program and its peer,
    but introduces a lot of restrictions:
-   <ul>
-   <li> this option can only be applied to the second <strong>socat</strong> address.
+   startit()
+   <li> this option can only be applied to the second <strong >socat</strong> address.
    <li> it cannot be applied to a part of a <a href="socat.html#ADDRESS_DUAL">dual</a> address.
    <li> the first socat address cannot be OPENSSL or READLINE
    <li> socat options -b, -t, -D, -l, -v, -x become useless
@@ -2476,85 +2521,85 @@
       append, <!--async,--> cloexec, flock, user, group, mode, nonblock,
       perm-late, setlk, and setpgid cannot be applied. Some of these could be
       used on the first address though.
-   </ul>
-<a name="OPTION_PIPES"></a><p><dt><strong><strong><code>pipes</code></strong></strong><dd>
+   endit()
+<a name="OPTION_PIPES"></a><dt ><strong><strong ><code >pipes</code></strong></strong></dt>
    Creates a pair of unnamed pipes for interprocess communication instead of a
    socket pair.
-<a name="OPTION_OPENPTY"></a><p><dt><strong><strong><code>openpty</code></strong></strong><dd>
+<a name="OPTION_OPENPTY"></a><dt ><strong><strong ><code >openpty</code></strong></strong></dt>
    Establishes communication with the sub process using a pseudo terminal
    created with 
-<code>openpty()</code>
+<code >openpty()</code>
  instead of the default (socketpair or ptmx).
-<a name="OPTION_PTMX"></a><p><dt><strong><strong><code>ptmx</code></strong></strong><dd>
+<a name="OPTION_PTMX"></a><dt ><strong><strong ><code >ptmx</code></strong></strong></dt>
    Establishes communication with the sub process using a pseudo terminal
-   created by opening <strong>/dev/ptmx</strong> or <strong>/dev/ptc</strong> instead of the default
+   created by opening <strong >/dev/ptmx</strong> or <strong >/dev/ptc</strong> instead of the default
    (socketpair).
-<a name="OPTION_PTY"></a><p><dt><strong><strong><code>pty</code></strong></strong><dd>
+<a name="OPTION_PTY"></a><dt ><strong><strong ><code >pty</code></strong></strong></dt>
    Establishes communication with the sub process using a pseudo terminal
    instead of a socket pair. Creates the pty with an available mechanism. If
    openpty and ptmx are both available, it uses ptmx because this is POSIX
    compliant (<a href="socat.html#EXAMPLE_OPTION_PTY">example</a>).
-<a name="OPTION_CTTY"></a><p><dt><strong><strong><code>ctty</code></strong></strong><dd>
+<a name="OPTION_CTTY"></a><dt ><strong><strong ><code >ctty</code></strong></strong></dt>
    Makes the pty the controlling tty of the sub process (<a href="socat.html#EXAMPLE_OPTION_CTTY">example</a>).
-<a name="OPTION_STDERR"></a><p><dt><strong><strong><code>stderr</code></strong></strong><dd>
+<a name="OPTION_STDERR"></a><dt ><strong><strong ><code >stderr</code></strong></strong></dt>
    Directs stderr of the sub process to its output channel by making stderr a
    
-<code>dup()</code>
+<code >dup()</code>
  of stdout (<a href="socat.html#EXAMPLE_OPTION_STDERR">example</a>). 
-<a name="OPTION_FDIN"></a><p><dt><strong><strong><code>fdin=&lt;fdnum&gt;</code></strong></strong><dd>
+<a name="OPTION_FDIN"></a><dt ><strong><strong ><code >fdin=&lt;fdnum&gt;</code></strong></strong></dt>
    Assigns the sub processes input channel to its file descriptor
    <a href="socat.html#TYPE_FDNUM">&lt;fdnum&gt;</a> 
    instead of stdin (0). The program started from the subprocess has to use
-   this fd for reading data from <strong>socat</strong> (<a href="socat.html#EXAMPLE_OPTION_FDIN">example</a>). 
-<a name="OPTION_FDOUT"></a><p><dt><strong><strong><code>fdout=&lt;fdnum&gt;</code></strong></strong><dd>
+   this fd for reading data from <strong >socat</strong> (<a href="socat.html#EXAMPLE_OPTION_FDIN">example</a>). 
+<a name="OPTION_FDOUT"></a><dt ><strong><strong ><code >fdout=&lt;fdnum&gt;</code></strong></strong></dt>
    Assigns the sub processes output channel to its file descriptor
    <a href="socat.html#TYPE_FDNUM">&lt;fdnum&gt;</a> 
    instead of stdout (1). The program started from the subprocess has to use 
-   this fd for writing data to <strong>socat</strong> (<a href="socat.html#EXAMPLE_OPTION_FDOUT">example</a>).
-<a name="OPTION_SIGHUP"></a><a name="OPTION_SIGINT"></a><a name="OPTION_SIGQUIT"></a><p><dt><strong><strong><code>sighup</code></strong>, <strong><code>sigint</code></strong>, <strong><code>sigquit</code></strong></strong><dd>
-   Has <strong>socat</strong> pass signals of this type to the sub process.
+   this fd for writing data to <strong >socat</strong> (<a href="socat.html#EXAMPLE_OPTION_FDOUT">example</a>).
+<a name="OPTION_SIGHUP"></a><a name="OPTION_SIGINT"></a><a name="OPTION_SIGQUIT"></a><dt ><strong><strong ><code >sighup</code></strong>, <strong ><code >sigint</code></strong>, <strong ><code >sigquit</code></strong></strong></dt>
+   Has <strong >socat</strong> pass signals of this type to the sub process.
    If no address has this option, socat terminates on these signals.
-</dl>
+enddit()
 <p>
-<dl></dl><br>
+startdit()enddit()<br/>
 <p>
-<a name="GROUP_TERMIOS"></a><em><strong>TERMIOS option group</strong></em>
+<a name="GROUP_TERMIOS"></a><em ><strong >TERMIOS option group</strong></em>
 <p>
 For addresses that work on a tty (e.g., stdio, file:/dev/tty, exec:...,pty), the terminal parameters defined in the UN*X termios mechanism are made available as address option parameters.
 Please note that changes of the parameters of your interactive terminal 
-remain effective after <strong>socat</strong>'s termination, so you might have to enter "reset"
+remain effective after <strong >socat</strong>'s termination, so you might have to enter "reset"
 or "stty sane" in your shell afterwards.
 For EXEC and SYSTEM addresses with option PTY,
 these options apply to the pty by the child processes.
 <p>
-<dl>
-<a name="OPTION_B0"></a><p><dt><strong><strong><code>b0</code></strong></strong><dd>
+startdit()
+<a name="OPTION_B0"></a><dt ><strong><strong ><code >b0</code></strong></strong></dt>
    Disconnects the terminal.
-<a name="OPTION_B19200"></a><p><dt><strong><strong><code>b19200</code></strong></strong><dd>
+<a name="OPTION_B19200"></a><dt ><strong><strong ><code >b19200</code></strong></strong></dt>
    Sets the serial line speed to 19200 baud. Some other rates are possible; use
-something like <code>socat -hh |grep ' b[1-9]'</code> to find all speeds supported by
-your implementation.<br>
+something like <code >socat -hh |grep ' b[1-9]'</code> to find all speeds supported by
+your implementation.<br/>
 Note: On some operating systems, these options may not be
 available. Use <a href="socat.html#OPTION_ISPEED">ispeed</a> or <a href="socat.html#OPTION_OSPEED">ospeed</a>
 instead.
-<a name="OPTION_ECHO"></a><p><dt><strong><strong><code>echo=&lt;bool&gt;</code></strong></strong><dd>
+<a name="OPTION_ECHO"></a><dt ><strong><strong ><code >echo=&lt;bool&gt;</code></strong></strong></dt>
    Enables or disables local echo.
-<a name="OPTION_ICANON"></a><p><dt><strong><strong><code>icanon=&lt;bool&gt;</code></strong></strong><dd>
+<a name="OPTION_ICANON"></a><dt ><strong><strong ><code >icanon=&lt;bool&gt;</code></strong></strong></dt>
    Sets or clears canonical mode, enabling line buffering and some special
    characters. 
-<a name="OPTION_RAW"></a><p><dt><strong><strong><code>raw</code></strong></strong><dd>
+<a name="OPTION_RAW"></a><dt ><strong><strong ><code >raw</code></strong></strong></dt>
    Sets raw mode, thus passing input and output almost unprocessed. This option is obsolete, use option <a href="socat.html#OPTION_TERMIOS_RAWER">rawer</a> or <a href="socat.html#OPTION_TERMIOS_CFMAKERAW">cfmakeraw</a> instead.
-<a name="OPTION_TERMIOS_RAWER"></a><p><dt><strong><strong><code>rawer</code></strong></strong><dd>
+<a name="OPTION_TERMIOS_RAWER"></a><dt ><strong><strong ><code >rawer</code></strong></strong></dt>
    Makes terminal rawer than <a href="socat.html#OPTION_RAW">raw</a> option. This option implicitly turns off echo. (<a href="socat.html#EXAMPLE_OPTION_TERMIOS_RAWER">example</a>).
-<a name="OPTION_TERMIOS_CFMAKERAW"></a><p><dt><strong><strong><code>cfmakeraw</code></strong></strong><dd>
-   Sets raw mode by invoking <code>cfmakeraw()</code> or by simulating this call. This option implicitly turns off echo.
-<a name="OPTION_IGNBRK"></a><p><dt><strong><strong><code>ignbrk=&lt;bool&gt;</code></strong></strong><dd>
+<a name="OPTION_TERMIOS_CFMAKERAW"></a><dt ><strong><strong ><code >cfmakeraw</code></strong></strong></dt>
+   Sets raw mode by invoking <code >cfmakeraw()</code> or by simulating this call. This option implicitly turns off echo.
+<a name="OPTION_IGNBRK"></a><dt ><strong><strong ><code >ignbrk=&lt;bool&gt;</code></strong></strong></dt>
    Ignores or interpretes the BREAK character (e.g., ^C)
-<a name="OPTION_BRKINT"></a><p><dt><strong><strong><code>brkint=&lt;bool&gt;</code></strong></strong><dd>
-<a name="OPTION_BS0"></a><p><dt><strong><strong><code>bs0</code></strong></strong><dd>
-<a name="OPTION_BS1"></a><p><dt><strong><strong><code>bs1</code></strong></strong><dd>
-<a name="OPTION_BSDLY"></a><p><dt><strong><strong><code>bsdly=&lt;0|1&gt;</code></strong></strong><dd>
-<a name="OPTION_CLOCAL"></a><p><dt><strong><strong><code>clocal=&lt;bool&gt;</code></strong></strong><dd>
+<a name="OPTION_BRKINT"></a><dt ><strong><strong ><code >brkint=&lt;bool&gt;</code></strong></strong></dt>
+<a name="OPTION_BS0"></a><dt ><strong><strong ><code >bs0</code></strong></strong></dt>
+<a name="OPTION_BS1"></a><dt ><strong><strong ><code >bs1</code></strong></strong></dt>
+<a name="OPTION_BSDLY"></a><dt ><strong><strong ><code >bsdly=&lt;0|1&gt;</code></strong></strong></dt>
+<a name="OPTION_CLOCAL"></a><dt ><strong><strong ><code >clocal=&lt;bool&gt;</code></strong></strong></dt>
 <p>
 <a name="OPTION_CR0"></a><a name="OPTION_CR1"></a><a name="OPTION_CR2"></a><a name="OPTION_CR3"></a>
 
@@ -2569,9 +2614,9 @@
    Sets the carriage return delay to 0, 1, 2, or 3, respectively.
    0 means no delay, the other values are terminal dependent.
 <p>
-<a name="OPTION_CRDLY"></a><p><dt><strong><strong><code>crdly=&lt;0|1|2|3&gt;</code></strong></strong><dd>
-<a name="OPTION_CREAD"></a><p><dt><strong><strong><code>cread=&lt;bool&gt;</code></strong></strong><dd>
-<a name="OPTION_CRTSCTS"></a><p><dt><strong><strong><code>crtscts=&lt;bool&gt;</code></strong></strong><dd>
+<a name="OPTION_CRDLY"></a><dt ><strong><strong ><code >crdly=&lt;0|1|2|3&gt;</code></strong></strong></dt>
+<a name="OPTION_CREAD"></a><dt ><strong><strong ><code >cread=&lt;bool&gt;</code></strong></strong></dt>
+<a name="OPTION_CRTSCTS"></a><dt ><strong><strong ><code >crtscts=&lt;bool&gt;</code></strong></strong></dt>
 <p>
 <a name="OPTION_CS5"></a><a name="OPTION_CS6"></a><a name="OPTION_CS7"></a><a name="OPTION_CS8"></a>
 
@@ -2585,110 +2630,110 @@
 <strong>cs8</strong></code><dd>
    Sets the character size to 5, 6, 7, or 8 bits, respectively.
 <p>
-<a name="OPTION_CSIZE"></a><p><dt><strong><strong><code>csize=&lt;0|1|2|3&gt;</code></strong></strong><dd>
-<a name="OPTION_CSTOPB"></a><p><dt><strong><strong><code>cstopb=&lt;bool&gt;</code></strong></strong><dd>
+<a name="OPTION_CSIZE"></a><dt ><strong><strong ><code >csize=&lt;0|1|2|3&gt;</code></strong></strong></dt>
+<a name="OPTION_CSTOPB"></a><dt ><strong><strong ><code >cstopb=&lt;bool&gt;</code></strong></strong></dt>
    Sets two stop bits, rather than one.
-<a name="OPTION_VDSUSP"></a><p><dt><strong><strong><code>dsusp=&lt;byte&gt;</code></strong></strong><dd>
+<a name="OPTION_VDSUSP"></a><dt ><strong><strong ><code >dsusp=&lt;byte&gt;</code></strong></strong></dt>
    Sets the value for the VDSUSP character that suspends the current foreground
    process and reactivates the shell (all except Linux).
-<a name="OPTION_ECHOCTL"></a><p><dt><strong><strong><code>echoctl=&lt;bool&gt;</code></strong></strong><dd>
+<a name="OPTION_ECHOCTL"></a><dt ><strong><strong ><code >echoctl=&lt;bool&gt;</code></strong></strong></dt>
    Echos control characters in hat notation (e.g. ^A)
-<a name="OPTION_ECHOE"></a><p><dt><strong><strong><code>echoe=&lt;bool&gt;</code></strong></strong><dd>
-<a name="OPTION_ECHOK"></a><p><dt><strong><strong><code>echok=&lt;bool&gt;</code></strong></strong><dd>
-<a name="OPTION_ECHOKE"></a><p><dt><strong><strong><code>echoke=&lt;bool&gt;</code></strong></strong><dd>
-<a name="OPTION_ECHONL"></a><p><dt><strong><strong><code>echonl=&lt;bool&gt;</code></strong></strong><dd>
-<a name="OPTION_ECHOPRT"></a><p><dt><strong><strong><code>echoprt=&lt;bool&gt;</code></strong></strong><dd>
-<a name="OPTION_EOF"></a><p><dt><strong><strong><code>eof=&lt;byte&gt;</code></strong></strong><dd>
-<a name="OPTION_EOL"></a><p><dt><strong><strong><code>eol=&lt;byte&gt;</code></strong></strong><dd>
-<a name="OPTION_EOL2"></a><p><dt><strong><strong><code>eol2=&lt;byte&gt;</code></strong></strong><dd>
-<a name="OPTION_ERASE"></a><p><dt><strong><strong><code>erase=&lt;byte&gt;</code></strong></strong><dd>
-<a name="OPTION_DISCARD"></a><p><dt><strong><strong><code>discard=&lt;byte&gt;</code></strong></strong><dd>
-<a name="OPTION_FF0"></a><p><dt><strong><strong><code>ff0</code></strong></strong><dd>
-<a name="OPTION_FF1"></a><p><dt><strong><strong><code>ff1</code></strong></strong><dd>
-<a name="OPTION_FFDLY"></a><p><dt><strong><strong><code>ffdly=&lt;bool&gt;</code></strong></strong><dd>
-<a name="OPTION_FLUSHO"></a><p><dt><strong><strong><code>flusho=&lt;bool&gt;</code></strong></strong><dd>
-<a name="OPTION_HUPCL"></a><p><dt><strong><strong><code>hupcl=&lt;bool&gt;</code></strong></strong><dd>
-<a name="OPTION_ICRNL"></a><p><dt><strong><strong><code>icrnl=&lt;bool&gt;</code></strong></strong><dd>
-<a name="OPTION_IEXTEN"></a><p><dt><strong><strong><code>iexten=&lt;bool&gt;</code></strong></strong><dd>
-<a name="OPTION_IGNCR"></a><p><dt><strong><strong><code>igncr=&lt;bool&gt;</code></strong></strong><dd>
-<a name="OPTION_IGNPAR"></a><p><dt><strong><strong><code>ignpar=&lt;bool&gt;</code></strong></strong><dd>
-<a name="OPTION_IMAXBEL"></a><p><dt><strong><strong><code>imaxbel=&lt;bool&gt;</code></strong></strong><dd>
-<a name="OPTION_INLCR"></a><p><dt><strong><strong><code>inlcr=&lt;bool&gt;</code></strong></strong><dd>
-<a name="OPTION_INPCK"></a><p><dt><strong><strong><code>inpck=&lt;bool&gt;</code></strong></strong><dd>
-<a name="OPTION_INTR"></a><p><dt><strong><strong><code>intr=&lt;byte&gt;</code></strong></strong><dd>
-<a name="OPTION_ISIG"></a><p><dt><strong><strong><code>isig=&lt;bool&gt;</code></strong></strong><dd>
-<a name="OPTION_ISPEED"></a><p><dt><strong><strong><code>ispeed=&lt;unsigned-int&gt;</code></strong></strong><dd>
-   Set the baud rate for incoming data on this line.<br>
+<a name="OPTION_ECHOE"></a><dt ><strong><strong ><code >echoe=&lt;bool&gt;</code></strong></strong></dt>
+<a name="OPTION_ECHOK"></a><dt ><strong><strong ><code >echok=&lt;bool&gt;</code></strong></strong></dt>
+<a name="OPTION_ECHOKE"></a><dt ><strong><strong ><code >echoke=&lt;bool&gt;</code></strong></strong></dt>
+<a name="OPTION_ECHONL"></a><dt ><strong><strong ><code >echonl=&lt;bool&gt;</code></strong></strong></dt>
+<a name="OPTION_ECHOPRT"></a><dt ><strong><strong ><code >echoprt=&lt;bool&gt;</code></strong></strong></dt>
+<a name="OPTION_EOF"></a><dt ><strong><strong ><code >eof=&lt;byte&gt;</code></strong></strong></dt>
+<a name="OPTION_EOL"></a><dt ><strong><strong ><code >eol=&lt;byte&gt;</code></strong></strong></dt>
+<a name="OPTION_EOL2"></a><dt ><strong><strong ><code >eol2=&lt;byte&gt;</code></strong></strong></dt>
+<a name="OPTION_ERASE"></a><dt ><strong><strong ><code >erase=&lt;byte&gt;</code></strong></strong></dt>
+<a name="OPTION_DISCARD"></a><dt ><strong><strong ><code >discard=&lt;byte&gt;</code></strong></strong></dt>
+<a name="OPTION_FF0"></a><dt ><strong><strong ><code >ff0</code></strong></strong></dt>
+<a name="OPTION_FF1"></a><dt ><strong><strong ><code >ff1</code></strong></strong></dt>
+<a name="OPTION_FFDLY"></a><dt ><strong><strong ><code >ffdly=&lt;bool&gt;</code></strong></strong></dt>
+<a name="OPTION_FLUSHO"></a><dt ><strong><strong ><code >flusho=&lt;bool&gt;</code></strong></strong></dt>
+<a name="OPTION_HUPCL"></a><dt ><strong><strong ><code >hupcl=&lt;bool&gt;</code></strong></strong></dt>
+<a name="OPTION_ICRNL"></a><dt ><strong><strong ><code >icrnl=&lt;bool&gt;</code></strong></strong></dt>
+<a name="OPTION_IEXTEN"></a><dt ><strong><strong ><code >iexten=&lt;bool&gt;</code></strong></strong></dt>
+<a name="OPTION_IGNCR"></a><dt ><strong><strong ><code >igncr=&lt;bool&gt;</code></strong></strong></dt>
+<a name="OPTION_IGNPAR"></a><dt ><strong><strong ><code >ignpar=&lt;bool&gt;</code></strong></strong></dt>
+<a name="OPTION_IMAXBEL"></a><dt ><strong><strong ><code >imaxbel=&lt;bool&gt;</code></strong></strong></dt>
+<a name="OPTION_INLCR"></a><dt ><strong><strong ><code >inlcr=&lt;bool&gt;</code></strong></strong></dt>
+<a name="OPTION_INPCK"></a><dt ><strong><strong ><code >inpck=&lt;bool&gt;</code></strong></strong></dt>
+<a name="OPTION_INTR"></a><dt ><strong><strong ><code >intr=&lt;byte&gt;</code></strong></strong></dt>
+<a name="OPTION_ISIG"></a><dt ><strong><strong ><code >isig=&lt;bool&gt;</code></strong></strong></dt>
+<a name="OPTION_ISPEED"></a><dt ><strong><strong ><code >ispeed=&lt;unsigned-int&gt;</code></strong></strong></dt>
+   Set the baud rate for incoming data on this line.<br/>
    See also: <a href="socat.html#OPTION_OSPEED">ospeed</a>, <a href="socat.html#OPTION_B19200">b19200</a>
-<a name="OPTION_ISTRIP"></a><p><dt><strong><strong><code>istrip=&lt;bool&gt;</code></strong></strong><dd>
-<a name="OPTION_IUCLC"></a><p><dt><strong><strong><code>iuclc=&lt;bool&gt;</code></strong></strong><dd>
-<a name="OPTION_IXANY"></a><p><dt><strong><strong><code>ixany=&lt;bool&gt;</code></strong></strong><dd>
-<a name="OPTION_IXOFF"></a><p><dt><strong><strong><code>ixoff=&lt;bool&gt;</code></strong></strong><dd>
-<a name="OPTION_IXON"></a><p><dt><strong><strong><code>ixon=&lt;bool&gt;</code></strong></strong><dd>
-<a name="OPTION_KILL"></a><p><dt><strong><strong><code>kill=&lt;byte&gt;</code></strong></strong><dd>
-<a name="OPTION_LNEXT"></a><p><dt><strong><strong><code>lnext=&lt;byte&gt;</code></strong></strong><dd>
-<a name="OPTION_MIN"></a><p><dt><strong><strong><code>min=&lt;byte&gt;</code></strong></strong><dd>
-<a name="OPTION_NL0"></a><p><dt><strong><strong><code>nl0</code></strong></strong><dd>
+<a name="OPTION_ISTRIP"></a><dt ><strong><strong ><code >istrip=&lt;bool&gt;</code></strong></strong></dt>
+<a name="OPTION_IUCLC"></a><dt ><strong><strong ><code >iuclc=&lt;bool&gt;</code></strong></strong></dt>
+<a name="OPTION_IXANY"></a><dt ><strong><strong ><code >ixany=&lt;bool&gt;</code></strong></strong></dt>
+<a name="OPTION_IXOFF"></a><dt ><strong><strong ><code >ixoff=&lt;bool&gt;</code></strong></strong></dt>
+<a name="OPTION_IXON"></a><dt ><strong><strong ><code >ixon=&lt;bool&gt;</code></strong></strong></dt>
+<a name="OPTION_KILL"></a><dt ><strong><strong ><code >kill=&lt;byte&gt;</code></strong></strong></dt>
+<a name="OPTION_LNEXT"></a><dt ><strong><strong ><code >lnext=&lt;byte&gt;</code></strong></strong></dt>
+<a name="OPTION_MIN"></a><dt ><strong><strong ><code >min=&lt;byte&gt;</code></strong></strong></dt>
+<a name="OPTION_NL0"></a><dt ><strong><strong ><code >nl0</code></strong></strong></dt>
    Sets the newline delay to 0.
-<a name="OPTION_NL1"></a><p><dt><strong><strong><code>nl1</code></strong></strong><dd>
-<a name="OPTION_NLDLY"></a><p><dt><strong><strong><code>nldly=&lt;bool&gt;</code></strong></strong><dd>
-<a name="OPTION_NOFLSH"></a><p><dt><strong><strong><code>noflsh=&lt;bool&gt;</code></strong></strong><dd>
-<a name="OPTION_OCRNL"></a><p><dt><strong><strong><code>ocrnl=&lt;bool&gt;</code></strong></strong><dd>
-<a name="OPTION_OFDEL"></a><p><dt><strong><strong><code>ofdel=&lt;bool&gt;</code></strong></strong><dd>
-<a name="OPTION_OFILL"></a><p><dt><strong><strong><code>ofill=&lt;bool&gt;</code></strong></strong><dd>
-<a name="OPTION_OLCUC"></a><p><dt><strong><strong><code>olcuc=&lt;bool&gt;</code></strong></strong><dd>
-<a name="OPTION_ONLCR"></a><p><dt><strong><strong><code>onlcr=&lt;bool&gt;</code></strong></strong><dd>
-<a name="OPTION_ONLRET"></a><p><dt><strong><strong><code>onlret=&lt;bool&gt;</code></strong></strong><dd>
-<a name="OPTION_ONOCR"></a><p><dt><strong><strong><code>onocr=&lt;bool&gt;</code></strong></strong><dd>
-<a name="OPTION_OPOST"></a><p><dt><strong><strong><code>opost=&lt;bool&gt;</code></strong></strong><dd>
+<a name="OPTION_NL1"></a><dt ><strong><strong ><code >nl1</code></strong></strong></dt>
+<a name="OPTION_NLDLY"></a><dt ><strong><strong ><code >nldly=&lt;bool&gt;</code></strong></strong></dt>
+<a name="OPTION_NOFLSH"></a><dt ><strong><strong ><code >noflsh=&lt;bool&gt;</code></strong></strong></dt>
+<a name="OPTION_OCRNL"></a><dt ><strong><strong ><code >ocrnl=&lt;bool&gt;</code></strong></strong></dt>
+<a name="OPTION_OFDEL"></a><dt ><strong><strong ><code >ofdel=&lt;bool&gt;</code></strong></strong></dt>
+<a name="OPTION_OFILL"></a><dt ><strong><strong ><code >ofill=&lt;bool&gt;</code></strong></strong></dt>
+<a name="OPTION_OLCUC"></a><dt ><strong><strong ><code >olcuc=&lt;bool&gt;</code></strong></strong></dt>
+<a name="OPTION_ONLCR"></a><dt ><strong><strong ><code >onlcr=&lt;bool&gt;</code></strong></strong></dt>
+<a name="OPTION_ONLRET"></a><dt ><strong><strong ><code >onlret=&lt;bool&gt;</code></strong></strong></dt>
+<a name="OPTION_ONOCR"></a><dt ><strong><strong ><code >onocr=&lt;bool&gt;</code></strong></strong></dt>
+<a name="OPTION_OPOST"></a><dt ><strong><strong ><code >opost=&lt;bool&gt;</code></strong></strong></dt>
    Enables or disables output processing; e.g., converts NL to CR-NL.
-<a name="OPTION_OSPEED"></a><p><dt><strong><strong><code>ospeed=&lt;unsigned-int&gt;</code></strong></strong><dd>
-   Set the baud rate for outgoing data on this line.<br>
+<a name="OPTION_OSPEED"></a><dt ><strong><strong ><code >ospeed=&lt;unsigned-int&gt;</code></strong></strong></dt>
+   Set the baud rate for outgoing data on this line.<br/>
    See also: <a href="socat.html#OPTION_ISPEED">ispeed</a>, <a href="socat.html#OPTION_B19200">b19200</a>
-<a name="OPTION_PARENB"></a><p><dt><strong><strong><code>parenb=&lt;bool&gt;</code></strong></strong><dd>
+<a name="OPTION_PARENB"></a><dt ><strong><strong ><code >parenb=&lt;bool&gt;</code></strong></strong></dt>
    Enable parity generation on output and parity checking for input.
-<a name="OPTION_PARMRK"></a><p><dt><strong><strong><code>parmrk=&lt;bool&gt;</code></strong></strong><dd>
-<a name="OPTION_PARODD"></a><p><dt><strong><strong><code>parodd=&lt;bool&gt;</code></strong></strong><dd>
-<a name="OPTION_PENDIN"></a><p><dt><strong><strong><code>pendin=&lt;bool&gt;</code></strong></strong><dd>
-<a name="OPTION_QUIT"></a><p><dt><strong><strong><code>quit=&lt;byte&gt;</code></strong></strong><dd>
-<a name="OPTION_REPRINT"></a><p><dt><strong><strong><code>reprint=&lt;byte&gt;</code></strong></strong><dd>
-<a name="OPTION_SANE"></a><p><dt><strong><strong><code>sane</code></strong></strong><dd>
+<a name="OPTION_PARMRK"></a><dt ><strong><strong ><code >parmrk=&lt;bool&gt;</code></strong></strong></dt>
+<a name="OPTION_PARODD"></a><dt ><strong><strong ><code >parodd=&lt;bool&gt;</code></strong></strong></dt>
+<a name="OPTION_PENDIN"></a><dt ><strong><strong ><code >pendin=&lt;bool&gt;</code></strong></strong></dt>
+<a name="OPTION_QUIT"></a><dt ><strong><strong ><code >quit=&lt;byte&gt;</code></strong></strong></dt>
+<a name="OPTION_REPRINT"></a><dt ><strong><strong ><code >reprint=&lt;byte&gt;</code></strong></strong></dt>
+<a name="OPTION_SANE"></a><dt ><strong><strong ><code >sane</code></strong></strong></dt>
    Brings the terminal to something like a useful default state.
-<a name="OPTION_START"></a><p><dt><strong><strong><code>start=&lt;byte&gt;</code></strong></strong><dd>
-<a name="OPTION_STOP"></a><p><dt><strong><strong><code>stop=&lt;byte&gt;</code></strong></strong><dd>
-<a name="OPTION_SUSP"></a><p><dt><strong><strong><code>susp=&lt;byte&gt;</code></strong></strong><dd>
-<a name="OPTION_SWTC"></a><p><dt><strong><strong><code>swtc=&lt;byte&gt;</code></strong></strong><dd>
-<a name="OPTION_TAB0"></a><p><dt><strong><strong><code>tab0</code></strong></strong><dd>
-<a name="OPTION_TAB1"></a><p><dt><strong><strong><code>tab1</code></strong></strong><dd>
-<a name="OPTION_TAB2"></a><p><dt><strong><strong><code>tab2</code></strong></strong><dd>
-<a name="OPTION_TAB3"></a><p><dt><strong><strong><code>tab3</code></strong></strong><dd>
-<a name="OPTION_TABDLY"></a><p><dt><strong><strong><code>tabdly=&lt;unsigned-int&gt;</code></strong></strong><dd>
-<a name="OPTION_TIME"></a><p><dt><strong><strong><code>time=&lt;byte&gt;</code></strong></strong><dd>
-<a name="OPTION_TOSTOP"></a><p><dt><strong><strong><code>tostop=&lt;bool&gt;</code></strong></strong><dd>
-<a name="OPTION_VT0"></a><p><dt><strong><strong><code>vt0</code></strong></strong><dd>
-<a name="OPTION_VT1"></a><p><dt><strong><strong><code>vt1</code></strong></strong><dd>
-<a name="OPTION_VTDLY"></a><p><dt><strong><strong><code>vtdly=&lt;bool&gt;</code></strong></strong><dd>
-<a name="OPTION_WERASE"></a><p><dt><strong><strong><code>werase=&lt;byte&gt;</code></strong></strong><dd>
-<a name="OPTION_XCASE"></a><p><dt><strong><strong><code>xcase=&lt;bool&gt;</code></strong></strong><dd>
-<a name="OPTION_XTABS"></a><p><dt><strong><strong><code>xtabs</code></strong></strong><dd>
-<a name="OPTION_I_POP_ALL"></a><p><dt><strong><strong><code>i-pop-all</code></strong></strong><dd>
+<a name="OPTION_START"></a><dt ><strong><strong ><code >start=&lt;byte&gt;</code></strong></strong></dt>
+<a name="OPTION_STOP"></a><dt ><strong><strong ><code >stop=&lt;byte&gt;</code></strong></strong></dt>
+<a name="OPTION_SUSP"></a><dt ><strong><strong ><code >susp=&lt;byte&gt;</code></strong></strong></dt>
+<a name="OPTION_SWTC"></a><dt ><strong><strong ><code >swtc=&lt;byte&gt;</code></strong></strong></dt>
+<a name="OPTION_TAB0"></a><dt ><strong><strong ><code >tab0</code></strong></strong></dt>
+<a name="OPTION_TAB1"></a><dt ><strong><strong ><code >tab1</code></strong></strong></dt>
+<a name="OPTION_TAB2"></a><dt ><strong><strong ><code >tab2</code></strong></strong></dt>
+<a name="OPTION_TAB3"></a><dt ><strong><strong ><code >tab3</code></strong></strong></dt>
+<a name="OPTION_TABDLY"></a><dt ><strong><strong ><code >tabdly=&lt;unsigned-int&gt;</code></strong></strong></dt>
+<a name="OPTION_TIME"></a><dt ><strong><strong ><code >time=&lt;byte&gt;</code></strong></strong></dt>
+<a name="OPTION_TOSTOP"></a><dt ><strong><strong ><code >tostop=&lt;bool&gt;</code></strong></strong></dt>
+<a name="OPTION_VT0"></a><dt ><strong><strong ><code >vt0</code></strong></strong></dt>
+<a name="OPTION_VT1"></a><dt ><strong><strong ><code >vt1</code></strong></strong></dt>
+<a name="OPTION_VTDLY"></a><dt ><strong><strong ><code >vtdly=&lt;bool&gt;</code></strong></strong></dt>
+<a name="OPTION_WERASE"></a><dt ><strong><strong ><code >werase=&lt;byte&gt;</code></strong></strong></dt>
+<a name="OPTION_XCASE"></a><dt ><strong><strong ><code >xcase=&lt;bool&gt;</code></strong></strong></dt>
+<a name="OPTION_XTABS"></a><dt ><strong><strong ><code >xtabs</code></strong></strong></dt>
+<a name="OPTION_I_POP_ALL"></a><dt ><strong><strong ><code >i-pop-all</code></strong></strong></dt>
    With UNIX System V STREAMS, removes all drivers from the stack.
-<a name="OPTION_I_PUSH"></a><p><dt><strong><strong><code>i-push=&lt;string&gt;</code></strong></strong><dd>
+<a name="OPTION_I_PUSH"></a><dt ><strong><strong ><code >i-push=&lt;string&gt;</code></strong></strong></dt>
    With UNIX System V STREAMS, pushes the driver (module) with the given name
    (<a href="socat.html#TYPE_STRING">string</a>) onto the stack. For example, to make sure that a
    character device on Solaris supports termios etc, use the following options:
-   <code>i-pop-all,i-push=ptem,i-push=ldterm,i-push=ttcompat</code>
-</dl>
+   <code >i-pop-all,i-push=ptem,i-push=ldterm,i-push=ttcompat</code>
+enddit()
 <p>
-<dl></dl><br>
+startdit()enddit()<br/>
 <p>
-<a name="GROUP_PTY"></a><em><strong>PTY option group</strong></em>
+<a name="GROUP_PTY"></a><em ><strong >PTY option group</strong></em>
 <p>
 These options are intended for use with the <a href="socat.html#ADDRESS_PTY">pty</a> address
 type.
 <p>
-<dl>
-<a name="OPTION_SYMBOLIC_LINK"></a><p><dt><strong><strong><code>link=&lt;filename&gt;</code></strong></strong><dd>
+startdit()
+<a name="OPTION_SYMBOLIC_LINK"></a><dt ><strong><strong ><code >link=&lt;filename&gt;</code></strong></strong></dt>
    Generates a symbolic link that points to the actual pseudo terminal
    (pty). This might help 
    to solve the problem that ptys are generated with more or less
@@ -2696,110 +2741,110 @@
    generated pty automatically. With this option, the user can specify a "fix"
    point in the file hierarchy that helps him to access the actual pty
    (<a href="socat.html#EXAMPLE_OPTION_SYMBOLIC_LINK">example</a>).
-   Beginning with <strong>socat</strong> version 1.4.3, the symbolic link is removed when
+   Beginning with <strong >socat</strong> version 1.4.3, the symbolic link is removed when
    the address is closed (but see option <a href="socat.html#OPTION_UNLINK_CLOSE">unlink-close</a>).
-<a name="OPTION_PTY_WAIT_SLAVE"></a><p><dt><strong><strong><code>wait-slave</code></strong></strong><dd>
+<a name="OPTION_PTY_WAIT_SLAVE"></a><dt ><strong><strong ><code >wait-slave</code></strong></strong></dt>
    Blocks the open phase until a process opens the slave side of the pty.
    Usually, socat continues after generating the pty with opening the next
    address or with entering the transfer loop. With the wait-slave option,
    socat waits until some process opens the slave side of the pty before
    continuing. 
-   This option only works if the operating system provides the <code>poll()</code>
+   This option only works if the operating system provides the <code >poll()</code>
    system call. And it depends on an undocumented behaviour of pty's, so it
    does not work on all operating systems. It has successfully been tested on
    Linux, FreeBSD, NetBSD, and on Tru64 with openpty. 
-<a name="OPTION_PTY_INTERVAL"></a><p><dt><strong><strong><code>pty-interval=&lt;seconds&gt;</code></strong></strong><dd>
+<a name="OPTION_PTY_INTERVAL"></a><dt ><strong><strong ><code >pty-interval=&lt;seconds&gt;</code></strong></strong></dt>
    When the <a href="socat.html#OPTION_PTY_WAIT_SLAVE">wait-slave</a> option is set, socat
-   periodically checks the HUP condition using <code>poll()</code> to find if the pty's
+   periodically checks the HUP condition using <code >poll()</code> to find if the pty's
    slave side has been opened. The default polling interval is 1s. Use the
    pty-interval option [<a href="socat.html#TYPE_TIMEVAL">timeval</a>] to change this value.
-</dl>
+enddit()
 <p>
-<dl></dl><br>
+startdit()enddit()<br/>
 <p>
-<a name="GROUP_OPENSSL"></a><em><strong>OPENSSL option group</strong></em>
+<a name="GROUP_OPENSSL"></a><em ><strong >OPENSSL option group</strong></em>
 <p>
 These options apply to the <a href="socat.html#ADDRESS_OPENSSL_CONNECT">openssl</a> and
 <a href="socat.html#ADDRESS_OPENSSL_LISTEN">openssl-listen</a> address types.
 <p>
-<dl>
-<a name="OPTION_OPENSSL_CIPHERLIST"></a><p><dt><strong><strong><code>cipher=&lt;cipherlist&gt;</code></strong></strong><dd>
+startdit()
+<a name="OPTION_OPENSSL_CIPHERLIST"></a><dt ><strong><strong ><code >cipher=&lt;cipherlist&gt;</code></strong></strong></dt>
    Selects the list of ciphers that may be used for the connection.
    See the man page of 
-<code>ciphers</code>
-, section <strong>CIPHER LIST FORMAT</strong>, for
-   detailed information about syntax, values, and default of &lt;cipherlist&gt;.<br>
+<code >ciphers</code>
+, section <strong >CIPHER LIST FORMAT</strong>, for
+   detailed information about syntax, values, and default of &lt;cipherlist&gt;.<br/>
    Several cipher strings may be given, separated by ':'.
    Some simple cipher strings:
-   <dl>
-   <p><dt><strong>3DES</strong><dd> Uses a cipher suite with triple DES.
-   <p><dt><strong>MD5</strong><dd> Uses a cipher suite with MD5.
-   <p><dt><strong>aNULL</strong><dd> Uses a cipher suite without authentication.
-   <p><dt><strong>NULL</strong><dd> Does not use encryption.
-   <p><dt><strong>HIGH</strong><dd> Uses a cipher suite with "high" encryption.
-   </dl>
+   startdit()
+   <dt ><strong>3DES</strong></dt> Uses a cipher suite with triple DES.
+   <dt ><strong>MD5</strong></dt> Uses a cipher suite with MD5.
+   <dt ><strong>aNULL</strong></dt> Uses a cipher suite without authentication.
+   <dt ><strong>NULL</strong></dt> Does not use encryption.
+   <dt ><strong>HIGH</strong></dt> Uses a cipher suite with "high" encryption.
+   enddit()
    Note that the peer must support the selected property, or the negotiation
    will fail.
-<a name="OPTION_OPENSSL_METHOD"></a><p><dt><strong><strong><code>method=&lt;ssl-method&gt;</code></strong></strong><dd>
+<a name="OPTION_OPENSSL_METHOD"></a><dt ><strong><strong ><code >method=&lt;ssl-method&gt;</code></strong></strong></dt>
    This option is based on deprecated functions and is only available when
-   <strong>socat</strong> was build with option <code>--with-openssl-method</code>.
+   <strong >socat</strong> was build with option <code >--with-openssl-method</code>.
    Sets the protocol version to be used. Valid strings (not case sensitive)
    are:  
-   <dl>
-   <p><dt><strong><code>SSL2</code></strong><dd> Select SSL protocol version 2.
-   <p><dt><strong><code>SSL3</code></strong><dd> Select SSL protocol version 3.
-   <p><dt><strong><code>SSL23</code></strong><dd> Select the best available SSL or TLS protocol.
-   <p><dt><strong><code>TLS1</code></strong><dd> Select TLS protocol version 1.
-   <p><dt><strong><code>TLS1.1</code></strong><dd> Select TLS protocol version 1.1.
-   <p><dt><strong><code>TLS1.2</code></strong><dd> Select TLS protocol version 1.2.
+   startdit()
+   <dt ><strong><code >SSL2</code></strong></dt> Select SSL protocol version 2.
+   <dt ><strong><code >SSL3</code></strong></dt> Select SSL protocol version 3.
+   <dt ><strong><code >SSL23</code></strong></dt> Select the best available SSL or TLS protocol.
+   <dt ><strong><code >TLS1</code></strong></dt> Select TLS protocol version 1.
+   <dt ><strong><code >TLS1.1</code></strong></dt> Select TLS protocol version 1.1.
+   <dt ><strong><code >TLS1.2</code></strong></dt> Select TLS protocol version 1.2.
    When this option is not provided OpenSSL negotiates the mothod with its
    peer.
-   </dl>
-<a name="OPTION_OPENSSL_VERIFY"></a><p><dt><strong><strong><code>verify=&lt;bool&gt;</code></strong></strong><dd>
+   enddit()
+<a name="OPTION_OPENSSL_VERIFY"></a><dt ><strong><strong ><code >verify=&lt;bool&gt;</code></strong></strong></dt>
    Controls check of the peer's certificate. Default is 1 (true). Disabling
    verify might open your socket for everyone, making the encryption useless!
-<a name="OPTION_OPENSSL_CERTIFICATE"></a><p><dt><strong><strong><code>cert=&lt;filename&gt;</code></strong></strong><dd>
+<a name="OPTION_OPENSSL_CERTIFICATE"></a><dt ><strong><strong ><code >cert=&lt;filename&gt;</code></strong></strong></dt>
    Specifies the file with the certificate and private key for authentication. 
    The certificate must be in OpenSSL format (*.pem). 
    With openssl-listen, use of this option is strongly
    recommended. Except with cipher aNULL, "no shared ciphers" error will
    occur when no certificate is given.
-<a name="OPTION_OPENSSL_KEY"></a><p><dt><strong><strong><code>key=&lt;filename&gt;</code></strong></strong><dd>
+<a name="OPTION_OPENSSL_KEY"></a><dt ><strong><strong ><code >key=&lt;filename&gt;</code></strong></strong></dt>
    Specifies the file with the private key. The private key may be in this
    file or in the file given with the <a href="socat.html#OPTION_OPENSSL_CERTIFICATE">cert</a> option. The party that has
    to proof that it is the owner of a certificate needs the private key.
-<a name="OPTION_OPENSSL_DHPARAMS"></a><p><dt><strong><strong><code>dhparams=&lt;filename&gt;</code></strong></strong><dd>
+<a name="OPTION_OPENSSL_DHPARAMS"></a><dt ><strong><strong ><code >dhparams=&lt;filename&gt;</code></strong></strong></dt>
    Specifies the file with the Diffie Hellman parameters. These parameters may
    also be in the file given with the <a href="socat.html#OPTION_OPENSSL_CERTIFICATE">cert</a>
    option in which case the dhparams option is not needed.
-<a name="OPTION_OPENSSL_CAFILE"></a><p><dt><strong><strong><code>cafile=&lt;filename&gt;</code></strong></strong><dd>
+<a name="OPTION_OPENSSL_CAFILE"></a><dt ><strong><strong ><code >cafile=&lt;filename&gt;</code></strong></strong></dt>
    Specifies the file with the trusted (root) authority certificates. The file
    must be in PEM format and should contain one or more certificates. The party
    that checks the authentication of its peer trusts only certificates that are
    in this file.
-<a name="OPTION_OPENSSL_CAPATH"></a><p><dt><strong><strong><code>capath=&lt;dirname&gt;</code></strong></strong><dd>
+<a name="OPTION_OPENSSL_CAPATH"></a><dt ><strong><strong ><code >capath=&lt;dirname&gt;</code></strong></strong></dt>
    Specifies the directory with the trusted (root) certificates. The directory
    must contain certificates in PEM format and their hashes (see OpenSSL
    documentation) 
-<a name="OPTION_OPENSSL_EGD"></a><p><dt><strong><strong><code>egd=&lt;filename&gt;</code></strong></strong><dd>
+<a name="OPTION_OPENSSL_EGD"></a><dt ><strong><strong ><code >egd=&lt;filename&gt;</code></strong></strong></dt>
    On some systems, openssl requires an explicit source of random data. Specify
    the socket name where an entropy gathering daemon like egd provides random
    data, e.g. /dev/egd-pool.
-<a name="OPTION_OPENSSL_PSEUDO"></a><p><dt><strong><strong><code>pseudo</code></strong></strong><dd>
+<a name="OPTION_OPENSSL_PSEUDO"></a><dt ><strong><strong ><code >pseudo</code></strong></strong></dt>
    On systems where openssl cannot find an entropy source and where no entropy
    gathering daemon can be utilized, this option activates a mechanism for
    providing pseudo entropy. This is achieved by taking the current time in
    microseconds for feeding the libc pseudo random number generator with an
-   initial value. openssl is then feeded with output from random() calls.<br>
+   initial value. openssl is then feeded with output from random() calls.<br/>
    NOTE:This mechanism is not sufficient for generation of secure keys!
-<a name="OPTION_OPENSSL_COMPRESS"></a><p><dt><strong><strong><code>compress</code></strong></strong><dd>
+<a name="OPTION_OPENSSL_COMPRESS"></a><dt ><strong><strong ><code >compress</code></strong></strong></dt>
    Enable or disable the use of compression for a connection. Setting this to
    "none" disables compression, setting it to "auto" lets OpenSSL choose the best
    available algorithm supported by both parties. The default is to not touch any
    compression-related settings.
    NOTE: Requires OpenSSL 0.9.8 or higher and disabling compression with
    OpenSSL 0.9.8 affects all new connections in the process.
-<a name="OPTION_OPENSSL_COMMONNAME"></a><p><dt><strong><strong><code>commonname=&lt;string&gt;</code></strong></strong><dd>
+<a name="OPTION_OPENSSL_COMMONNAME"></a><dt ><strong><strong ><code >commonname=&lt;string&gt;</code></strong></strong></dt>
    Specify the commonname that the peer certificate must match. With
    <a href="socat.html#ADDRESS_OPENSSL_CONNECT">OPENSSL-CONNECT</a> address this overrides the
    given hostname or IP target address; with
@@ -2807,241 +2852,253 @@
    certificates commonname. This option has only meaning when option
    <a href="socat.html#OPTION_OPENSSL_VERIFY">verify</a> is not disabled and the chosen cipher
    provides a peer certificate.
-<a name="OPTION_OPENSSL_FIPS"></a><p><dt><strong><strong><code>fips</code></strong></strong><dd>
+<a name="OPTION_OPENSSL_FIPS"></a><dt ><strong><strong ><code >fips</code></strong></strong></dt>
    Enables FIPS mode if compiled in. For info about the FIPS encryption
    implementation standard see <a href="http://oss-institute.org/fips-faq.html">http://oss-institute.org/fips-faq.html</a>. 
    This mode might require that the involved certificates are generated with a
    FIPS enabled version of openssl. Setting or clearing this option on one
    socat address affects all OpenSSL addresses of this process.
-</dl>
+enddit()
 <p>
-<dl></dl><br>
+startdit()enddit()<br/>
 <p>
-<a name="GROUP_RETRY"></a><em><strong>RETRY option group</strong></em>
+<a name="GROUP_RETRY"></a><em ><strong >RETRY option group</strong></em>
 <p>
 Options that control retry of some system calls, especially connection
 attempts.
 <p>
-<dl>
-<a name="OPTION_RETRY"></a><p><dt><strong><strong><code>retry=&lt;num&gt;</code></strong></strong><dd>
+startdit()
+<a name="OPTION_RETRY"></a><dt ><strong><strong ><code >retry=&lt;num&gt;</code></strong></strong></dt>
    Number of retries before the connection or listen attempt is aborted. 
    Default is 0, which means just one attempt. 
-<a name="OPTION_INTERVAL"></a><p><dt><strong><strong><code>interval=&lt;timespec&gt;</code></strong></strong><dd>
+<a name="OPTION_INTERVAL"></a><dt ><strong><strong ><code >interval=&lt;timespec&gt;</code></strong></strong></dt>
    Time between consecutive attempts (seconds, 
    [<a href="socat.html#TYPE_TIMESPEC">timespec</a>]). Default is 1 second.
-<a name="OPTION_FOREVER"></a><p><dt><strong><strong><code>forever</code></strong></strong><dd>
+<a name="OPTION_FOREVER"></a><dt ><strong><strong ><code >forever</code></strong></strong></dt>
    Performs an unlimited number of retry attempts.
-</dl>
+enddit()
 <p>
-<dl></dl><br>
+startdit()enddit()<br/>
 <p>
-<a name="GROUP_TUN"></a><em><strong>TUN option group</strong></em>
+<a name="GROUP_TUN"></a><em ><strong >TUN option group</strong></em>
 <p>
 Options that control Linux TUN/TAP interface device addresses.
 <p>
-<dl>
-<a name="OPTION_TUN_DEVICE"></a><p><dt><strong><strong><code>tun-device=&lt;device-file&gt;</code></strong></strong><dd>
+startdit()
+<a name="OPTION_TUN_DEVICE"></a><dt ><strong><strong ><code >tun-device=&lt;device-file&gt;</code></strong></strong></dt>
    Instructs socat to take another path for the TUN clone device. Default is
-   <code>/dev/net/tun</code>.
-<a name="OPTION_TUN_NAME"></a><p><dt><strong><strong><code>tun-name=&lt;if-name&gt;</code></strong></strong><dd>
+   <code >/dev/net/tun</code>.
+<a name="OPTION_TUN_NAME"></a><dt ><strong><strong ><code >tun-name=&lt;if-name&gt;</code></strong></strong></dt>
    Gives the resulting network interface a specific name instead of the system
    generated (tun0, tun1, etc.)
-<a name="OPTION_TUN_TYPE"></a><p><dt><strong><strong><code>tun-type=[tun|tap]</code></strong></strong><dd>
+<a name="OPTION_TUN_TYPE"></a><dt ><strong><strong ><code >tun-type=[tun|tap]</code></strong></strong></dt>
    Sets the type of the TUN device; use this option to generate a TAP
    device. See the Linux docu for the difference between these types.
    When you try to establish a tunnel between two TUN devices, their types
    should be the same.
-<a name="OPTION_IFF_NO_PI"></a><p><dt><strong><strong><code>iff-no-pi</code></strong></strong><dd>
+<a name="OPTION_IFF_NO_PI"></a><dt ><strong><strong ><code >iff-no-pi</code></strong></strong></dt>
    Sets the IFF_NO_PI flag which controls if the device includes additional
    packet information in the tunnel.
    When you try to establish a tunnel between two TUN devices, these flags
    should have the same values.
-<a name="OPTION_IFF_UP"></a><p><dt><strong><strong><code>iff-up</code></strong></strong><dd>
+<a name="OPTION_IFF_UP"></a><dt ><strong><strong ><code >iff-up</code></strong></strong></dt>
    Sets the TUN network interface status UP. Strongly recommended.
-<a name="OPTION_IFF_BROADCAST"></a><p><dt><strong><strong><code>iff-broadcast</code></strong></strong><dd>
+<a name="OPTION_IFF_BROADCAST"></a><dt ><strong><strong ><code >iff-broadcast</code></strong></strong></dt>
    Sets the BROADCAST flag of the TUN network interface.
-<a name="OPTION_IFF_DEBUG"></a><p><dt><strong><strong><code>iff-debug</code></strong></strong><dd>
+<a name="OPTION_IFF_DEBUG"></a><dt ><strong><strong ><code >iff-debug</code></strong></strong></dt>
    Sets the DEBUG flag of the TUN network interface.
-<a name="OPTION_IFF_LOOPBACK"></a><p><dt><strong><strong><code>iff-loopback</code></strong></strong><dd>
+<a name="OPTION_IFF_LOOPBACK"></a><dt ><strong><strong ><code >iff-loopback</code></strong></strong></dt>
    Sets the LOOPBACK flag of the TUN network interface.
-<a name="OPTION_IFF_POINTOPOINT"></a><p><dt><strong><strong><code>iff-pointopoint</code></strong></strong><dd>
+<a name="OPTION_IFF_POINTOPOINT"></a><dt ><strong><strong ><code >iff-pointopoint</code></strong></strong></dt>
    Sets the POINTOPOINT flag of the TUN device.
-<a name="OPTION_IFF_NOTRAILERS"></a><p><dt><strong><strong><code>iff-notrailers</code></strong></strong><dd>
+<a name="OPTION_IFF_NOTRAILERS"></a><dt ><strong><strong ><code >iff-notrailers</code></strong></strong></dt>
    Sets the NOTRAILERS flag of the TUN device.
-<a name="OPTION_IFF_RUNNING"></a><p><dt><strong><strong><code>iff-running</code></strong></strong><dd>
+<a name="OPTION_IFF_RUNNING"></a><dt ><strong><strong ><code >iff-running</code></strong></strong></dt>
    Sets the RUNNING flag of the TUN device.
-<a name="OPTION_IFF_NOARP"></a><p><dt><strong><strong><code>iff-noarp</code></strong></strong><dd>
+<a name="OPTION_IFF_NOARP"></a><dt ><strong><strong ><code >iff-noarp</code></strong></strong></dt>
    Sets the NOARP flag of the TUN device.
-<a name="OPTION_IFF_PROMISC"></a><p><dt><strong><strong><code>iff-promisc</code></strong></strong><dd>
+<a name="OPTION_IFF_PROMISC"></a><dt ><strong><strong ><code >iff-promisc</code></strong></strong></dt>
    Sets the PROMISC flag of the TUN device.
-<a name="OPTION_IFF_ALLMULTI"></a><p><dt><strong><strong><code>iff-allmulti</code></strong></strong><dd>
+<a name="OPTION_IFF_ALLMULTI"></a><dt ><strong><strong ><code >iff-allmulti</code></strong></strong></dt>
    Sets the ALLMULTI flag of the TUN device.
-<a name="OPTION_IFF_MASTER"></a><p><dt><strong><strong><code>iff-master</code></strong></strong><dd>
+<a name="OPTION_IFF_MASTER"></a><dt ><strong><strong ><code >iff-master</code></strong></strong></dt>
    Sets the MASTER flag of the TUN device.
-<a name="OPTION_IFF_SLAVE"></a><p><dt><strong><strong><code>iff-slave</code></strong></strong><dd>
+<a name="OPTION_IFF_SLAVE"></a><dt ><strong><strong ><code >iff-slave</code></strong></strong></dt>
    Sets the SLAVE flag of the TUN device.
-<a name="OPTION_IFF_MULTICAST"></a><p><dt><strong><strong><code>iff-multicast</code></strong></strong><dd>
+<a name="OPTION_IFF_MULTICAST"></a><dt ><strong><strong ><code >iff-multicast</code></strong></strong></dt>
    Sets the MULTICAST flag of the TUN device.
-<a name="OPTION_IFFPORTSEL_"></a><p><dt><strong><strong><code>iff-portsel</code></strong></strong><dd>
+<a name="OPTION_IFFPORTSEL_"></a><dt ><strong><strong ><code >iff-portsel</code></strong></strong></dt>
    Sets the PORTSEL flag of the TUN device.
-<a name="OPTION_IFF_AUTOMEDIA"></a><p><dt><strong><strong><code>iff-automedia</code></strong></strong><dd>
+<a name="OPTION_IFF_AUTOMEDIA"></a><dt ><strong><strong ><code >iff-automedia</code></strong></strong></dt>
    Sets the AUTOMEDIA flag of the TUN device.
-<a name="OPTION_IFF_DYNAMIC"></a><p><dt><strong><strong><code>iff-dynamic</code></strong></strong><dd>
+<a name="OPTION_IFF_DYNAMIC"></a><dt ><strong><strong ><code >iff-dynamic</code></strong></strong></dt>
    Sets the DYNAMIC flag of the TUN device.
-</dl>
+enddit()
 <p>
-<dl></dl><br>
+startdit()enddit()<br/>
 <p>
 <a name="VALUES"></a>
-<h2>DATA VALUES</h2>
+<h2 >DATA VALUES</h2>
 <p>
 This section explains the different data types that address parameters and
 address options can take.
 <p>
-<dl>
-<a name="TYPE_ADDRESS_RANGE"></a><p><dt><strong>address-range</strong><dd>
+startdit()
+<a name="TYPE_ADDRESS_RANGE"></a><dt ><strong>address-range</strong></dt>
    Is currently only implemented for IPv4 and IPv6. See address-option
    <a href="socat.html#OPTION_RANGE">`range'</a> 
-<a name="TYPE_BOOL"></a><p><dt><strong>bool</strong><dd>
+<a name="TYPE_BOOL"></a><dt ><strong>bool</strong></dt>
    "0" or "1"; if value is omitted, "1" is taken.
-<a name="TYPE_BYTE"></a><p><dt><strong>byte</strong><dd>
+<a name="TYPE_BYTE"></a><dt ><strong>byte</strong></dt>
    An unsigned int number, read with 
-<code>strtoul()</code>
+<code >strtoul()</code>
 , lower or equal to
    
-<code>UCHAR_MAX</code>
+<code >UCHAR_MAX</code>
 .
-<a name="TYPE_COMMAND_LINE"></a><p><dt><strong>command-line</strong><dd>
+<a name="TYPE_COMMAND_LINE"></a><dt ><strong>command-line</strong></dt>
    A string specifying a program name and its arguments, separated by single
    spaces. 
-<a name="TYPE_DATA"></a><p><dt><strong>data</strong><dd>
-   A raw data specification following <em>dalan</em> syntax. Currently the only
+<a name="TYPE_DATA"></a><dt ><strong>data</strong></dt>
+   A raw data specification following <em >dalan</em> syntax. Currently the only
    valid form is a string starting with 'x' followed by an even number of hex
    digits, specifying a sequence of bytes.
-<a name="TYPE_DIRECTORY"></a><p><dt><strong>directory</strong><dd>
+<a name="TYPE_DIRECTORY"></a><dt ><strong>directory</strong></dt>
    A string with usual UN*X directory name semantics.
-<a name="TYPE_FACILITY"></a><p><dt><strong>facility</strong><dd>
+<a name="TYPE_FACILITY"></a><dt ><strong>facility</strong></dt>
    The name of a syslog facility in lower case characters.
-<a name="TYPE_FDNUM"></a><p><dt><strong>fdnum</strong><dd>
+<a name="TYPE_FDNUM"></a><dt ><strong>fdnum</strong></dt>
    An unsigned int type, read with 
-<code>strtoul()</code>
+<code >strtoul()</code>
 , specifying a UN*X file
    descriptor. 
-<a name="TYPE_FILENAME"></a><p><dt><strong>filename</strong><dd>
+<a name="TYPE_FILENAME"></a><dt ><strong>filename</strong></dt>
    A string with usual UN*X filename semantics.
-<a name="TYPE_GROUP"></a><p><dt><strong>group</strong><dd>
+<a name="TYPE_GROUP"></a><dt ><strong>group</strong></dt>
    If the first character is a decimal digit, the value is read with
    
-<code>strtoul()</code>
+<code >strtoul()</code>
  as unsigned integer specifying a group id. Otherwise, it
    must be an existing group name.
-<a name="TYPE_INT"></a><p><dt><strong>int</strong><dd>
+<a name="TYPE_INT"></a><dt ><strong>int</strong></dt>
    A number following the rules of the 
-<code>strtol()</code>
+<code >strtol()</code>
  function with base
    "0", i.e. decimal number, octal number with leading "0", or hexadecimal
    number with leading "0x". The value must fit into a C int.
-<a name="TYPE_INTERFACE"></a><p><dt><strong>interface</strong><dd>
+<a name="TYPE_INTERFACE"></a><dt ><strong>interface</strong></dt>
    A string specifying the device name of a network interface
    as shown by ifconfig or procan, e.g. "eth0".
-<a name="TYPE_IP_ADDRESS"></a><p><dt><strong>IP address</strong><dd>
+<a name="TYPE_IP_ADDRESS"></a><dt ><strong>IP address</strong></dt>
    An IPv4 address in numbers-and-dots notation, an IPv6 address in hex
    notation enclosed in brackets, or a hostname that resolves to an IPv4 or an
-   IPv6 address.<br>
+   IPv6 address.<br/>
    Examples: 127.0.0.1, [::1], www.dest-unreach.org, dns1
-<a name="TYPE_IPV4_ADDRESS"></a><p><dt><strong>IPv4 address</strong><dd>
+<a name="TYPE_IPV4_ADDRESS"></a><dt ><strong>IPv4 address</strong></dt>
    An IPv4 address in numbers-and-dots notation or a hostname that resolves to
-   an IPv4 address.<br>
+   an IPv4 address.<br/>
    Examples: 127.0.0.1, www.dest-unreach.org, dns2
-<a name="TYPE_IPV6_ADDRESS"></a><p><dt><strong>IPv6 address</strong><dd>
+<a name="TYPE_IPV6_ADDRESS"></a><dt ><strong>IPv6 address</strong></dt>
    An iPv6 address in hexnumbers-and-colons notation enclosed in brackets, or a
-   hostname that resolves to an IPv6 address.<br>
+   hostname that resolves to an IPv6 address.<br/>
    Examples: [::1], [1234:5678:9abc:def0:1234:5678:9abc:def0],
    ip6name.domain.org 
-<a name="TYPE_LONG"></a><p><dt><strong>long</strong><dd>
+<a name="TYPE_LONG"></a><dt ><strong>long</strong></dt>
    A number read with 
-<code>strtol()</code>
+<code >strtol()</code>
 . The value must fit into a C long.
-<a name="TYPE_LONGLONG"></a><p><dt><strong>long long</strong><dd>
+<a name="TYPE_LONGLONG"></a><dt ><strong>long long</strong></dt>
    A number read with 
-<code>strtoll()</code>
+<code >strtoll()</code>
 . The value must fit into a C long long.
-<a name="TYPE_OFF"></a><p><dt><strong>off_t</strong><dd>
+<a name="TYPE_OFF"></a><dt ><strong>off_t</strong></dt>
    An implementation dependend signed number, usually 32 bits, read with strtol
    or strtoll.
-<a name="TYPE_OFF64"></a><p><dt><strong>off64_t</strong><dd>
+<a name="TYPE_OFF64"></a><dt ><strong>off64_t</strong></dt>
    An implementation dependend signed number, usually 64 bits, read with strtol
    or strtoll.
-<a name="TYPE_MODE_T"></a><p><dt><strong>mode_t</strong><dd>
+<a name="TYPE_MODE_T"></a><dt ><strong>mode_t</strong></dt>
    An unsigned integer, read with 
-<code>strtoul()</code>
+<code >strtoul()</code>
 , specifying mode (permission)
    bits. 
-<a name="TYPE_PID_T"></a><p><dt><strong>pid_t</strong><dd>
+<a name="TYPE_PID_T"></a><dt ><strong>pid_t</strong></dt>
    A number, read with 
-<code>strtol()</code>
+<code >strtol()</code>
 , specifying a process id.
-<a name="TYPE_PORT"></a><p><dt><strong>port</strong><dd>
+<a name="TYPE_PORT"></a><dt ><strong>port</strong></dt>
    A uint16_t (16 bit unsigned number) specifying a TCP or UDP port, read
    with 
-<code>strtoul()</code>
+<code >strtoul()</code>
 .
-<a name="TYPE_PROTOCOL"></a><p><dt><strong>protocol</strong><dd>
+<a name="TYPE_PROTOCOL"></a><dt ><strong>protocol</strong></dt>
    An unsigned 8 bit number, read with 
-<code>strtoul()</code>
+<code >strtoul()</code>
 .
-<a name="TYPE_SIZE_T"></a><p><dt><strong>size_t</strong><dd>
+<a name="TYPE_SIZE_T"></a><dt ><strong>size_t</strong></dt>
    An unsigned number with size_t limitations, read with 
-<code>strtoul</code>
+<code >strtoul</code>
 .
-<a name="TYPE_SOCKNAME"></a><p><dt><strong>sockname</strong><dd>
+<a name="TYPE_SOCKNAME"></a><dt ><strong>sockname</strong></dt>
    A socket address. See address-option <a href="socat.html#OPTION_BIND">`bind'</a>
-<a name="TYPE_STRING"></a><p><dt><strong>string</strong><dd>
+<a name="TYPE_STRING"></a><dt ><strong>string</strong></dt>
    A sequence of characters, not containing '\0' and, depending on
    the position within the command line, ':', ',', or "!!". Note
    that you might have to escape shell meta characters in the command line.
-<a name="TYPE_TCP_SERVICE"></a><p><dt><strong>TCP service</strong><dd>
+<a name="TYPE_TCP_SERVICE"></a><dt ><strong>TCP service</strong></dt>
    A service name, not starting with a digit, that is resolved by
    
-<code>getservbyname()</code>
+<code >getservbyname()</code>
 , or an unsigned int 16 bit number read with
    
-<code>strtoul()</code>
+<code >strtoul()</code>
 .
-<a name="TYPE_TIMEVAL"></a><p><dt><strong>timeval</strong><dd>
+<a name="TYPE_TIMEVAL"></a><dt ><strong>timeval</strong></dt>
    A double float specifying seconds; the number is mapped into a
    struct timeval, consisting of seconds and microseconds.
-<a name="TYPE_TIMESPEC"></a><p><dt><strong>timespec</strong><dd>
+<a name="TYPE_TIMESPEC"></a><dt ><strong>timespec</strong></dt>
    A double float specifying seconds; the number is mapped into a
    struct timespec, consisting of seconds and nanoseconds.
-<a name="TYPE_UDP_SERVICE"></a><p><dt><strong>UDP service</strong><dd>
+<a name="TYPE_UDP_SERVICE"></a><dt ><strong>UDP service</strong></dt>
    A service name, not starting with a digit, that is resolved by
    
-<code>getservbyname()</code>
+<code >getservbyname()</code>
 , or an unsigned int 16 bit number read with
    
-<code>strtoul()</code>
+<code >strtoul()</code>
 .
-<a name="TYPE_UNSIGNED_INT"></a><p><dt><strong>unsigned int</strong><dd>
+<a name="TYPE_UNSIGNED_INT"></a><dt ><strong>unsigned int</strong></dt>
    A number read with 
-<code>strtoul()</code>
+<code >strtoul()</code>
 . The value must fit into a C unsigned
    int. 
-<a name="TYPE_USER"></a><p><dt><strong>user</strong><dd>
+<a name="TYPE_USER"></a><dt ><strong>user</strong></dt>
    If the first character is a decimal digit, the value is read with
    
-<code>strtoul()</code>
+<code >strtoul()</code>
  as unsigned integer specifying a user id. Otherwise, it must
    be an existing user name.
-</dl>
+<a name="TYPE_VSOCK_ADDRESS"></a><dt ><strong>VSOCK cid</strong></dt>
+   A uint32_t (32 bit unsigned number) specifying a VSOCK Context Identifier
+   (CID), read with 
+<code >strtoul()</code>
+.
+   There are several special addresses: VMADDR_CID_ANY (-1U) means any address
+   for binding; VMADDR_CID_HOST (2) is the well-known address of the host.
+<a name="TYPE_VSOCK_PORT"></a><dt ><strong>VSOCK port</strong></dt>
+   A uint32_t (32 bit unsigned number) specifying a VSOCK port, read
+   with 
+<code >strtoul()</code>
+.
+enddit()
 <p>
 <a name="EXAMPLES"></a>
-<h2>EXAMPLES</h2>
+<h2 >EXAMPLES</h2>
 <p>
-<dl>
+startdit()
 <p>
 <a name="EXAMPLE_ADDRESS_TCP4_CONNECT"></a>
-<p><dt><strong><strong><code>socat - TCP4:www.domain.org:80</code></strong></strong><dd>
+<dt ><strong><strong ><code >socat - TCP4:www.domain.org:80</code></strong></strong></dt>
 <p>
 transfers data between <a href="socat.html#ADDRESS_STDIO">STDIO</a> (-) and a
 <a href="socat.html#ADDRESS_TCP4_CONNECT">TCP4</a> connection to port 80 of host 
@@ -3059,13 +3116,13 @@
 <p>
 this is similar to the previous example, but you can edit the current line in a
 bash like manner (<a href="socat.html#ADDRESS_READLINE">READLINE</a>) and use the
-<a href="socat.html#OPTION_HISTORY">history</a> file .http_history; <strong>socat</strong> prints messages about
+<a href="socat.html#OPTION_HISTORY">history</a> file .http_history; <strong >socat</strong> prints messages about
 progress (<a href="socat.html#option_d_d">-d -d</a>). The  port is specified by service name
 (www), and correct network line termination characters
 (<a href="socat.html#OPTION_CRNL">crnl</a>) instead of NL are used.
 <p>
 <a name="EXAMPLE_ADDRESS_TCP4_LISTEN"></a>
-<p><dt><strong><strong><code>socat TCP4-LISTEN:www TCP4:www.domain.org:www</code></strong></strong><dd>
+<dt ><strong><strong ><code >socat TCP4-LISTEN:www TCP4:www.domain.org:www</code></strong></strong></dt>
 <p>
 installs a simple TCP port forwarder. With
 <a href="socat.html#ADDRESS_TCP4_LISTEN">TCP4-LISTEN</a> it listens on local port "www" until a
@@ -3090,7 +3147,7 @@
 arbitrary number of parallel or consecutive connections by
 <a href="socat.html#OPTION_FORK">fork</a>'ing a new 
 process after each 
-<code>accept()</code>
+<code >accept()</code>
 . It provides a little security by
 <a href="socat.html#OPTION_SUBSTUSER">su</a>'ing to user 
 nobody after forking; it only permits connections from the private 10 network
@@ -3121,11 +3178,11 @@
 5 hosts_access").
 For <a href="socat.html#ADDRESS_EXEC">EXEC</a>'uting the program, the child process
 <a href="socat.html#OPTION_CHROOT">chroot</a>'s 
-to <strong>/home/sandbox</strong>, <a href="socat.html#OPTION_SUBSTUSER">su</a>'s to user sandbox, and then starts 
-the program <strong>/home/sandbox/bin/myscript</strong>. <strong>Socat</strong> and
+to <strong >/home/sandbox</strong>, <a href="socat.html#OPTION_SUBSTUSER">su</a>'s to user sandbox, and then starts 
+the program <strong >/home/sandbox/bin/myscript</strong>. <strong >Socat</strong> and
 myscript communicate via a pseudo tty (<a href="socat.html#OPTION_PTY">pty</a>); myscript's
 <a href="socat.html#OPTION_STDERR">stderr</a> is redirected to stdout,
-so its error messages are transferred via <strong>socat</strong> to the connected client. 
+so its error messages are transferred via <strong >socat</strong> to the connected client. 
 <p>
 <a name="EXAMPLE_OPTION_FDIN"></a>
 <a name="EXAMPLE_OPTION_FDOUT"></a>
@@ -3137,14 +3194,14 @@
 <dt><code><strong>socat EXEC:"mail.sh target@domain.com",fdin=3,fdout=4 \</strong><br>
 <strong>TCP4:mail.relay.org:25,crnl,bind=alias1.server.org,mss=512</strong></code><dd>
 <p>
-<strong>mail.sh</strong> is a shell script, distributed with <strong>socat</strong>, that implements a
+<strong >mail.sh</strong> is a shell script, distributed with <strong >socat</strong>, that implements a
 simple 
 SMTP client. It is programmed to "speak" SMTP on its FDs 3 (in) and 4 (out).
-The <a href="socat.html#OPTION_FDIN">fdin</a> and <a href="socat.html#OPTION_FDOUT">fdout</a> options tell <strong>socat</strong>
+The <a href="socat.html#OPTION_FDIN">fdin</a> and <a href="socat.html#OPTION_FDOUT">fdout</a> options tell <strong >socat</strong>
 to use these FDs for communication with 
-the program. Because mail.sh inherits stdin and stdout while <strong>socat</strong> does not
+the program. Because mail.sh inherits stdin and stdout while <strong >socat</strong> does not
 use them, the script can read a
-mail body from stdin. <strong>Socat</strong> makes alias1 your local source address
+mail body from stdin. <strong >Socat</strong> makes alias1 your local source address
 (<a href="socat.html#OPTION_BIND">bind</a>), cares for correct network line termination
 (<a href="socat.html#OPTION_CRNL">crnl</a>) and sends  
 at most 512 data bytes per packet (<a href="socat.html#OPTION_MSS">mss</a>). 
@@ -3152,7 +3209,7 @@
 <a name="EXAMPLE_ADDRESS_GOPEN"></a>
 <a name="EXAMPLE_OPTION_TERMIOS_RAWER"></a>
 <a name="EXAMPLE_OPTION_ESCAPE"></a>
-<p><dt><strong><strong><code>socat -,escape=0x0f /dev/ttyS0,rawer,crnl</code></strong></strong><dd>
+<dt ><strong><strong ><code >socat -,escape=0x0f /dev/ttyS0,rawer,crnl</code></strong></strong></dt>
 <p>
 opens an interactive connection via the serial line, e.g. for talking with a
 modem. <a href="socat.html#OPTION_TERMIOS_RAWER">rawer</a> sets the console's and
@@ -3171,13 +3228,13 @@
 <dt><code><strong>socat UNIX-LISTEN:/tmp/.X11-unix/X1,fork \</strong><br>
 <strong>SOCKS4:host.victim.org:127.0.0.1:6000,socksuser=nobody,sourceport=20</strong></code><dd>
 <p>
-with <a href="socat.html#ADDRESS_UNIX_LISTEN">UNIX-LISTEN</a>, <strong>socat</strong> opens a listening
-UNIX domain socket <strong>/tmp/.X11-unix/X1</strong>. This path corresponds 
+with <a href="socat.html#ADDRESS_UNIX_LISTEN">UNIX-LISTEN</a>, <strong >socat</strong> opens a listening
+UNIX domain socket <strong >/tmp/.X11-unix/X1</strong>. This path corresponds 
 to local XWindow display :1 on your machine, so XWindow client connections to
-DISPLAY=:1 are accepted. <strong>Socat</strong> then speaks with
+DISPLAY=:1 are accepted. <strong >Socat</strong> then speaks with
 the <a href="socat.html#ADDRESS_SOCKS4">SOCKS4</a> server host.victim.org that might permit 
 <a href="socat.html#OPTION_SOURCEPORT">sourceport</a> 20 based connections due to an FTP related
-weakness in its static IP filters. <strong>Socat</strong>
+weakness in its static IP filters. <strong >Socat</strong>
 pretends to be invoked by <a href="socat.html#OPTION_SOCKSUSER">socksuser</a> nobody, and
 requests to be connected to 
 loopback port 6000 (only weak sockd configurations will allow this). So we get
@@ -3188,12 +3245,12 @@
 <p>
 <a name="EXAMPLE_option_u"></a>
 <a name="EXAMPLE_OPTION_IGNOREEOF"></a>
-<p><dt><strong><strong><code>socat -u /tmp/readdata,seek-end=0,ignoreeof -</code></strong></strong><dd>
+<dt ><strong><strong ><code >socat -u /tmp/readdata,seek-end=0,ignoreeof -</code></strong></strong></dt>
 <p>
 this is an example for unidirectional data transfer
-(<a href="socat.html#option_u">-u</a>). <strong>Socat</strong> transfers data 
+(<a href="socat.html#option_u">-u</a>). <strong >Socat</strong> transfers data 
 from file /tmp/readdata (implicit address <a href="socat.html#ADDRESS_GOPEN">GOPEN</a>), starting
-at its current end (<a href="socat.html#OPTION_SEEK_END">seek-end</a>=0 lets <strong>socat</strong> start 
+at its current end (<a href="socat.html#OPTION_SEEK_END">seek-end</a>=0 lets <strong >socat</strong> start 
 reading at current end of file; use <a href="socat.html#OPTION_SEEK">seek</a>=0 or no
 seek option to first read the existing data) in a "tail -f" like mode
 (<a href="socat.html#OPTION_IGNOREEOF">ignoreeof</a>). The "file" 
@@ -3207,10 +3264,10 @@
 <dt><code><strong>(sleep 5; echo PASSWORD; sleep 5; echo ls; sleep 1) |</strong><br>
 <strong>socat - EXEC:'ssh -l user server',pty,setsid,ctty</strong></code><dd>
 <p>
-<a href="socat.html#ADDRESS_EXEC">EXEC</a>'utes an ssh session to server. Uses a <a href="socat.html#OPTION_PTY">pty</a> for communication between <strong>socat</strong> and
+<a href="socat.html#ADDRESS_EXEC">EXEC</a>'utes an ssh session to server. Uses a <a href="socat.html#OPTION_PTY">pty</a> for communication between <strong >socat</strong> and
 ssh, makes it ssh's controlling tty (<a href="socat.html#OPTION_CTTY">ctty</a>), 
 and makes this pty the owner of
-a new process group (<a href="socat.html#OPTION_SETSID">setsid</a>), so ssh accepts the password from <strong>socat</strong>.
+a new process group (<a href="socat.html#OPTION_SETSID">setsid</a>), so ssh accepts the password from <strong >socat</strong>.
 <p>
 <a name="EXAMPLE_ADDRESS_OPEN"></a>
 <a name="EXAMPLE_OPTION_CREAT"></a>
@@ -3230,7 +3287,7 @@
 <p>
 
 <a name="EXAMPLE_OPTION_NOECHO"></a>
-<p><dt><strong><strong><code>socat READLINE,noecho='[Pp]assword:' EXEC:'ftp ftp.server.com',pty,setsid,ctty</code></strong></strong><dd>
+<dt ><strong><strong ><code >socat READLINE,noecho='[Pp]assword:' EXEC:'ftp ftp.server.com',pty,setsid,ctty</code></strong></strong></dt>
 <p>
 wraps a command line history (<a href="socat.html#ADDRESS_READLINE">READLINE</a>) around the <a href="socat.html#ADDRESS_EXEC">EXEC</a>'uted ftp client utility.
 This allows editing and reuse of FTP commands for relatively comfortable
@@ -3252,11 +3309,11 @@
 <p>
 generates a pseudo terminal 
 device (<a href="socat.html#ADDRESS_PTY">PTY</a>) on the client that can be reached under the
-symbolic <a href="socat.html#OPTION_SYMBOLIC_LINK">link</a> <strong>$HOME/dev/vmodem0</strong>. 
+symbolic <a href="socat.html#OPTION_SYMBOLIC_LINK">link</a> <strong >$HOME/dev/vmodem0</strong>. 
 An application that expects a serial line or modem
-can be configured to use <strong>$HOME/dev/vmodem0</strong>; its traffic will be directed
+can be configured to use <strong >$HOME/dev/vmodem0</strong>; its traffic will be directed
 to a modemserver via ssh where another socat instance links it to
-<strong>/dev/ttyS0</strong>.
+<strong >/dev/ttyS0</strong>.
 <p>
 
 
@@ -3271,7 +3328,7 @@
 should establish connections to host www.domain.org on port 22 then.
 <p>
 <a name="EXAMPLE_ADDRESS_OPENSSL_CONNECT"></a>
-<p><dt><strong><strong><code>socat - SSL:server:4443,cafile=server.crt,cert=client.pem</code></strong></strong><dd>
+<dt ><strong><strong ><code >socat - SSL:server:4443,cafile=server.crt,cert=client.pem</code></strong></strong></dt>
 <p>
 is an OpenSSL client that tries to establish a secure connection to an SSL
 server. Option <a href="socat.html#OPTION_OPENSSL_CAFILE">cafile</a> specifies a file that
@@ -3280,21 +3337,21 @@
 Otherwise the connection is terminated.
 With <a href="socat.html#OPTION_OPENSSL_CERTIFICATE">cert</a> a file containing the client certificate
 and the associated private key is specified. This is required in case the
-server wishes a client authentication; many Internet servers do not.<br>
+server wishes a client authentication; many Internet servers do not.<br/>
 The first address ('-') can be replaced by almost any other socat address.
 <p>
 <a name="EXAMPLE_ADDRESS_OPENSSL_LISTEN"></a>
-<p><dt><strong><strong><code>socat OPENSSL-LISTEN:4443,reuseaddr,pf=ip4,fork,cert=server.pem,cafile=client.crt PIPE</code></strong></strong><dd>
+<dt ><strong><strong ><code >socat OPENSSL-LISTEN:4443,reuseaddr,pf=ip4,fork,cert=server.pem,cafile=client.crt PIPE</code></strong></strong></dt>
 <p>
 is an OpenSSL server that accepts TCP connections, presents the certificate
 from the file server.pem and forces the client to present a certificate that is
-verified against cafile.crt.<br>
+verified against cafile.crt.<br/>
 The second address ('PIPE') can be replaced by almost any other socat
-address.<br>
+address.<br/>
 For instructions on generating and distributing OpenSSL keys and certificates
-see the additional socat docu <code>socat-openssl.txt</code>.
+see the additional socat docu <code >socat-openssl.txt</code>.
 <p>
-<p><dt><strong><strong><code>echo |socat -u - file:/tmp/bigfile,create,largefile,seek=100000000000</code></strong></strong><dd>
+<dt ><strong><strong ><code >echo |socat -u - file:/tmp/bigfile,create,largefile,seek=100000000000</code></strong></strong></dt>
 <p>
 creates a 100GB sparse file; this requires a file system type that
 supports this (ext2, ext3, reiserfs, jfs; not minix, vfat). The operation of
@@ -3302,25 +3359,25 @@
 the resulting file can consume some disk space with just its inodes (reiserfs:
 2MB; ext2: 16KB). 
 <p>
-<p><dt><strong><strong><code>socat tcp-l:7777,reuseaddr,fork system:'filan -i 0 -s &gt;&amp;2',nofork</code></strong></strong><dd>
+<dt ><strong><strong ><code >socat tcp-l:7777,reuseaddr,fork system:'filan -i 0 -s &gt;&amp;2',nofork</code></strong></strong></dt>
 <p>
 listens for incoming TCP connections on port 7777. For each accepted
 connection, invokes a shell. This shell has its stdin and stdout directly
 connected to the TCP socket (<a href="socat.html#OPTION_NOFORK">nofork</a>).  The shell starts filan and lets it print the socket addresses to
 stderr (your terminal window).
 <p>
-<p><dt><strong><strong><code>echo -e "\0\14\0\0\c" |socat -u - file:/usr/bin/squid.exe,seek=0x00074420</code></strong></strong><dd>
+<dt ><strong><strong ><code >echo -e "\0\14\0\0\c" |socat -u - file:/usr/bin/squid.exe,seek=0x00074420</code></strong></strong></dt>
 <p>
 functions as primitive binary editor: it writes the 4 bytes 000 014 000 000 to
 the executable /usr/bin/squid at offset 0x00074420 (this is a real world patch
 to make the squid executable from Cygwin run under Windows, actual per May 2004).
 <p>
-<p><dt><strong><strong><code>socat - tcp:www.blackhat.org:31337,readbytes=1000</code></strong></strong><dd>
+<dt ><strong><strong ><code >socat - tcp:www.blackhat.org:31337,readbytes=1000</code></strong></strong></dt>
 <p>
 connects to an unknown service and prevents being flooded.
 <p>
 <a name="EXAMPLE_END_CLOSE"></a>
-<p><dt><strong><strong><code>socat -U TCP:target:9999,end-close TCP-L:8888,reuseaddr,fork</code></strong></strong><dd>
+<dt ><strong><strong ><code >socat -U TCP:target:9999,end-close TCP-L:8888,reuseaddr,fork</code></strong></strong></dt>
 <p>
 merges data arriving from different TCP streams on port 8888 to just one stream
 to target:9999. The <a href="socat.html#OPTION_END_CLOSE">end-close</a> option prevents the child
@@ -3330,27 +3387,27 @@
 connection).
 <p>
 <a name="EXAMPLE_ADDRESS_UDP4_BROADCAST_CLIENT"></a>
-<p><dt><strong><strong><code>socat - UDP4-DATAGRAM:192.168.1.0:123,sp=123,broadcast,range=192.168.1.0/24</code></strong></strong><dd>
+<dt ><strong><strong ><code >socat - UDP4-DATAGRAM:192.168.1.0:123,sp=123,broadcast,range=192.168.1.0/24</code></strong></strong></dt>
 <p>
 sends a broadcast to the network 192.168.1.0/24 and receives the replies of the
 timeservers there. Ignores NTP packets from hosts outside this network.
 <p>
 <a name="EXAMPLE_ADDRESS_GENERIC_CLIENT"></a>
-<p><dt><strong><strong><code>socat - SOCKET-DATAGRAM:2:2:17:x007bxc0a80100x0000000000000000,bind=x007bx00000000x0000000000000000,setsockopt-int=1:6:1,range=x0000xc0a80100x0000000000000000:x0000xffffff00x0000000000000000</code></strong></strong><dd>
+<dt ><strong><strong ><code >socat - SOCKET-DATAGRAM:2:2:17:x007bxc0a80100x0000000000000000,bind=x007bx00000000x0000000000000000,setsockopt-int=1:6:1,range=x0000xc0a80100x0000000000000000:x0000xffffff00x0000000000000000</code></strong></strong></dt>
 <p>
 is semantically equivalent to the <a href="socat.html#EXAMPLE_ADDRESS_UDP4_BROADCAST_CLIENT">previous
 example</a>, but all parameters are
 specified in generic form. the value 6 of setsockopt-int is the Linux value for
-<code>SO_BROADCAST</code>.
+<code >SO_BROADCAST</code>.
 <p>
 <a name="EXAMPLE_ADDRESS_IP4_BROADCAST_CLIENT"></a>
-<p><dt><strong><strong><code>socat - IP4-DATAGRAM:255.255.255.255:44,broadcast,range=10.0.0.0/8</code></strong></strong><dd>
+<dt ><strong><strong ><code >socat - IP4-DATAGRAM:255.255.255.255:44,broadcast,range=10.0.0.0/8</code></strong></strong></dt>
 <p>
 sends a broadcast to the local network(s) using protocol 44. Accepts replies
 from the private address range only.
 <p>
 <a name="EXAMPLE_ADDRESS_UDP4_MULTICAST"></a>
-<p><dt><strong><strong><code>socat - UDP4-DATAGRAM:224.255.0.1:6666,bind=:6666,ip-add-membership=224.255.0.1:eth0</code></strong></strong><dd>
+<dt ><strong><strong ><code >socat - UDP4-DATAGRAM:224.255.0.1:6666,bind=:6666,ip-add-membership=224.255.0.1:eth0</code></strong></strong></dt>
 <p>
 transfers data from stdin to the specified multicast address using UDP. Both
 local and remote ports are 6666. Tells the interface eth0 to also accept
@@ -3361,7 +3418,7 @@
 operating system, bridges, or a badly configured switch.
 <p>
 <a name="EXAMPLE_ADDRESS_TUN"></a>
-<p><dt><strong><strong><code>socat TCP:host2:4443 TUN:192.168.255.1/24,up</code></strong></strong><dd>
+<dt ><strong><strong ><code >socat TCP:host2:4443 TUN:192.168.255.1/24,up</code></strong></strong></dt>
 <p>
 establishes one side of a virtual (but not private!) network with host2 where a
 similar process might run, with UDP-L and tun address 192.168.255.2. They can
@@ -3369,17 +3426,50 @@
 streaming eg. via TCP or SSL does not guarantee to retain packet boundaries and
 may thus cause packet loss.
 <p>
+<a name="EXAMPLE_ADDRESS_VSOCK"></a>
+<dt ><strong><strong ><code >socat - VSOCK-CONNECT:2:1234</code></strong></strong></dt>
+<p>
+establishes a VSOCK connection with the host (host is always reachable with
+the well-know CID=2) on 1234 port.
+<p>
+<dt ><strong><strong ><code >socat - VSOCK-LISTEN:1234</code></strong></strong></dt>
+<p>
+listens for a VSOCK connection on 1234 port.
+<p>
+<dt ><strong><strong ><code >socat - VSOCK-CONNECT:31:4321,bind:5555</code></strong></strong></dt>
+<p>
+establishes a VSOCK connection with the guest that have CID=31 on 1234 port,
+binding the local socket to the 5555 port.
+<p>
+<dt ><strong><strong ><code >socat VSOCK-LISTEN:3333,reuseaddr,fork VSOCK-CONNECT:42,3333</code></strong></strong></dt>
+<p>
+starts a forwarder that accepts VSOCK connections on port 3333, and directs
+them to the guest with CID=42 on the same port.
+<p>
+<dt ><strong><strong ><code >socat VSOCK-LISTEN:22,reuseaddr,fork TCP:localhost:22</code></strong></strong></dt>
+<p>
+forwards VSOCK connections from 22 port to the local SSH server.
+Running this in a VM allows you to connect via SSH from the host using VSOCK,
+as in the example below.
+<p>
+<dt ><strong><strong ><code >socat TCP4-LISTEN:22222,reuseaddr,fork VSOCK-CONNECT:33:22</code></strong></strong></dt>
+<p>
+forwards TCP connections from 22222 port to the guest with CID=33 listening on
+VSOCK port 22.
+Running this in the host, allows you to connect via SSH running
+"ssh -p 22222 user@localhost", if the guest runs the example above.
+<p>
 <a name="EXAMPLE_INTERFACE"></a>
-<p><dt><strong><strong><code>socat PTY,link=/var/run/ppp,rawer INTERFACE:hdlc0</code></strong></strong><dd>
+<dt ><strong><strong ><code >socat PTY,link=/var/run/ppp,rawer INTERFACE:hdlc0</code></strong></strong></dt>
 <p>
 circumvents the problem that pppd requires a serial device and thus might not
 be able to work on a synchronous line that is represented by a network device.
 socat creates a PTY to make pppd happy, binds to the network
-<a href="socat.html#ADDRESS_INTERFACE">interface</a> <code>hdlc0</code>, and can transfer data between
-both devices. Use pppd on device <code>/var/run/ppp</code> then.
+<a href="socat.html#ADDRESS_INTERFACE">interface</a> <code >hdlc0</code>, and can transfer data between
+both devices. Use pppd on device <code >/var/run/ppp</code> then.
 <p>
 <a name="EXAMPLE_HTTPECHO"></a>
-<p><dt><strong><strong><code>socat -T 1 -d -d TCP-L:10081,reuseaddr,fork,crlf SYSTEM:"echo -e \"\\\"HTTP/1.0 200 OK\\\nDocumentType: text/plain\\\n\\\ndate: \$\(date\)\\\nserver:\$SOCAT_SOCKADDR:\$SOCAT_SOCKPORT\\\nclient: \$SOCAT_PEERADDR:\$SOCAT_PEERPORT\\\n\\\"\"; cat; echo -e \"\\\"\\\n\\\"\""</code></strong></strong><dd>
+<dt ><strong><strong ><code >socat -T 1 -d -d TCP-L:10081,reuseaddr,fork,crlf SYSTEM:"echo -e \"\\\"HTTP/1.0 200 OK\\\nDocumentType: text/plain\\\n\\\ndate: \$\(date\)\\\nserver:\$SOCAT_SOCKADDR:\$SOCAT_SOCKPORT\\\nclient: \$SOCAT_PEERADDR:\$SOCAT_PEERPORT\\\n\\\"\"; cat; echo -e \"\\\"\\\n\\\"\""</code></strong></strong></dt>
 <p>
 creates a simple HTTP echo server: each HTTP client that connects gets a valid
 HTTP reply that contains information about the client address and port as it is
@@ -3387,22 +3477,22 @@
 servers), and the original client request.
 <p>
 <a name="EXAMPLE_ANCILLARY"></a>
-<p><dt><strong><strong><code>socat -d -d UDP4-RECVFROM:9999,so-broadcast,so-timestamp,ip-pktinfo,ip-recverr,ip-recvopts,ip-recvtos,ip-recvttl!!- SYSTEM:'export; sleep 1' |grep SOCAT</code></strong></strong><dd>
+<dt ><strong><strong ><code >socat -d -d UDP4-RECVFROM:9999,so-broadcast,so-timestamp,ip-pktinfo,ip-recverr,ip-recvopts,ip-recvtos,ip-recvttl!!- SYSTEM:'export; sleep 1' |grep SOCAT</code></strong></strong></dt>
 <p>
 waits for an incoming UDP packet on port 9999 and prints the environment 
 variables provided by socat. On BSD based systems you have to replace
-<a href="socat.html#OPTION_IP_PKTINFO"><code>ip-pktinfo</code></a> with <a href="socat.html#OPTION_IP_RECVDSTADDR"><code>ip-recvdstaddr</code></a>,<a href="socat.html#OPTION_IP_RECVIF"><code>ip-recvif</code></a>. Especially interesting is
+<a href="socat.html#OPTION_IP_PKTINFO"><code >ip-pktinfo</code></a> with <a href="socat.html#OPTION_IP_RECVDSTADDR"><code >ip-recvdstaddr</code></a>,<a href="socat.html#OPTION_IP_RECVIF"><code >ip-recvif</code></a>. Especially interesting is
 SOCAT_IP_DSTADDR: it contains the target address of the packet which may be a
 unicast, multicast, or broadcast address.
 <p>
-<p><dt><strong><strong><code></code></strong></strong><dd>
+<dt ><strong><strong ><code ></code></strong></strong></dt>
 <p>
-</dl>
+enddit()
 <p>
 <a name="DIAGNOSTICS"></a>
-<h2>DIAGNOSTICS</h2>
+<h2 >DIAGNOSTICS</h2>
 <p>
-<strong>Socat</strong> uses a logging mechanism that allows filtering messages by severity. The
+<strong >Socat</strong> uses a logging mechanism that allows filtering messages by severity. The
 severities provided are more or less compatible to the appropriate syslog
 priority. With one or up to four occurrences of the -d command line option, the
 lowest priority of messages that are issued can be selected. Each message
@@ -3410,32 +3500,32 @@
 F, E, W, N, I, or D)
 <p>
 <dl>
-<p><dt><strong>FATAL:</strong><dd> Conditions that require unconditional and immediate program termination.
-<p><dt><strong>ERROR:</strong><dd> Conditions that prevent proper program processing. Usually the
+<dt ><strong>FATAL:</strong></dt> Conditions that require unconditional and immediate program termination.
+<dt ><strong>ERROR:</strong></dt> Conditions that prevent proper program processing. Usually the
 program is terminated (see <a href="socat.html#option_s">option -s</a>).
-<p><dt><strong>WARNING:</strong><dd> Something did not function correctly or is in a state where
+<dt ><strong>WARNING:</strong></dt> Something did not function correctly or is in a state where
 correct further processing cannot be guaranteed, but might be possible.
-<p><dt><strong>NOTICE:</strong><dd> Interesting actions of the program, e.g. for supervising <strong>socat</strong> in some kind of server mode.
-<p><dt><strong>INFO:</strong><dd> Description of what the program does, and maybe why it
+<dt ><strong>NOTICE:</strong></dt> Interesting actions of the program, e.g. for supervising <strong >socat</strong> in some kind of server mode.
+<dt ><strong>INFO:</strong></dt> Description of what the program does, and maybe why it
 happens. Allows monitoring the lifecycles of file descriptors.
-<p><dt><strong>DEBUG:</strong><dd> Description of how the program works, all system or library calls and their results.
+<dt ><strong>DEBUG:</strong></dt> Description of how the program works, all system or library calls and their results.
 </dl>
 <p>
 Log messages can be written to stderr, to a file, or to syslog.
 <p>
-On exit, <strong>socat</strong> gives status 0 if it terminated due to EOF or inactivity
+On exit, <strong >socat</strong> gives status 0 if it terminated due to EOF or inactivity
 timeout, with a positive value on error, and with a negative value on fatal
 error. 
 <p>
 <a name="FILES"></a>
-<h2>FILES</h2>
+<h2 >FILES</h2>
 <p>
-/usr/bin/socat <br>
-/usr/bin/filan <br>
+/usr/bin/socat <br/>
+/usr/bin/filan <br/>
 /usr/bin/procan
 <p>
 <a name="ENVIRONMENT_VARIABLES"></a>
-<h2>ENVIRONMENT VARIABLES</h2>
+<h2 >ENVIRONMENT VARIABLES</h2>
 <p>
 Input variables carry information from the environment to socat, output
 variables are set by socat for use in executed scripts and programs.
@@ -3444,14 +3534,14 @@
 by the upper case name of the executable or the value of option
 <a href="socat.html#option_lp">-lp</a>.
 <p>
-<dl>
+startdit()
 <a name="ENV_SOCAT_DEFAULT_LISTEN_IP"></a>
-<p><dt><strong><strong>SOCAT_DEFAULT_LISTEN_IP</strong> (input)</strong><dd> (Values 4 or 6) Sets the IP version to
+<dt ><strong><strong >SOCAT_DEFAULT_LISTEN_IP</strong> (input)</strong></dt> (Values 4 or 6) Sets the IP version to
 be used for listen, recv, and recvfrom addresses if no
 <a href="socat.html#OPTION_PROTOCOL_FAMILY">pf</a> (protocol-family) option is given. Is
 overridden by socat options <a href="socat.html#option_4">-4</a> or <a href="socat.html#option_6">-6</a>.
 <p>
-<p><dt><strong><strong>SOCAT_PREFERRED_RESOLVE_IP</strong> (input)</strong><dd> (Values 0, 4, or 6) Sets the IP
+<dt ><strong><strong >SOCAT_PREFERRED_RESOLVE_IP</strong> (input)</strong></dt> (Values 0, 4, or 6) Sets the IP
 version to 
 be used when resolving target host names when version is not specified by
 address type, option <a href="socat.html#OPTION_PROTOCOL_FAMILY">pf</a> (protocol-family), or
@@ -3459,145 +3549,145 @@
 result (with differing IP version) is taken. With value 0, socat always selects
 the first record and its IP version. 
 <p>
-<p><dt><strong><strong>SOCAT_FORK_WAIT</strong> (input)</strong><dd> Specifies the time (seconds) to sleep the
+<dt ><strong><strong >SOCAT_FORK_WAIT</strong> (input)</strong></dt> Specifies the time (seconds) to sleep the
 parent and child processes after successful fork(). Useful for debugging.
 <p>
-<p><dt><strong><strong>SOCAT_VERSION</strong> (output)</strong><dd> Socat sets this variable to its version string,
-e.g. <code>"1.7.0.0"</code> for released versions or e.g. <code>"1.6.0.1+envvar"</code> for
+<dt ><strong><strong >SOCAT_VERSION</strong> (output)</strong></dt> Socat sets this variable to its version string,
+e.g. <code >"1.7.0.0"</code> for released versions or e.g. <code >"1.6.0.1+envvar"</code> for
 temporary versions; can be used in scripts invoked by socat. 
 <p>
-<p><dt><strong><strong>SOCAT_PID</strong> (output)</strong><dd> Socat sets this variable to its process id. In case
+<dt ><strong><strong >SOCAT_PID</strong> (output)</strong></dt> Socat sets this variable to its process id. In case
 of <a href="socat.html#OPTION_FORK">fork</a> address option, SOCAT_PID gets the child processes
 id. Forking for <a href="socat.html#ADDRESS_EXEC">exec</a> and <a href="socat.html#ADDRESS_SYSTEM">system</a> does
 not change SOCAT_PID.
 <p>
-<p><dt><strong><strong>SOCAT_PPID</strong> (output)</strong><dd> Socat sets this variable to its process id. In
+<dt ><strong><strong >SOCAT_PPID</strong> (output)</strong></dt> Socat sets this variable to its process id. In
 case of <a href="socat.html#OPTION_FORK">fork</a>, SOCAT_PPID keeps the pid of the master process.
 <p>
-<p><dt><strong><strong>SOCAT_PEERADDR</strong> (output)</strong><dd> With passive socket addresses (all LISTEN and
+<dt ><strong><strong >SOCAT_PEERADDR</strong> (output)</strong></dt> With passive socket addresses (all LISTEN and
 RECVFROM addresses), this variable is set to a string describing the peers
 socket address. Port information is not included.
 <p>
-<p><dt><strong><strong>SOCAT_PEERPORT</strong> (output)</strong><dd> With appropriate passive socket addresses
+<dt ><strong><strong >SOCAT_PEERPORT</strong> (output)</strong></dt> With appropriate passive socket addresses
 (TCP, UDP, and SCTP - LISTEN and RECVFROM), this variable is set to a string containing the
 number of the peer port.
 <p>
-<p><dt><strong><strong>SOCAT_SOCKADDR</strong> (output)</strong><dd> With all LISTEN addresses, this variable is
+<dt ><strong><strong >SOCAT_SOCKADDR</strong> (output)</strong></dt> With all LISTEN addresses, this variable is
 set to a string describing the local socket address. Port information is not
 included <a href="socat.html#EXAMPLE_HTTPECHO">example</a>
 <p>
-<p><dt><strong><strong>SOCAT_SOCKPORT</strong> (output)</strong><dd> With <a href="socat.html#ADDRESS_TCP_LISTEN">TCP-LISTEN</a>,
+<dt ><strong><strong >SOCAT_SOCKPORT</strong> (output)</strong></dt> With <a href="socat.html#ADDRESS_TCP_LISTEN">TCP-LISTEN</a>,
 <a href="socat.html#ADDRESS_UDP_LISTEN">UDP-LISTEN</a>, and
 <a href="socat.html#ADDRESS_SCTP_LISTEN">SCTP-LISTEN</a> addresses, this variable is set to the
 local port.
 <p>
-<p><dt><strong><strong>SOCAT_TIMESTAMP</strong> (output)</strong><dd> With all RECVFROM addresses where address
+<dt ><strong><strong >SOCAT_TIMESTAMP</strong> (output)</strong></dt> With all RECVFROM addresses where address
 option <a href="socat.html#OPTION_SO_TIMESTAMP">so-timestamp</a> is applied, socat sets this
 variable to the resulting timestamp.
 <p>
-<p><dt><strong><strong>SOCAT_IP_OPTIONS</strong> (output)</strong><dd> With all IPv4 based RECVFROM addresses where 
+<dt ><strong><strong >SOCAT_IP_OPTIONS</strong> (output)</strong></dt> With all IPv4 based RECVFROM addresses where 
 address option <a href="socat.html#OPTION_IP_RECVOPTS">ip-recvopts</a> is applied, socat fills
 this variable with the IP options of the received packet.
 <p>
-<p><dt><strong><strong>SOCAT_IP_DSTADDR</strong> (output)</strong><dd> With all IPv4 based RECVFROM addresses where
+<dt ><strong><strong >SOCAT_IP_DSTADDR</strong> (output)</strong></dt> With all IPv4 based RECVFROM addresses where
 address option <a href="socat.html#OPTION_IP_RECVDSTADDR">ip-recvdstaddr</a> (BSD) or
 <a href="socat.html#OPTION_IP_PKTINFO">ip-pktinfo</a> (other platforms) is applied, socat sets
 this variable to the destination address of the received packet. This is
 particularly useful to identify broadcast and multicast addressed packets.
 <p>
-<p><dt><strong><strong>SOCAT_IP_IF</strong> (output)</strong><dd> With all IPv4 based RECVFROM addresses where
+<dt ><strong><strong >SOCAT_IP_IF</strong> (output)</strong></dt> With all IPv4 based RECVFROM addresses where
 address option <a href="socat.html#OPTION_IP_RECVIF">ip-recvif</a> (BSD) or
 <a href="socat.html#OPTION_IP_PKTINFO">ip-pktinfo</a> (other platforms) is applied, socat sets 
 this variable to the name of the interface where the packet was received.
 <p>
-<p><dt><strong><strong>SOCAT_IP_LOCADDR</strong> (output)</strong><dd> With all IPv4 based RECVFROM
+<dt ><strong><strong >SOCAT_IP_LOCADDR</strong> (output)</strong></dt> With all IPv4 based RECVFROM
 addresses where address option <a href="socat.html#OPTION_IP_PKTINFO">ip-pktinfo</a> is applied,
 socat sets this variable to the address of the interface where the packet was
 received.
 <p>
-<p><dt><strong><strong>SOCAT_IP_TOS</strong> (output)</strong><dd> With all IPv4 based RECVFROM addresses where
+<dt ><strong><strong >SOCAT_IP_TOS</strong> (output)</strong></dt> With all IPv4 based RECVFROM addresses where
 address option <a href="socat.html#OPTION_IP_RECVTOS">ip-recvtos</a> is applied, socat sets this
 variable to the TOS (type of service) of the received packet.
 <p>
-<p><dt><strong><strong>SOCAT_IP_TTL</strong> (output)</strong><dd> With all IPv4 based RECVFROM addresses where
+<dt ><strong><strong >SOCAT_IP_TTL</strong> (output)</strong></dt> With all IPv4 based RECVFROM addresses where
 address option <a href="socat.html#OPTION_IP_RECVTTL">ip-recvttl</a> is applied, socat sets this
 variable to the TTL (time to live) of the received packet.
 <p>
-<p><dt><strong><strong>SOCAT_IPV6_HOPLIMIT</strong> (output)</strong><dd> With all IPv6 based RECVFROM addresses
+<dt ><strong><strong >SOCAT_IPV6_HOPLIMIT</strong> (output)</strong></dt> With all IPv6 based RECVFROM addresses
 where address option <a href="socat.html#OPTION_IPV6_RECVHOPLIMIT">ipv6-recvhoplimit</a> is
 applied, socat sets this variable to the hoplimit value of the received packet.
 <p>
-<p><dt><strong><strong>SOCAT_IPV6_DSTADDR</strong> (output)</strong><dd> With all IPv6 based RECVFROM
+<dt ><strong><strong >SOCAT_IPV6_DSTADDR</strong> (output)</strong></dt> With all IPv6 based RECVFROM
 addresses where address option <a href="socat.html#OPTION_IPV6_RECVPKTINFO">ipv6-recvpktinfo</a>
 is applied, socat sets this variable to the destination address of the received
 packet.
 <p>
-<p><dt><strong><strong>SOCAT_IPV6_TCLASS</strong> (output)</strong><dd> With all IPv6 based RECVFROM addresses
+<dt ><strong><strong >SOCAT_IPV6_TCLASS</strong> (output)</strong></dt> With all IPv6 based RECVFROM addresses
 where address option <a href="socat.html#OPTION_IPV6_RECVTCLASS">ipv6-recvtclass</a> is applied,
-<strong>socat</strong> sets this variable to the transfer class of the received packet.
+<strong >socat</strong> sets this variable to the transfer class of the received packet.
 <p>
-<p><dt><strong><strong>SOCAT_OPENSSL_X509_ISSUER</strong> (output)</strong><dd> Issuer field from peer certificate
+<dt ><strong><strong >SOCAT_OPENSSL_X509_ISSUER</strong> (output)</strong></dt> Issuer field from peer certificate
 <p>
-<p><dt><strong><strong>SOCAT_OPENSSL_X509_SUBJECT</strong> (output)</strong><dd> Subject field from peer certificate
+<dt ><strong><strong >SOCAT_OPENSSL_X509_SUBJECT</strong> (output)</strong></dt> Subject field from peer certificate
 <p>
-<p><dt><strong><strong>SOCAT_OPENSSL_X509_COMMONNAME</strong> (output)</strong><dd> commonName entries from peer certificates subject. Multiple values are separated by " // ".
+<dt ><strong><strong >SOCAT_OPENSSL_X509_COMMONNAME</strong> (output)</strong></dt> commonName entries from peer certificates subject. Multiple values are separated by " // ".
 <p>
-<p><dt><strong><strong>SOCAT_OPENSSL_X509_*</strong> (output)</strong><dd> all other entries from peer certificates subject
+<dt ><strong><strong >SOCAT_OPENSSL_X509_*</strong> (output)</strong></dt> all other entries from peer certificates subject
 <p>
-<p><dt><strong><strong>SOCAT_OPENSSL_X509V3_DNS</strong> (output)</strong><dd> DNS entries from peer certificates extensions - subjectAltName field. Multiple values are separated by " // ".
+<dt ><strong><strong >SOCAT_OPENSSL_X509V3_DNS</strong> (output)</strong></dt> DNS entries from peer certificates extensions - subjectAltName field. Multiple values are separated by " // ".
 <p>
-<p><dt><strong><strong>HOSTNAME</strong> (input)</strong><dd> Is used to determine the hostname for logging (see
+<dt ><strong><strong >HOSTNAME</strong> (input)</strong></dt> Is used to determine the hostname for logging (see
 <a href="socat.html#option_lh">-lh</a>).
 <p>
-<p><dt><strong><strong>LOGNAME</strong> (input)</strong><dd> Is used as name for the socks client user name if no
-<a href="socat.html#OPTION_SOCKSUSER">socksuser</a> is given.<br>
+<dt ><strong><strong >LOGNAME</strong> (input)</strong></dt> Is used as name for the socks client user name if no
+<a href="socat.html#OPTION_SOCKSUSER">socksuser</a> is given.<br/>
 With options <a href="socat.html#OPTION_SUBSTUSER">su</a> and
 <a href="socat.html#OPTION_SUBSTUSER_DELAYED">su-d</a>, LOGNAME is set to the given user name.
 <p>
-<p><dt><strong><strong>USER</strong> (input)</strong><dd> Is used as name for the socks client user name if no
-<a href="socat.html#OPTION_SOCKSUSER">socksuser</a> is given and LOGNAME is empty.<br>
+<dt ><strong><strong >USER</strong> (input)</strong></dt> Is used as name for the socks client user name if no
+<a href="socat.html#OPTION_SOCKSUSER">socksuser</a> is given and LOGNAME is empty.<br/>
 With options <a href="socat.html#OPTION_SUBSTUSER">su</a> and
 <a href="socat.html#OPTION_SUBSTUSER_DELAYED">su-d</a>, USER is set to the given user name.
 <p>
-<p><dt><strong><strong>SHELL</strong> (output)</strong><dd>
+<dt ><strong><strong >SHELL</strong> (output)</strong></dt>
 With options <a href="socat.html#OPTION_SUBSTUSER">su</a> and
 <a href="socat.html#OPTION_SUBSTUSER_DELAYED">su-d</a>, SHELL is set to the login shell of the
 given user.
 <p>
-<p><dt><strong><strong>PATH</strong> (output)</strong><dd>
+<dt ><strong><strong >PATH</strong> (output)</strong></dt>
 Can be set with option <a href="socat.html#OPTION_PATH">path</a> for <a href="socat.html#ADDRESS_EXEC">exec</a> and
 <a href="socat.html#ADDRESS_SYSTEM">system</a> addresses.
 <p>
-<p><dt><strong><strong>HOME</strong> (output)</strong><dd>
+<dt ><strong><strong >HOME</strong> (output)</strong></dt>
 With options <a href="socat.html#OPTION_SUBSTUSER">su</a> and
 <a href="socat.html#OPTION_SUBSTUSER_DELAYED">su-d</a>, HOME is set to the home directory of the
 given user.
 <p>
-</dl>
+enddit()
 <p>
 <a name="CREDITS"></a>
-<h2>CREDITS</h2>
+<h2 >CREDITS</h2>
 <p>
 The work of the following groups and organizations was invaluable for this
 project:
 <p>
-The <em>FSF</em> (GNU, <a href="http://www.fsf.org/">http://www.fsf.org/</a> project 
+The <em >FSF</em> (GNU, <a href="http://www.fsf.org/">http://www.fsf.org/</a> project 
 with their free and portable development software and
 lots of other useful tools and libraries.
 <p>
-The <em>Linux developers community</em> (<a href="http://www.linux.org/">http://www.linux.org/</a>) for providing a free, open source operating
+The <em >Linux developers community</em> (<a href="http://www.linux.org/">http://www.linux.org/</a>) for providing a free, open source operating
 system.
 <p>
-The <em>Open Group</em> (<a href="http://www.unix-systems.org/">http://www.unix-systems.org/</a>) for making their
+The <em >Open Group</em> (<a href="http://www.unix-systems.org/">http://www.unix-systems.org/</a>) for making their
 standard specifications available on the Internet for free.
 <p>
 <a name="VERSION"></a>
-<h2>VERSION</h2>
+<h2 >VERSION</h2>
 <p>
-This man page describes version 1.7.3 of <strong>socat</strong>.
+This man page describes version 1.7.3 of <strong >socat</strong>.
 <p>
 <a name="BUGS"></a>
-<h2>BUGS</h2>
+<h2 >BUGS</h2>
 <p>
 Addresses cannot be nested, so a single socat process cannot, e.g., drive ssl
 over socks.
@@ -3605,7 +3695,7 @@
 Address option ftruncate without value uses default 1 instead of 0.
 <p>
 Verbose modes (-x and/or -v) display line termination characters inconsistently
-when address options cr or crnl are used: They show the data <em>after</em>
+when address options cr or crnl are used: They show the data <em >after</em>
 conversion in either direction.
 <p>
 The data transfer blocksize setting (-b) is ignored with address readline.
@@ -3613,15 +3703,17 @@
 Send bug reports to &lt;socat@dest-unreach.org&gt;
 <p>
 <a name="SEEALSO"></a>
-<h2>SEE ALSO</h2>
+<h2 >SEE ALSO</h2>
 <p>
 
 nc(1), rinetd(8), openssl(1),
 stunnel(8), rlwrap(1), setsid(1)
 <p>
-<strong>Socat</strong> home page <a href="http://www.dest-unreach.org/socat/">http://www.dest-unreach.org/socat/</a>
+<strong >Socat</strong> home page <a href="http://www.dest-unreach.org/socat/">http://www.dest-unreach.org/socat/</a>
 <p>
 <a name="AUTHOR"></a>
-<h2>AUTHOR</h2>
+<h2 >AUTHOR</h2>
 <p>
 Gerhard Rieger &lt;rieger@dest-unreach.org&gt; and contributors
+</body>
+</html>
